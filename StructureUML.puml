@startuml
class org.biojava.nbio.structure.AugmentedResidueRange {
- AtomPositionMap map
+ ResidueNumber getResidue(int)
+ boolean contains(ResidueNumber)
+ Iterator<ResidueNumber> iterator()
}
class org.biojava.nbio.structure.align.util.RotationAxis {
~ {static} double MIN_ANGLE
- double theta
- Atom rotationAxis
- Atom rotationPos
- Atom screwTranslation
- Atom otherTranslation
+ double getAngle()
+ Atom getRotationAxis()
+ AxisAngle4d getAxisAngle4d()
+ Atom getRotationPos()
+ Atom getScrewTranslation()
+ Vector3d getVector3dScrewTranslation()
+ double getTranslation()
+ Matrix getRotationMatrix()
+ Matrix getRotationMatrix(double)
+ int guessOrderFromAngle(double,int)
+ Matrix getFullMatrix()
- void init(Matrix,Atom)
- void calculateRotationalAxis(Matrix,Atom,double)
- void calculateTranslationalAxis(Matrix,Atom)
+ String getJmolScript(Atom[])
+ Pair<Atom> getAxisEnds(Atom[])
+ String getJmolScript(Atom[],int)
+ Atom getProjectedPoint(Atom)
+ double getProjectedDistance(Atom)
+ void rotate(Atom[],double)
+ {static} double getAngle(AFPChain)
+ {static} double getAngle(Matrix)
+ boolean isDefined()
+ {static} double getAngle(Matrix4d)
+ {static} double getAngle(Matrix3d)
}
class org.biojava.nbio.structure.io.PDBBioAssemblyParser {
- Integer currentBioMolecule
- List<String> currentChainIDs
- Matrix currentMatrix
- double[] shift
- Map<Integer,BioAssemblyInfo> transformationMap
- int modelNumber
- List<BiologicalAssemblyTransformation> transformations
+ void pdb_REMARK_350_Handler(String)
+ Map<Integer,BioAssemblyInfo> getTransformationMap()
- boolean readMatrix(String)
- void saveMatrix()
- void addToCurrentChainList(String)
- void initialize()
+ void setMacromolecularSizes()
}
class org.biojava.nbio.structure.io.CAConverter {
+ {static} List<Chain> getRepresentativeAtomsOnly(List<Chain>)
+ {static} Chain getRepresentativeAtomsOnly(Chain)
}
class org.biojava.nbio.structure.io.BcifFileReader {
+ {static} String[] CIF_SPLIT_DIR
+ {static} String[] CIF_OBSOLETE_DIR
+ Structure getStructure(InputStream)
# String getFilename(String)
# String[] getSplitDirPath()
# String[] getObsoleteDirPath()
}
class org.biojava.nbio.structure.scop.ScopMirror {
- String rootURL
- String claURL
- String desURL
- String hieURL
- String comURL
+ String getRootURL()
+ String getClaURL(String)
+ String getDesURL(String)
+ String getHieURL(String)
+ String getComURL(String)
+ boolean isReachable()
}
class org.biojava.nbio.structure.quaternary.CartesianProduct {
- List<T> list1
- List<T> list2
+ List<OrderedPair<T>> getOrderedPairs()
}
class org.biojava.nbio.structure.io.mmcif.model.Refine {
~ String entry_id
~ String ls_number_reflns_obs
~ String ls_number_reflns_all
~ String pdbx_ls_sigma_I
~ String pdbx_ls_sigma_F
~ String pdbx_data_cutoff_high_absF
~ String pdbx_data_cutoff_low_absF
~ String pdbx_data_cutoff_high_rms_absF
~ String ls_d_res_low
~ String ls_d_res_high
~ String ls_percent_reflns_obs
~ String ls_R_factor_obs
~ String ls_R_factor_all
~ String ls_R_factor_R_work
~ String ls_R_factor_R_free
~ String ls_R_factor_R_free_error
~ String ls_R_factor_R_free_error_details
~ String ls_percent_reflns_R_free
~ String ls_number_reflns_R_free
~ String ls_number_parameters
~ String ls_number_restraints
~ String occupancy_min
~ String occupancy_max
~ String B_iso_mean
~ String aniso_B11
~ String aniso_B22
~ String aniso_B33
~ String aniso_B12
~ String aniso_B13
~ String aniso_B23
~ String solvent_model_details
~ String solvent_model_param_ksol
~ String solvent_model_param_bsol
~ String pdbx_ls_cross_valid_method
~ String details
~ String pdbx_starting_model
~ String pdbx_method_to_determine_struct
~ String pdbx_isotropic_thermal_model
~ String pdbx_stereochemistry_target_values
~ String pdbx_stereochem_target_val_spec_case
~ String pdbx_R_Free_selection_details
~ String pdbx_overall_ESU_R
~ String pdbx_overall_ESU_R_Free
~ String overall_SU_ML
~ String overall_SU_B
~ String ls_redundancy_reflns_obs
~ String pdbx_overall_phase_error
~ String B_iso_min
~ String B_iso_max
~ String correlation_coeff_Fo_to_Fc
~ String correlation_coeff_Fo_to_Fc_free
~ String pdbx_solvent_vdw_probe_radii
~ String pdbx_solvent_ion_probe_radii
~ String pdbx_solvent_shrinkage_radii
~ String overall_SU_R_Cruickshank_DPI
~ String overall_SU_R_free
~ String ls_wR_factor_R_free
~ String ls_wR_factor_R_work
~ String overall_FOM_free_R_set
~ String overall_FOM_work_R_set
~ String pdbx_refine_id
~ String pdbx_diffrn_id
~ String pdbx_TLS_residual_ADP_flag
~ String pdbx_overall_SU_R_free_Cruickshank_DPI
~ String pdbx_overall_SU_R_Blow_DPI
~ String pdbx_overall_SU_R_free_Blow_DPI
~ String ls_matrix_type
~ String ls_number_reflns_R_work
+ String getEntry_id()
+ void setEntry_id(String)
+ String getLs_number_reflns_obs()
+ void setLs_number_reflns_obs(String)
+ String getLs_number_reflns_all()
+ void setLs_number_reflns_all(String)
+ String getPdbx_ls_sigma_I()
+ void setPdbx_ls_sigma_I(String)
+ String getPdbx_ls_sigma_F()
+ void setPdbx_ls_sigma_F(String)
+ String getPdbx_data_cutoff_high_absF()
+ void setPdbx_data_cutoff_high_absF(String)
+ String getPdbx_data_cutoff_low_absF()
+ void setPdbx_data_cutoff_low_absF(String)
+ String getPdbx_data_cutoff_high_rms_absF()
+ void setPdbx_data_cutoff_high_rms_absF(String)
+ String getLs_d_res_low()
+ void setLs_d_res_low(String)
+ String getLs_d_res_high()
+ void setLs_d_res_high(String)
+ String getLs_percent_reflns_obs()
+ void setLs_percent_reflns_obs(String)
+ String getLs_R_factor_obs()
+ void setLs_R_factor_obs(String)
+ String getLs_R_factor_all()
+ void setLs_R_factor_all(String)
+ String getLs_R_factor_R_work()
+ void setLs_R_factor_R_work(String)
+ String getLs_R_factor_R_free()
+ void setLs_R_factor_R_free(String)
+ String getLs_R_factor_R_free_error()
+ void setLs_R_factor_R_free_error(String)
+ String getLs_R_factor_R_free_error_details()
+ void setLs_R_factor_R_free_error_details(String)
+ String getLs_percent_reflns_R_free()
+ void setLs_percent_reflns_R_free(String)
+ String getLs_number_reflns_R_free()
+ void setLs_number_reflns_R_free(String)
+ String getLs_number_parameters()
+ void setLs_number_parameters(String)
+ String getLs_number_restraints()
+ void setLs_number_restraints(String)
+ String getOccupancy_min()
+ void setOccupancy_min(String)
+ String getOccupancy_max()
+ void setOccupancy_max(String)
+ String getB_iso_mean()
+ void setB_iso_mean(String)
+ String getSolvent_model_details()
+ void setSolvent_model_details(String)
+ String getSolvent_model_param_ksol()
+ void setSolvent_model_param_ksol(String)
+ String getSolvent_model_param_bsol()
+ void setSolvent_model_param_bsol(String)
+ String getPdbx_ls_cross_valid_method()
+ void setPdbx_ls_cross_valid_method(String)
+ String getDetails()
+ void setDetails(String)
+ String getPdbx_starting_model()
+ void setPdbx_starting_model(String)
+ String getPdbx_method_to_determine_struct()
+ void setPdbx_method_to_determine_struct(String)
+ String getPdbx_isotropic_thermal_model()
+ void setPdbx_isotropic_thermal_model(String)
+ String getPdbx_stereochemistry_target_values()
+ void setPdbx_stereochemistry_target_values(String)
+ String getPdbx_stereochem_target_val_spec_case()
+ void setPdbx_stereochem_target_val_spec_case(String)
+ String getPdbx_R_Free_selection_details()
+ void setPdbx_R_Free_selection_details(String)
+ String getPdbx_overall_ESU_R()
+ void setPdbx_overall_ESU_R(String)
+ String getPdbx_overall_ESU_R_Free()
+ void setPdbx_overall_ESU_R_Free(String)
+ String getOverall_SU_ML()
+ void setOverall_SU_ML(String)
+ String getOverall_SU_B()
+ void setOverall_SU_B(String)
+ String getPdbx_refine_id()
+ void setPdbx_refine_id(String)
+ String getLs_redundancy_reflns_obs()
+ void setLs_redundancy_reflns_obs(String)
+ String getPdbx_overall_phase_error()
+ void setPdbx_overall_phase_error(String)
+ String getB_iso_min()
+ void setB_iso_min(String)
+ String getB_iso_max()
+ void setB_iso_max(String)
+ String getCorrelation_coeff_Fo_to_Fc()
+ void setCorrelation_coeff_Fo_to_Fc(String)
+ String getCorrelation_coeff_Fo_to_Fc_free()
+ void setCorrelation_coeff_Fo_to_Fc_free(String)
+ String getPdbx_solvent_vdw_probe_radii()
+ void setPdbx_solvent_vdw_probe_radii(String)
+ String getPdbx_solvent_ion_probe_radii()
+ void setPdbx_solvent_ion_probe_radii(String)
+ String getPdbx_solvent_shrinkage_radii()
+ void setPdbx_solvent_shrinkage_radii(String)
+ String getOverall_SU_R_Cruickshank_DPI()
+ void setOverall_SU_R_Cruickshank_DPI(String)
+ String getOverall_SU_R_free()
+ void setOverall_SU_R_free(String)
+ String getLs_wR_factor_R_free()
+ void setLs_wR_factor_R_free(String)
+ String getLs_wR_factor_R_work()
+ void setLs_wR_factor_R_work(String)
+ String getOverall_FOM_free_R_set()
+ void setOverall_FOM_free_R_set(String)
+ String getOverall_FOM_work_R_set()
+ void setOverall_FOM_work_R_set(String)
+ String getPdbx_diffrn_id()
+ void setPdbx_diffrn_id(String)
+ String getPdbx_TLS_residual_ADP_flag()
+ void setPdbx_TLS_residual_ADP_flag(String)
+ String getPdbx_overall_SU_R_free_Cruickshank_DPI()
+ void setPdbx_overall_SU_R_free_Cruickshank_DPI(String)
+ String getPdbx_overall_SU_R_Blow_DPI()
+ void setPdbx_overall_SU_R_Blow_DPI(String)
+ String getPdbx_overall_SU_R_free_Blow_DPI()
+ void setPdbx_overall_SU_R_free_Blow_DPI(String)
+ String getLs_matrix_type()
+ void setLs_matrix_type(String)
+ String getLs_number_reflns_R_work()
+ void setLs_number_reflns_R_work(String)
+ String getAniso_B11()
+ void setAniso_B11(String)
+ String getAniso_B22()
+ void setAniso_B22(String)
+ String getAniso_B33()
+ void setAniso_B33(String)
+ String getAniso_B12()
+ void setAniso_B12(String)
+ String getAniso_B13()
+ void setAniso_B13(String)
+ String getAniso_B23()
+ void setAniso_B23(String)
}
class org.biojava.nbio.structure.align.helper.IdxComparator {
- {static} long serialVersionUID
+ int compare(int[],int[])
}
class org.biojava.nbio.structure.secstruc.DSSPParser {
- {static} Logger logger
+ {static} List<SecStrucState> parseInputStream(InputStream,Structure,boolean)
+ {static} List<SecStrucState> parseFile(String,Structure,boolean)
+ {static} List<SecStrucState> parseString(String,Structure,boolean)
- {static} List<SecStrucState> generalParse(BufferedReader,Structure,boolean)
}
class org.biojava.nbio.structure.xtal.SpaceGroup {
- {static} long serialVersionUID
- {static} Logger logger
- {static} Pattern splitPat1
- {static} Pattern splitPat2
- {static} Pattern coordPat
- {static} Pattern transCoefPat
- {static} Pattern nonEnantPat
# {static} double DELTA
- int id
- int multiplicity
- int primitiveMultiplicity
- String shortSymbol
- String altShortSymbol
- List<Matrix4d> transformations
- List<String> transfAlgebraic
- Vector3d[] cellTranslations
- AxisAngle4d[] axisAngles
- int[] axisTypes
- BravaisLattice bravLattice
+ {static} SpaceGroup parseSpaceGroup(String)
+ void addTransformation(String)
# void initializeCellTranslations()
+ int getMultiplicity()
+ int getPrimitiveMultiplicity()
+ Vector3d[] getCellTranslations()
+ Vector3d getCellTranslation(int)
+ {static} Matrix4d getMatrixFromAlgebraic(String)
- {static} double[] convertAlgebraicStrToCoefficients(String)
+ int getId()
+ String getShortSymbol()
+ String getAltShortSymbol()
+ List<Matrix4d> getTransformations()
- void calcRotAxesAndAngles()
- void calcAxisFoldTypes()
+ AxisAngle4d getRotAxisAngle(int)
+ boolean areInSameAxis(int,int)
+ int getAxisFoldType(int)
+ Matrix4d getTransformation(int)
+ String getTransfAlgebraic(int)
+ int hashCode()
+ boolean equals(Object)
+ int getNumOperators()
+ {static} String getAlgebraicFromMatrix(Matrix4d)
- {static} String formatAlg(double,double,double,double)
- {static} String formatCoef(double,boolean)
- {static} String formatTransCoef(double)
# {static} boolean deltaComp(double,double,double)
+ BravaisLattice getBravLattice()
+ boolean isEnantiomorphic()
+ {static} AxisAngle4d getRotAxisAndAngle(Matrix3d)
+ {static} int getRotAxisType(Matrix4d)
+ String toString()
+ String toXML()
+ List<String> getTransfAlgebraic()
+ void setTransfAlgebraic(List<String>)
+ int[] getAxisTypes()
+ void setAxisTypes(int[])
+ {static} long getSerialversionuid()
+ {static} Pattern getSplitpat1()
+ {static} Pattern getSplitpat2()
+ {static} Pattern getCoordpat()
+ {static} Pattern getTranscoefpat()
+ {static} Pattern getNonenantpat()
+ {static} double getDelta()
+ void setId(int)
+ void setMultiplicity(int)
+ void setPrimitiveMultiplicity(int)
+ void setShortSymbol(String)
+ void setAltShortSymbol(String)
+ void setBravLattice(BravaisLattice)
}
class org.biojava.nbio.structure.Mutator {
~ List<String> supportedAtoms
+ Structure mutate(Structure,String,String,String)
+ AminoAcid mutateResidue(AminoAcid,String)
}
class org.biojava.nbio.structure.io.mmcif.model.StructConn {
- String id
- String conn_type_id
- String pdbx_PDB_id
- String ptnr1_label_asym_id
- String ptnr1_label_comp_id
- String ptnr1_label_seq_id
- String ptnr1_label_atom_id
- String pdbx_ptnr1_label_alt_id
- String pdbx_ptnr1_PDB_ins_code
- String pdbx_ptnr1_standard_comp_id
- String ptnr1_symmetry
- String ptnr2_label_asym_id
- String ptnr2_label_comp_id
- String ptnr2_label_seq_id
- String ptnr2_label_atom_id
- String pdbx_ptnr2_label_alt_id
- String pdbx_ptnr2_PDB_ins_code
- String ptnr1_auth_asym_id
- String ptnr1_auth_comp_id
- String ptnr1_auth_seq_id
- String ptnr2_auth_asym_id
- String ptnr2_auth_comp_id
- String ptnr2_auth_seq_id
- String ptnr2_symmetry
- String pdbx_ptnr3_label_atom_id
- String pdbx_ptnr3_label_seq_id
- String pdbx_ptnr3_label_comp_id
- String pdbx_ptnr3_label_asym_id
- String pdbx_ptnr3_label_alt_id
- String pdbx_ptnr3_PDB_ins_code
- String details
- String pdbx_dist_value
- String pdbx_value_order
- String pdbx_leaving_atom_flag
+ String getId()
+ void setId(String)
+ String getConn_type_id()
+ void setConn_type_id(String)
+ String getPdbx_PDB_id()
+ void setPdbx_PDB_id(String)
+ String getPtnr1_label_asym_id()
+ void setPtnr1_label_asym_id(String)
+ String getPtnr1_label_comp_id()
+ void setPtnr1_label_comp_id(String)
+ String getPtnr1_label_seq_id()
+ void setPtnr1_label_seq_id(String)
+ String getPtnr1_label_atom_id()
+ void setPtnr1_label_atom_id(String)
+ String getPdbx_ptnr1_label_alt_id()
+ void setPdbx_ptnr1_label_alt_id(String)
+ String getPdbx_ptnr1_PDB_ins_code()
+ void setPdbx_ptnr1_PDB_ins_code(String)
+ String getPdbx_ptnr1_standard_comp_id()
+ void setPdbx_ptnr1_standard_comp_id(String)
+ String getPtnr1_symmetry()
+ void setPtnr1_symmetry(String)
+ String getPtnr2_label_asym_id()
+ void setPtnr2_label_asym_id(String)
+ String getPtnr2_label_comp_id()
+ void setPtnr2_label_comp_id(String)
+ String getPtnr2_label_seq_id()
+ void setPtnr2_label_seq_id(String)
+ String getPtnr2_label_atom_id()
+ void setPtnr2_label_atom_id(String)
+ String getPdbx_ptnr2_label_alt_id()
+ void setPdbx_ptnr2_label_alt_id(String)
+ String getPdbx_ptnr2_PDB_ins_code()
+ void setPdbx_ptnr2_PDB_ins_code(String)
+ String getPtnr1_auth_asym_id()
+ void setPtnr1_auth_asym_id(String)
+ String getPtnr1_auth_comp_id()
+ void setPtnr1_auth_comp_id(String)
+ String getPtnr1_auth_seq_id()
+ void setPtnr1_auth_seq_id(String)
+ String getPtnr2_auth_asym_id()
+ void setPtnr2_auth_asym_id(String)
+ String getPtnr2_auth_comp_id()
+ void setPtnr2_auth_comp_id(String)
+ String getPtnr2_auth_seq_id()
+ void setPtnr2_auth_seq_id(String)
+ String getPtnr2_symmetry()
+ void setPtnr2_symmetry(String)
+ String getPdbx_ptnr3_label_atom_id()
+ void setPdbx_ptnr3_label_atom_id(String)
+ String getPdbx_ptnr3_label_seq_id()
+ void setPdbx_ptnr3_label_seq_id(String)
+ String getPdbx_ptnr3_label_comp_id()
+ void setPdbx_ptnr3_label_comp_id(String)
+ String getPdbx_ptnr3_label_asym_id()
+ void setPdbx_ptnr3_label_asym_id(String)
+ String getPdbx_ptnr3_label_alt_id()
+ void setPdbx_ptnr3_label_alt_id(String)
+ String getPdbx_ptnr3_PDB_ins_code()
+ void setPdbx_ptnr3_PDB_ins_code(String)
+ String getDetails()
+ void setDetails(String)
+ String getPdbx_dist_value()
+ void setPdbx_dist_value(String)
+ String getPdbx_value_order()
+ void setPdbx_value_order(String)
+ String getPdbx_leaving_atom_flag()
+ void setPdbx_leaving_atom_flag(String)
}
class org.biojava.nbio.structure.domain.pdp.CutDomain {
~ int ndom
~ List<Domain> domains
+ {static} boolean verbose
~ int[][] dist
~ Atom[] ca
+ void cutDomain(Domain,CutSites,PDPDistanceMatrix)
+ List<Domain> getDomains()
}
class org.biojava.nbio.structure.symmetry.core.HelixSolver {
- {static} Logger logger
- QuatSymmetrySubunits subunits
- int fold
- HelixLayers helixLayers
- QuatSymmetryParameters parameters
~ boolean modified
+ HelixLayers getSymmetryOperations()
- void solve()
- void checkSelfLimitingHelix(Helix)
- boolean preCheck()
- List<Integer> getPermutation(Matrix4d)
- {static} double getRise(Matrix4d,Point3d,Point3d)
- {static} double getAngle(Matrix4d)
- {static} AxisAngle4d getAxisAngle(Matrix4d)
}
class org.biojava.nbio.structure.io.mmcif.MetalBondParser {
- {static} Logger logger
- {static} String BONDS_FILE
~ {static} Map<String,List<MetalBondDistance>> definitions
+ {static} Map<String,List<MetalBondDistance>> getMetalBondDefinitions()
- {static} Map<String,List<MetalBondDistance>> init()
}
interface org.biojava.nbio.structure.Bond {
+ Atom getAtomA()
+ Atom getAtomB()
+ Atom getOther(Atom)
+ int getBondOrder()
+ double getLength()
}
class org.biojava.nbio.structure.xtal.io.SpaceGroupMapAdapter {
+ SpaceGroupMapElements[] marshal(Map<Integer,SpaceGroup>)
+ Map<Integer,SpaceGroup> unmarshal(SpaceGroupMapElements[])
}
class org.biojava.nbio.structure.align.multiple.util.MultipleAlignmentWriter {
+ {static} String toFASTA(MultipleAlignment)
+ {static} String toFatCat(MultipleAlignment)
+ {static} String toAlignedResidues(MultipleAlignment)
+ {static} String toTransformMatrices(MultipleAlignment)
+ {static} String toXML(MultipleAlignmentEnsemble)
+ {static} String to3DFormat(MultipleAlignment,int,int)
}
class org.biojava.nbio.structure.xtal.UnitCellBoundingBox {
- BoundingBox[][] chainBbs
- BoundingBox[] auBbs
- int numOperatorsSg
- int numPolyChainsAu
+ void setBbs(Structure,Matrix4d[],boolean)
- void setBb(Structure,boolean,int)
+ BoundingBox getChainBoundingBox(int,int)
+ BoundingBox getAuBoundingBox(int)
+ UnitCellBoundingBox getTranslatedBbs(Vector3d)
}
class org.biojava.nbio.structure.StandardAminoAcid {
- {static} String STANDARD_AMINOS_FILE
- {static} Map<String,AminoAcid> aminoAcids
+ {static} AminoAcid getAminoAcid(String)
}
class org.biojava.nbio.structure.DBRef {
- {static} Logger logger
- {static} long serialVersionUID
- Structure parent
- String idCode
- String chainName
- int seqbegin
- char insertBegin
- int seqEnd
- char insertEnd
- String database
- String dbAccession
- String dbIdCode
- int dbSeqBegin
- char idbnsBegin
- int dbSeqEnd
- char idbnsEnd
- Long id
+ Long getId()
+ void setId(Long)
+ void setParent(Structure)
+ Structure getParent()
+ String toPDB()
+ void toPDB(StringBuffer)
+ String toString()
+ String getIdCode()
+ void setIdCode(String)
+ String getChainName()
+ void setChainName(String)
+ String getDatabase()
+ void setDatabase(String)
+ String getDbAccession()
+ void setDbAccession(String)
+ String getDbIdCode()
+ void setDbIdCode(String)
+ int getDbSeqBegin()
+ void setDbSeqBegin(int)
+ int getDbSeqEnd()
+ void setDbSeqEnd(int)
+ char getIdbnsBegin()
+ void setIdbnsBegin(char)
+ char getIdbnsEnd()
+ void setIdbnsEnd(char)
+ char getInsertBegin()
+ void setInsertBegin(char)
+ char getInsertEnd()
+ void setInsertEnd(char)
+ int getSeqBegin()
+ void setSeqBegin(int)
+ int getSeqEnd()
+ void setSeqEnd(int)
}
class org.biojava.nbio.structure.io.mmtf.MmtfStructureReader {
- {static} long serialVersionUID
- {static} Logger logger
- Structure structure
- int modelNumber
- Chain chain
- Group group
- List<Atom> atomsInGroup
- Atom[] allAtoms
- int atomCounter
- List<EntityInfo> entityInfoList
- List<Chain> chainList
- List<Map<String,Chain>> chainMap
- List<double[]> transformList
- int bioassIndex
- Map<String,String> chainSequenceMap
+ Structure getStructure()
+ void finalizeStructure()
+ void initStructure(int,int,int,int,int,String)
+ void setModelInfo(int,int)
+ void setChainInfo(String,String,int)
+ void setGroupInfo(String,int,char,String,int,int,char,int,int)
- Group getGroupWithSameResNumButDiffPDBName()
+ void setAtomInfo(String,int,char,float,float,float,float,float,String,int)
+ void setGroupBond(int,int,int)
+ void setInterGroupBond(int,int,int)
- Group getCorrectAltLocGroup(Character)
+ void setXtalInfo(String,float[],double[][])
- int getGroupTypIndicator(PolymerType)
+ void setBioAssemblyTrans(int,int[],double[],String)
+ void setEntityInfo(int[],String,String,String)
+ void setHeaderInfo(float,float,float,String,String,String,String[])
}
class org.biojava.nbio.structure.cluster.SubunitExtractor {
- {static} Logger logger
+ {static} List<Subunit> extractSubunits(Structure,int,double,int)
- {static} int calcAdjustedMinimumSequenceLength(List<Subunit>,int,double,int)
}
class org.biojava.nbio.structure.align.client.PdbPair {
- StructureName name1
- StructureName name2
+ String getName1()
+ void setName1(String)
+ String getName2()
+ void setName2(String)
+ String toString()
+ int hashCode()
+ boolean equals(Object)
+ int compareTo(PdbPair)
+ String getPDBCode1()
+ String getPDBCode2()
+ String getChainId1()
+ String getChainId2()
+ PdbPair getReverse()
}
class org.biojava.nbio.structure.contact.GroupContactSet {
- {static} long serialVersionUID
- HashMap<Pair<ResidueIdentifier>,GroupContact> contacts
- void atoms2groups(AtomContactSet)
+ void add(GroupContact)
+ boolean hasContact(Group,Group)
+ boolean hasContact(ResidueNumber,ResidueNumber)
+ boolean hasContact(ResidueIdentifier,ResidueIdentifier)
+ GroupContact getContact(Group,Group)
+ int size()
+ Iterator<GroupContact> iterator()
- Pair<ResidueIdentifier> getResIdPairFromContact(GroupContact)
}
class org.biojava.nbio.structure.quaternary.OrderedPair {
~ T element1
~ T element2
+ T getElement1()
+ void setElement1(T)
+ T getElement2()
+ void setElement2(T)
+ String toString()
}
class org.biojava.nbio.structure.scop.ScopDescription {
- {static} long serialVersionUID
~ int sunID
~ ScopCategory category
~ String classificationId
~ String name
~ String description
+ String toString()
+ int getSunID()
+ void setSunID(int)
+ ScopCategory getCategory()
+ void setCategory(ScopCategory)
+ String getClassificationId()
+ void setClassificationId(String)
+ String getName()
+ void setName(String)
+ String getDescription()
+ void setDescription(String)
+ String getClassificationId(ScopCategory)
+ int hashCode()
+ boolean equals(Object)
# Object clone()
}
class org.biojava.nbio.structure.align.xml.AFPChainXMLConverter {
+ {static} String toXML(AFPChain,Atom[],Atom[])
+ {static} void toXML(AFPChain,StringWriter,Atom[],Atom[])
- {static} void printXMLEQRKnownPositions(PrettyXMLWriter,AFPChain,int)
+ {static} void printXMLEQRInferPositions(PrettyXMLWriter,AFPChain,int,Atom[],Atom[])
- {static} void printXMLBlockHeader(PrettyXMLWriter,AFPChain,int)
- {static} void printXMLMatrixShift(PrettyXMLWriter,AFPChain,int)
+ {static} String toXML(AFPChain)
+ {static} void printXMLHeader(PrettyXMLWriter,AFPChain)
}
class org.biojava.nbio.structure.io.mmcif.model.ChemCompAtom {
- {static} long serialVersionUID
~ String comp_id
~ String atom_id
~ String alt_atom_id
~ String type_symbol
~ String charge
~ String pdbx_align
~ String pdbx_aromatic_flag
~ String pdbx_leaving_atom_flag
~ String pdbx_stereo_config
~ String model_Cartn_x
~ String model_Cartn_y
~ String model_Cartn_z
~ String pdbx_model_Cartn_x_ideal
~ String pdbx_model_Cartn_y_ideal
~ String pdbx_model_Cartn_z_ideal
~ String pdbx_component_comp_id
~ String pdbx_residue_numbering
~ String pdbx_component_atom_id
~ String pdbx_polymer_type
~ String pdbx_ref_id
~ String pdbx_component_id
~ String pdbx_ordinal
+ String getComp_id()
+ void setComp_id(String)
+ String getAtom_id()
+ void setAtom_id(String)
+ String getAlt_atom_id()
+ void setAlt_atom_id(String)
+ String getType_symbol()
+ void setType_symbol(String)
+ String getCharge()
+ void setCharge(String)
+ String getPdbx_align()
+ void setPdbx_align(String)
+ String getPdbx_aromatic_flag()
+ void setPdbx_aromatic_flag(String)
+ String getPdbx_leaving_atom_flag()
+ void setPdbx_leaving_atom_flag(String)
+ String getPdbx_stereo_config()
+ void setPdbx_stereo_config(String)
+ String getModel_Cartn_x()
+ void setModel_Cartn_x(String)
+ String getModel_Cartn_y()
+ void setModel_Cartn_y(String)
+ String getModel_Cartn_z()
+ void setModel_Cartn_z(String)
+ String getPdbx_model_Cartn_x_ideal()
+ void setPdbx_model_Cartn_x_ideal(String)
+ String getPdbx_model_Cartn_y_ideal()
+ void setPdbx_model_Cartn_y_ideal(String)
+ String getPdbx_model_Cartn_z_ideal()
+ void setPdbx_model_Cartn_z_ideal(String)
+ String getPdbx_component_comp_id()
+ void setPdbx_component_comp_id(String)
+ String getPdbx_residue_numbering()
+ void setPdbx_residue_numbering(String)
+ String getPdbx_component_atom_id()
+ void setPdbx_component_atom_id(String)
+ String getPdbx_polymer_type()
+ void setPdbx_polymer_type(String)
+ String getPdbx_ref_id()
+ void setPdbx_ref_id(String)
+ String getPdbx_component_id()
+ void setPdbx_component_id(String)
+ String getPdbx_ordinal()
+ void setPdbx_ordinal(String)
}
class org.biojava.nbio.structure.io.cif.CifFileConsumerImpl {
- {static} Logger logger
- {static} DateTimeFormatter DATE_FORMAT
- Structure structure
- Chain currentChain
- Group currentGroup
- List<List<Chain>> allModels
- List<Chain> currentModel
- PDBHeader pdbHeader
- String currentNmrModelNumber
- List<Chain> entityChains
- Entity entity
- EntityPoly entityPoly
- EntitySrcGen entitySrcGen
- EntitySrcNat entitySrcNat
- PdbxEntitySrcSyn entitySrcSyn
- List<Chain> seqResChains
- PdbxStructAssembly structAssembly
- PdbxStructAssemblyGen structAssemblyGen
- StructAsym structAsym
- StructConn structConn
- StructNcsOper structNcsOper
- PdbxStructOperList structOpers
- StructRef structRef
- StructRefSeqDif structRefSeqDif
- StructSiteGen structSiteGen
- Map<String,String> asymId2entityId
- Map<String,String> asymId2authorId
- Matrix4d parsedScaleMatrix
- FileParsingParameters params
+ void prepare()
+ void consumeAtomSite(AtomSite)
- Group getAltLocGroup(String,Character,Character,String,long)
- Group createGroup(String,Character,String,long)
+ void consumeAtomSites(AtomSites)
+ void consumeAuditAuthor(AuditAuthor)
+ void consumeCell(Cell)
+ void consumeChemComp(ChemComp)
+ void consumeChemCompBond(ChemCompBond)
+ void consumeDatabasePDBremark(DatabasePDBRemark)
- Date convert(LocalDate)
+ void consumeDatabasePDBrev(DatabasePDBRev)
+ void consumeDatabasePDBrevRecord(DatabasePDBRevRecord)
- List<DatabasePdbrevRecord> convert(DatabasePDBRevRecord)
+ void consumeEntity(Entity)
+ void consumeEntityPoly(EntityPoly)
+ void consumeEntitySrcGen(EntitySrcGen)
+ void consumeEntitySrcNat(EntitySrcNat)
+ void consumeEntitySrcSyn(PdbxEntitySrcSyn)
+ void consumeEntityPolySeq(EntityPolySeq)
- Chain getEntityChain(String)
+ void consumeExptl(Exptl)
+ void consumePdbxAuditRevisionHistory(PdbxAuditRevisionHistory)
+ void consumePdbxChemCompIdentifier(PdbxChemCompIdentifier)
+ void consumePdbxDatabaseStatus(PdbxDatabaseStatus)
+ void consumePdbxEntityBranchDescriptor(PdbxEntityBranchDescriptor)
+ void consumePdbxMolecule(PdbxMolecule)
+ void consumePdbxMoleculeFeatures(PdbxMoleculeFeatures)
+ void consumePdbxNonpolyScheme(PdbxNonpolyScheme)
+ void consumePdbxReferenceEntityLink(PdbxReferenceEntityLink)
+ void consumePdbxReferenceEntityList(PdbxReferenceEntityList)
+ void consumePdbxReferenceEntityPolyLink(PdbxReferenceEntityPolyLink)
+ void consumePdbxStructAssembly(PdbxStructAssembly)
+ void consumePdbxStructAssemblyGen(PdbxStructAssemblyGen)
+ void consumePdbxStructModResidue(PdbxStructModResidue)
+ void consumePdbxStructOperList(PdbxStructOperList)
+ void consumeRefine(Refine)
+ void consumeStruct(Struct)
+ void consumeStructAsym(StructAsym)
+ void consumeStructConf(StructConf)
+ void consumeStructConn(StructConn)
+ void consumeStructConnType(StructConnType)
+ void consumeStructKeywords(StructKeywords)
+ void consumeStructNcsOper(StructNcsOper)
+ void consumeStructRef(StructRef)
+ void consumeStructRefSeq(StructRefSeq)
+ void consumeStructRefSeqDif(StructRefSeqDif)
+ void consumeStructSheetRange(StructSheetRange)
+ void consumeStructSite(StructSite)
+ void consumeStructSiteGen(StructSiteGen)
+ void consumeSymmetry(Symmetry)
+ void finish()
- String getEntityType(String)
- String getEntityDescription(String)
- void addEntity(int,String,String,String)
- void addAncilliaryEntityData(int,EntityInfo)
- void addInformationFromEntitySrcSyn(int,EntityInfo)
- void addInformationFromEntitySrcNat(int,EntityInfo)
- void addInformationFromEntitySrcGen(int,EntityInfo)
- void setStructNcsOps()
- List<org.biojava.nbio.structure.io.mmcif.model.PdbxStructOperList> convert(PdbxStructOperList)
- List<org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssemblyGen> convert(PdbxStructAssemblyGen)
- List<org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssembly> convert(PdbxStructAssembly)
- void setCrystallographicInfoMetadata()
- void addSites()
- void addCharges()
- {static} Chain removeSeqResHeterogeneity(Chain)
- void addBonds()
- List<org.biojava.nbio.structure.io.mmcif.model.StructConn> convert(StructConn)
- void alignSeqRes()
- int getInternalNr(Group)
- void linkEntities()
- void initMaps()
+ Structure getContainer()
}
class org.biojava.nbio.structure.io.mmcif.model.StructSite {
~ String id
~ String details
~ String pdbx_evidence_code
~ String pdbx_auth_asym_id
~ String pdbx_auth_comp_id
~ String pdbx_auth_seq_id
~ String pdbx_num_residues
+ String getId()
+ void setId(String)
+ String getDetails()
+ void setDetails(String)
+ String getPdbx_evidence_code()
+ void setPdbx_evidence_code(String)
+ String getPdbx_auth_asym_id()
+ void setPdbx_auth_asym_id(String)
+ String getPdbx_auth_comp_id()
+ void setPdbx_auth_comp_id(String)
+ String getPdbx_auth_seq_id()
+ void setPdbx_auth_seq_id(String)
+ String getPdbx_num_residues()
+ void setPdbx_num_residues(String)
}
class org.biojava.nbio.structure.symmetry.core.QuatSymmetryDetector {
- {static} Logger logger
- {static} double CONTACT_GRAPH_DISTANCE_CUTOFF
- {static} int CONTACT_GRAPH_MIN_CONTACTS
+ {static} QuatSymmetryResults calcGlobalSymmetry(Structure,QuatSymmetryParameters,SubunitClustererParameters)
+ {static} QuatSymmetryResults calcGlobalSymmetry(List<Subunit>,QuatSymmetryParameters,SubunitClustererParameters)
+ {static} QuatSymmetryResults calcGlobalSymmetry(Stoichiometry,QuatSymmetryParameters)
+ {static} List<QuatSymmetryResults> calcLocalSymmetries(Structure,QuatSymmetryParameters,SubunitClustererParameters)
+ {static} List<QuatSymmetryResults> calcLocalSymmetries(List<Subunit>,QuatSymmetryParameters,SubunitClustererParameters)
+ {static} List<QuatSymmetryResults> calcLocalSymmetries(Stoichiometry,QuatSymmetryParameters)
- {static} Graph<Integer,DefaultEdge> initContactGraph(List<SubunitCluster>)
- {static} List<QuatSymmetryResults> calcLocalSymmetriesCluster(Stoichiometry,Map<Integer,List<Integer>>,QuatSymmetryParameters,Set<Set<Integer>>)
- {static} List<QuatSymmetryResults> calcLocalSymmetriesGraph(Stoichiometry,List<Integer>,Map<Integer,List<Integer>>,QuatSymmetryParameters,Set<Set<Integer>>,Graph<Integer,DefaultEdge>)
- {static} Stoichiometry trimSubunitClusters(Stoichiometry,List<Integer>,Map<Integer,List<Integer>>,List<Integer>)
- {static} QuatSymmetryResults calcQuatSymmetry(Stoichiometry,QuatSymmetryParameters)
}
class org.biojava.nbio.structure.symmetry.utils.SymmetryTools {
- {static} Logger logger
- {static} double getResetVal(double,double,double[],double)
+ {static} Matrix grayOutCEOrig(Atom[],int,int,CECalculator,Matrix,int,double[],double)
+ {static} Matrix grayOutPreviousAlignment(AFPChain,Atom[],int,int,CECalculator,Matrix,int,double[],double)
+ Matrix getDkMatrix(Atom[],Atom[],int,double[],double[],int,int)
+ {static} Matrix blankOutPreviousAlignment(AFPChain,Atom[],int,int,CECalculator,Matrix,int)
+ {static} Matrix blankOutCEOrig(Atom[],int,int,CECalculator,Matrix,int)
+ {static} Matrix getDkMatrix(Atom[],Atom[],int,int)
+ {static} boolean[][] blankOutBreakFlag(AFPChain,Atom[],int,int,CECalculator,boolean[][],int)
+ {static} double getAngle(AFPChain,Atom[],Atom[])
+ {static} List<List<Integer>> buildSymmetryGraph(List<AFPChain>,Atom[],boolean)
+ {static} Graph<Integer,DefaultEdge> buildSymmetryGraph(AFPChain)
+ {static} List<Structure> divideStructure(CeSymmResult)
+ {static} MultipleAlignment toFullAlignment(CeSymmResult)
+ {static} MultipleAlignment toRepeatsAlignment(CeSymmResult)
+ {static} MultipleAlignment fromAFP(AFPChain,Atom[])
+ {static} QuatSymmetryResults getQuaternarySymmetry(CeSymmResult)
+ {static} List<Group> getGroups(Atom[])
+ {static} void updateSymmetryTransformation(SymmetryAxes,MultipleAlignment)
+ {static} void updateSymmetryScores(MultipleAlignment)
+ {static} Atom[] getRepresentativeAtoms(Structure)
+ {static} List<Integer> getValidFolds(List<Integer>)
}
class org.biojava.nbio.structure.align.ce.CECalculator {
# {static} boolean isPrint
- {static} boolean debug
~ int[] f1
~ int[] f2
~ double[][] dist1
~ double[][] dist2
# double[][] mat
# int[] bestTrace1
# int[] bestTrace2
# int[][] bestTraces1
# int[][] bestTraces2
# int nBestTrace
# int nBestTraces
~ double[] d_
# int[] bestTracesN
# double bestTraceScore
# int nTrace
# double[] bestTracesScores
# int[] trace1
# int[] trace2
# {static} double zThr
~ long timeStart
~ long timeEnd
- int nAtom
- int[] align_se1
- int[] align_se2
- int lcmp
- int[] bestTraceLen
- Matrix r
- Atom t
# int nTraces
- double z
- int[] traceIndexContainer
# CeParameters params
# {static} int nIter
- {static} boolean distAll
~ List<MatrixListener> matrixListeners
- {static} double[] scoreAv8
- {static} double[] scoreSd8
- {static} double[] gapsAv8
- {static} double[] gapsSd8
- {static} double[] scoreAv6
- {static} double[] scoreSd6
- {static} double[] gapsAv6
- {static} double[] gapsSd6
- {static} double[] tableZtoP
- {static} double[] tablePtoZ
+ AFPChain extractFragments(AFPChain,Atom[],Atom[])
- double getDistanceWithSidechain(Atom,Atom)
- double[][] initIntraDistmatrix(Atom[],int)
+ double[][] initSumOfDistances(int,int,int,int,Atom[],Atom[])
+ void traceFragmentMatrix(AFPChain,Atom[],Atom[])
# double getScore2(int,int,double[][],int,int[],int,int,double,double)
# int doIter0(int,double,double)
# double getScoreFromDistanceMatrices(int,int,int)
+ void nextStep(AFPChain,Atom[],Atom[])
- void checkBestTraces(AFPChain,Atom[],Atom[])
- void setStrBuf(Atom[],int,Atom[],int)
- double getRMSDForBestTrace(int,Atom[],Atom[],int[],int[][],int[],int,Atom[],Atom[])
- void checkPrintRmsdNew(int,int,Atom[],Atom[])
- {static} char getOneLetter(Group)
- int optimizeSuperposition(AFPChain,int,int,int,double,Atom[],Atom[],int,Atom[],Atom[])
+ {static} double[][] updateMatrixWithSequenceConservation(double[][],Atom[],Atom[],CeParameters)
- double[][] notifyMatrixListener(double[][])
- boolean[][] notifyBreakFlagListener(boolean[][])
+ void addMatrixListener(MatrixListener)
- double dpAlign(int,int,double,double,boolean,boolean)
- void rot_mol(Atom[],Atom[],int,Matrix,Atom)
+ double calc_rmsd(Atom[],Atom[],int,boolean)
- Atom[] getAtoms(Atom[],int,boolean)
- void noBestTrace()
- double zToP(double)
- double pToZ(double)
- double zByZ(double,double)
# double zStrAlign(int,int,double,int)
~ double zScore(int,int,double)
~ double zGaps(int,int,int)
+ void convertAfpChain(AFPChain,Atom[],Atom[])
+ int getnAtom()
+ void setnAtom(int)
+ int getLcmp()
+ void setLcmp(int)
+ int[] getAlign_se1()
+ void setAlign_se1(int[])
+ int[] getAlign_se2()
+ void setAlign_se2(int[])
+ double[][] getMatMatrix()
+ void setMatMatrix(double[][])
+ Matrix getRotationMatrix()
+ Atom getShift()
+ double[][] getDist1()
+ void setDist1(double[][])
+ double[][] getDist2()
+ void setDist2(double[][])
}
class org.biojava.nbio.structure.align.pairwise.FragmentJoiner {
+ {static} Logger logger
+ {static} Object resizeArray(Object,int)
+ {static} boolean reduceFragments(List<FragmentPair>,FragmentPair,Matrix)
+ JointFragments[] approach_ap3(Atom[],Atom[],FragmentPair[],StrucAligParameters)
- boolean densityCheckOk(Atom[],Atom[],List<int[]>,int,int,int,double)
- double getDensity(Atom[],Atom[])
- double rmsCheck(Atom[],Atom[],List<int[]>,int,int,int)
+ {static} double getRMS(Atom[],Atom[],JointFragments)
+ boolean angleCheckOk(FragmentPair,FragmentPair,float)
- boolean distanceCheckOk(FragmentPair,FragmentPair,float)
+ JointFragments[] frag_pairwise_compat(FragmentPair[],int,float,int)
+ void extendFragments(Atom[],Atom[],JointFragments[],StrucAligParameters)
+ void extendFragments(Atom[],Atom[],JointFragments,StrucAligParameters)
- double testAdd(Atom[],Atom[],JointFragments,int,int)
}
class org.biojava.nbio.structure.align.pairwise.JointFragmentsComparator {
- {static} long serialVersionUID
+ int compare(JointFragments,JointFragments)
}
class org.biojava.nbio.structure.domain.pdp.ShortSegmentRemover {
+ {static} void cleanup(List<Domain>)
}
class org.biojava.nbio.structure.io.mmcif.model.PdbxStructOperListXMLContainer {
- List<PdbxStructOperList> data
~ {static} JAXBContext jaxbContext
+ List<PdbxStructOperList> getPdbxStructOperLists()
+ void setPdbxStructOperLists(List<PdbxStructOperList>)
+ String toXML()
+ {static} PdbxStructOperListXMLContainer fromXML(String)
}
class org.biojava.nbio.structure.GroupIterator {
- Structure structure
- int current_model_pos
- int current_chain_pos
- int current_group_pos
- boolean fixed_model
- Structure getStructure()
- int getModelPos()
- void setModelPos(int)
- int getChainPos()
- void setChainPos(int)
- int getGroupPos()
- void setGroupPos(int)
+ Object clone()
+ boolean hasNext()
- boolean hasSubGroup(int,int,int)
+ int getCurrentModel()
+ Chain getCurrentChain()
+ Group next()
- Group getNextGroup(int,int,int)
+ void remove()
}
class org.biojava.nbio.structure.io.mmcif.model.PdbxStructOperList {
- {static} long serialVersionUID
- String id
- String type
- String symmetry_operation
~ String matrix11
~ String matrix12
~ String matrix13
~ String vector1
~ String matrix21
~ String matrix22
~ String matrix23
~ String vector2
~ String matrix31
~ String matrix32
~ String matrix33
~ String vector3
~ String name
+ String toString()
+ String getType()
+ void setType(String)
+ String getId()
+ void setId(String)
+ void setMatrix11(String)
+ void setMatrix21(String)
+ void setMatrix31(String)
+ void setMatrix12(String)
+ void setMatrix22(String)
+ void setMatrix32(String)
+ void setMatrix13(String)
+ void setMatrix23(String)
+ void setMatrix33(String)
+ void setName(String)
+ String getVector1()
+ void setVector1(String)
+ String getVector2()
+ void setVector2(String)
+ String getVector3()
+ void setVector3(String)
+ String getName()
+ String getSymmetry_operation()
+ void setSymmetry_operation(String)
+ String getMatrix11()
+ String getMatrix21()
+ String getMatrix31()
+ String getMatrix12()
+ String getMatrix22()
+ String getMatrix32()
+ String getMatrix13()
+ String getMatrix23()
+ String getMatrix33()
}
class org.biojava.nbio.structure.align.helper.AligMatEl {
- {static} long serialVersionUID
~ int value
~ int contig
+ int getContig()
+ void setContig(int)
+ int getValue()
+ void setValue(int)
+ String toString()
}
interface org.biojava.nbio.structure.StructureIdentifier {
~ String getIdentifier()
~ Structure loadStructure(AtomCache)
~ SubstructureIdentifier toCanonical()
~ Structure reduce(Structure)
}
class org.biojava.nbio.structure.symmetry.core.QuatSymmetrySubunits {
- List<Point3d[]> caCoords
- List<Point3d> originalCenters
- List<Point3d> centers
- List<Vector3d> unitVectors
- List<Integer> folds
- List<Integer> clusterIds
- List<SubunitCluster> clusters
- Point3d centroid
- MomentsOfInertia momentsOfInertia
+ List<Point3d[]> getTraces()
+ List<Integer> getClusterIds()
+ List<String> getChainIds()
+ List<Integer> getModelNumbers()
+ int getSubunitCount()
+ List<Integer> getFolds()
+ int getCalphaCount()
+ int getLargestSubunit()
+ List<Point3d> getCenters()
+ List<Vector3d> getUnitVectors()
+ List<Point3d> getOriginalCenters()
+ Point3d getCentroid()
+ MomentsOfInertia getMomentsOfInertia()
- void run()
- void calcOriginalCenters()
- void calcCentroid()
- void calcCenters()
+ Point3d getLowerBound()
+ Point3d getUpperBound()
- void calcMomentsOfIntertia()
}
class org.biojava.nbio.structure.align.ce.CeSideChainMain {
+ {static} String algorithmName
- {static} String version
+ {static} void main(String[])
+ String getAlgorithmName()
+ ConfigStrucAligParams getParameters()
+ void setParameters(ConfigStrucAligParams)
+ String getVersion()
}
class org.biojava.nbio.structure.secstruc.HBond {
- {static} long serialVersionUID
- double energy
- int partner
+ HBond clone()
+ String toString()
+ double getEnergy()
+ void setEnergy(double)
+ int getPartner()
+ void setPartner(int)
}
class org.biojava.nbio.structure.xtal.io.TransfAlgebraicAdapter {
+ String[] marshal(List<String>)
+ List<String> unmarshal(String[])
}
class org.biojava.nbio.structure.align.xml.AFPChainXMLParser {
- {static} Logger logger
+ {static} String DEFAULT_ALGORITHM_NAME
+ {static} AFPChain fromXML(String,String,String,Atom[],Atom[])
+ {static} AFPChain fromXML(String,Atom[],Atom[])
+ {static} boolean isErrorXML(String)
+ {static} String flipAlignment(String)
+ {static} void rebuildAFPChain(AFPChain,Atom[],Atom[])
+ {static} AFPChain[] parseMultiXML(String)
- {static} void processBlock(Node,AFPChain,int)
- {static} String getAttribute(Node,String)
- {static} int getPositionForPDBresunm(String,String,Atom[])
}
class org.biojava.nbio.structure.io.ChargeAdder {
- {static} Logger logger
+ {static} void addCharges(Structure)
}
class org.biojava.nbio.structure.ecod.EcodInstallation {
- {static} Logger logger
+ {static} String DEFAULT_VERSION
- {static} String DOMAINS_FILENAME_FORMAT
+ {static} String ECOD_URL
+ {static} String DOMAINS_PATH
+ {static} Pattern ECOD_RE
- String cacheLocation
- String requestedVersion
- String parsedVersion
- ReadWriteLock domainsFileLock
- List<EcodDomain> allDomains
- Map<String,List<EcodDomain>> domainMap
- String url
- Integer updateFrequency
+ List<EcodDomain> getDomainsForPdb(String)
+ List<EcodDomain> filterByHierarchy(String)
+ EcodDomain getDomainsById(String)
+ List<EcodDomain> getAllDomains()
+ void clear()
+ String getVersion()
+ String getUrl()
+ void setUrl(String)
+ String getCacheLocation()
+ void setCacheLocation(String)
+ void ensureDomainsFileInstalled()
- boolean domainsAvailable()
- void downloadDomains()
- String getDomainFilename()
- File getDomainFile()
+ Integer getUpdateFrequency()
+ void setUpdateFrequency(Integer)
- void parseDomains()
- void indexDomains()
+ String toString()
+ {static} void main(String[])
}
class org.biojava.nbio.structure.ecod.EcodInstallation.EcodParser {
+ {static} String F_UNCLASSIFIED
+ {static} String NOT_DOMAIN_ASSEMBLY
+ {static} String IS_DOMAIN_ASSEMBLY
+ {static} String IS_REPRESENTATIVE
+ {static} String NOT_REPRESENTATIVE
- List<EcodDomain> domains
- String version
- void parse(BufferedReader)
- String clearStringQuotes(String)
+ List<EcodDomain> getDomains()
+ String getVersion()
}
class org.biojava.nbio.structure.PDBStatus {
- {static} Logger logger
+ {static} String DEFAULT_PDB_SERVER
+ {static} String PDB_SERVER_PROPERTY
- {static} Map<String,Map<String,String>> recordsCache
+ {static} Status getStatus(String)
+ {static} Status[] getStatus(String[])
+ {static} String getCurrent(String)
+ {static} List<String> getReplacement(String,boolean,boolean)
- {static} void mergeReversed(List<String>,List<String>)
+ {static} List<String> getReplaces(String,boolean)
+ {static} void clearCache()
- {static} List<Map<String,String>> getStatusIdRecords(String[])
+ {static} SortedSet<String> getCurrentPDBIds()
}
class org.biojava.nbio.structure.PDBStatus.PDBStatusXMLHandler {
- List<Map<String,String>> records
+ void startElement(String,String,String,Attributes)
+ void error(SAXParseException)
+ List<Map<String,String>> getRecords()
}
class org.biojava.nbio.structure.io.mmcif.model.PdbxDatabaseStatus {
- String status_code
- String entry_id
- String recvd_initial_deposition_date
- String deposit_site
- String process_site
- String SG_entry
- String pdb_format_compatible
- String status_code_mr
- String status_code_sf
- String status_code_cs
+ String getStatus_code()
+ void setStatus_code(String)
+ String getEntry_id()
+ void setEntry_id(String)
+ String getRecvd_initial_deposition_date()
+ void setRecvd_initial_deposition_date(String)
+ String getDeposit_site()
+ void setDeposit_site(String)
+ String getProcess_site()
+ void setProcess_site(String)
+ String getSG_entry()
+ void setSG_entry(String)
+ String getPdb_format_compatible()
+ void setPdb_format_compatible(String)
+ String getStatus_code_mr()
+ void setStatus_code_mr(String)
+ String getStatus_code_sf()
+ void setStatus_code_sf(String)
+ String getStatus_code_cs()
+ void setStatus_code_cs(String)
}
class org.biojava.nbio.structure.align.util.SynchronizedOutFile {
~ File file
~ String[] tmp
~ int ARR_SIZE
~ Integer counter
~ boolean useGzipCompression
+ void write(String)
+ void flush()
+ void close()
- void writeArr()
}
class org.biojava.nbio.structure.align.multiple.BlockSetImpl {
- {static} long serialVersionUID
- MultipleAlignment parent
- List<Block> blocks
- List<Matrix4d> pose
- int length
- int coreLength
- List<Integer> alignResCounts
+ void clear()
+ BlockSetImpl clone()
+ String toString()
+ MultipleAlignment getMultipleAlignment()
+ void setMultipleAlignment(MultipleAlignment)
+ List<Block> getBlocks()
+ void setBlocks(List<Block>)
+ List<Matrix4d> getTransformations()
+ void setTransformations(List<Matrix4d>)
+ int length()
+ int size()
+ int getCoreLength()
# void updateLength()
# void updateCoreLength()
# void updateCache()
+ List<Integer> getAlignResCounts()
}
class org.biojava.nbio.structure.io.mmcif.model.EntitySrcGen {
~ String entity_id
~ String expression_system_id
~ String gene_src_common_name
~ String gene_src_details
~ String gene_src_dev_stage
~ String gene_src_genus
~ String gene_src_species
~ String gene_src_strain
~ String gene_src_tissue
~ String gene_src_tissue_fraction
~ String host_org_common_name
~ String host_org_details
~ String host_org_genus
~ String host_org_species
~ String host_org_strain
~ String pdbx_src_id
~ String pdbx_seq_type
~ String pdbx_alt_source_flag
~ String pdbx_beg_seq_num
~ String pdbx_end_seq_num
~ String pdbx_description
~ String pdbx_gene_src_atcc
~ String pdbx_gene_src_cell
~ String pdbx_gene_src_cell_line
~ String pdbx_gene_src_cellular_location
~ String pdbx_gene_src_fragment
~ String pdbx_gene_src_gene
~ String pdbx_gene_src_ncbi_taxonomy_id
~ String pdbx_gene_src_organ
~ String pdbx_gene_src_organelle
~ String pdbx_gene_src_plasmid
~ String pdbx_gene_src_plasmid_name
~ String pdbx_gene_src_scientific_name
~ String pdbx_gene_src_variant
~ String pdbx_host_org_atcc
~ String pdbx_host_org_cell
~ String pdbx_host_org_cell_line
~ String pdbx_host_org_cellular_location
~ String pdbx_host_org_culture_collection
~ String pdbx_host_org_gene
~ String pdbx_host_org_ncbi_taxonomy_id
~ String pdbx_host_org_organ
~ String pdbx_host_org_organelle
~ String pdbx_host_org_scientific_name
~ String pdbx_host_org_strain
~ String pdbx_host_org_tissue
~ String pdbx_host_org_tissue_fraction
~ String pdbx_host_org_variant
~ String pdbx_host_org_vector
~ String pdbx_host_org_vector_type
~ String plasmid_details
~ String plasmid_name
~ String start_construct_id
+ String getEntity_id()
+ void setEntity_id(String)
+ String getExpression_system_id()
+ void setExpression_system_id(String)
+ String getGene_src_common_name()
+ void setGene_src_common_name(String)
+ String getGene_src_details()
+ void setGene_src_details(String)
+ String getGene_src_dev_stage()
+ void setGene_src_dev_stage(String)
+ String getGene_src_genus()
+ void setGene_src_genus(String)
+ String getGene_src_species()
+ void setGene_src_species(String)
+ String getGene_src_strain()
+ void setGene_src_strain(String)
+ String getGene_src_tissue()
+ void setGene_src_tissue(String)
+ String getGene_src_tissue_fraction()
+ void setGene_src_tissue_fraction(String)
+ String getHost_org_common_name()
+ void setHost_org_common_name(String)
+ String getHost_org_details()
+ void setHost_org_details(String)
+ String getHost_org_genus()
+ void setHost_org_genus(String)
+ String getHost_org_species()
+ void setHost_org_species(String)
+ String getHost_org_strain()
+ void setHost_org_strain(String)
+ String getPdbx_src_id()
+ void setPdbx_src_id(String)
+ String getPdbx_seq_type()
+ void setPdbx_seq_type(String)
+ String getPdbx_alt_source_flag()
+ void setPdbx_alt_source_flag(String)
+ String getPdbx_beg_seq_num()
+ void setPdbx_beg_seq_num(String)
+ String getPdbx_end_seq_num()
+ void setPdbx_end_seq_num(String)
+ String getPdbx_description()
+ void setPdbx_description(String)
+ String getPdbx_gene_src_atcc()
+ void setPdbx_gene_src_atcc(String)
+ String getPdbx_gene_src_cell()
+ void setPdbx_gene_src_cell(String)
+ String getPdbx_gene_src_cell_line()
+ void setPdbx_gene_src_cell_line(String)
+ String getPdbx_gene_src_cellular_location()
+ void setPdbx_gene_src_cellular_location(String)
+ String getPdbx_gene_src_fragment()
+ void setPdbx_gene_src_fragment(String)
+ String getPdbx_gene_src_gene()
+ void setPdbx_gene_src_gene(String)
+ String getPdbx_gene_src_ncbi_taxonomy_id()
+ void setPdbx_gene_src_ncbi_taxonomy_id(String)
+ String getPdbx_gene_src_organ()
+ void setPdbx_gene_src_organ(String)
+ String getPdbx_gene_src_organelle()
+ void setPdbx_gene_src_organelle(String)
+ String getPdbx_gene_src_plasmid()
+ void setPdbx_gene_src_plasmid(String)
+ String getPdbx_gene_src_plasmid_name()
+ void setPdbx_gene_src_plasmid_name(String)
+ String getPdbx_gene_src_scientific_name()
+ void setPdbx_gene_src_scientific_name(String)
+ String getPdbx_gene_src_variant()
+ void setPdbx_gene_src_variant(String)
+ String getPdbx_host_org_atcc()
+ void setPdbx_host_org_atcc(String)
+ String getPdbx_host_org_cell()
+ void setPdbx_host_org_cell(String)
+ String getPdbx_host_org_cell_line()
+ void setPdbx_host_org_cell_line(String)
+ String getPdbx_host_org_cellular_location()
+ void setPdbx_host_org_cellular_location(String)
+ String getPdbx_host_org_culture_collection()
+ void setPdbx_host_org_culture_collection(String)
+ String getPdbx_host_org_gene()
+ void setPdbx_host_org_gene(String)
+ String getPdbx_host_org_ncbi_taxonomy_id()
+ void setPdbx_host_org_ncbi_taxonomy_id(String)
+ String getPdbx_host_org_organ()
+ void setPdbx_host_org_organ(String)
+ String getPdbx_host_org_organelle()
+ void setPdbx_host_org_organelle(String)
+ String getPdbx_host_org_scientific_name()
+ void setPdbx_host_org_scientific_name(String)
+ String getPdbx_host_org_strain()
+ void setPdbx_host_org_strain(String)
+ String getPdbx_host_org_tissue()
+ void setPdbx_host_org_tissue(String)
+ String getPdbx_host_org_tissue_fraction()
+ void setPdbx_host_org_tissue_fraction(String)
+ String getPdbx_host_org_variant()
+ void setPdbx_host_org_variant(String)
+ String getPdbx_host_org_vector()
+ void setPdbx_host_org_vector(String)
+ String getPdbx_host_org_vector_type()
+ void setPdbx_host_org_vector_type(String)
+ String getPlasmid_details()
+ void setPlasmid_details(String)
+ String getPlasmid_name()
+ void setPlasmid_name(String)
+ String getStart_construct_id()
+ void setStart_construct_id(String)
}
class org.biojava.nbio.structure.symmetry.core.HelicalRepeatUnit {
- QuatSymmetrySubunits subunits
- List<Point3d> repeatUnitCenters
- List<Point3d[]> repeatUnits
- List<List<Integer>> repeatUnitIndices
- Map<Integer[],Integer> interactingNeighbors
+ List<Point3d> getRepeatUnitCenters()
+ List<Point3d[]> getRepeatUnits()
+ List<List<Integer>> getRepeatUnitIndices()
+ Map<Integer[],Integer> getInteractingRepeatUnits()
- void run()
- List<Point3d> calcRepeatUnitCenters()
- List<Point3d[]> calcRepeatUnits()
- Map<Integer[],Integer> findInteractingNeigbors()
- Map<Integer,List<Integer[]>> findClosestPairs(int)
- {static} int calcContactNumber(Point3d[],Point3d[])
}
class org.biojava.nbio.structure.domain.pdp.PDPParameters {
+ {static} int MAXLEN
+ {static} int MAXDOM
+ {static} int MAX_CUTS
+ {static} int MAXSIZE
+ {static} int MIN_DOMAIN_LENGTH
+ {static} int ENDS
+ {static} int ENDSEND
+ {static} float RG1
+ {static} float RG
+ {static} float TD1
+ {static} float TD
+ {static} float DBL
+ {static} int MAXCONT
+ {static} float CUT_OFF_VALUE
+ {static} float CUT_OFF_VALUE1
+ {static} float CUT_OFF_VALUE2
+ {static} float CUT_OFF_VALUE1S
+ {static} float CUT_OFF_VALUE1M
}
class org.biojava.nbio.structure.scop.ScopIOException {
- {static} long serialVersionUID
}
class org.biojava.nbio.structure.io.mmtf.MmtfUtils {
- {static} Logger LOGGER
+ {static} AtomCache setUpBioJava()
+ {static} AtomCache setUpBioJava(String)
+ {static} void fixMicroheterogenity(Structure)
+ {static} void calculateDsspSecondaryStructure(Structure)
+ {static} String getSpaceGroupAsString(SpaceGroup)
+ {static} float[] getUnitCellAsArray(PDBCrystallographicInfo)
+ {static} String[] techniquesToStringArray(Set<ExperimentalTechnique>)
+ {static} String dateToIsoString(Date)
+ {static} Map<double[],int[]> getTransformMap(BioAssemblyInfo,Map<String,Integer>)
+ {static} double[] convertToDoubleArray(Matrix4d)
+ {static} int getNumGroups(Structure)
+ {static} List<Atom> getAtomsForGroup(Group)
+ {static} int getNumBondsInGroup(List<Atom>)
+ {static} int getSecStructType(Group)
+ {static} void setSecStructType(Group,int)
+ {static} SecStrucType getSecStructTypeFromDsspIndex(int)
+ {static} MmtfSummaryDataBean getStructureInfo(Structure)
+ {static} Matrix4d[] getNcsAsMatrix4d(double[][])
+ {static} double[][] getNcsAsArray(Matrix4d[])
+ {static} void insertSeqResGroup(Chain,Group,int)
+ {static} void addSeqRes(Chain,String)
- {static} GroupType getChainType(List<Group>)
- {static} void addGroupAtId(List<T>,T,int)
- {static} Group getSeqResGroup(char,GroupType)
}
class org.biojava.nbio.structure.align.fatcat.calc.FatCatParameters {
+ {static} int DEFAULT_FRAGLEN
~ int fragLen
~ int fragLenSq
~ Double rmsdCut
~ double disCut
~ double afpDisCut
~ double afpDisCut0
~ double disSmooth
~ int misCut
~ int maxGap
~ int maxGapFrag
~ double disFilter
~ double badRmsd
~ int maxTra
~ double gapCreate
~ double gapExtend
~ double misScore
~ double torsionPenalty
~ double maxPenalty
~ double resScore
~ double fragScore
~ int sparse
~ boolean optimizeAlignment
+ void reset()
+ Integer getFragLen()
+ void setFragLen(Integer)
+ int getFragLenSq()
+ void setFragLenSq(int)
+ Double getRmsdCut()
+ void setRmsdCut(Double)
+ Double getDisCut()
+ void setDisCut(Double)
+ double getAfpDisCut()
+ void setAfpDisCut(double)
+ double getAfpDisCut0()
+ void setAfpDisCut0(double)
+ double getDisSmooth()
+ void setDisSmooth(double)
+ int getMisCut()
+ void setMisCut(int)
+ int getMaxGap()
+ void setMaxGap(int)
+ int getMaxGapFrag()
+ void setMaxGapFrag(int)
+ double getDisFilter()
+ void setDisFilter(double)
+ double getBadRmsd()
+ void setBadRmsd(double)
+ Integer getMaxTra()
+ void setMaxTra(Integer)
+ double getGapCreate()
+ void setGapCreate(double)
+ double getGapExtend()
+ void setGapExtend(double)
+ double getMisScore()
+ void setMisScore(double)
+ double getTorsionPenalty()
+ void setTorsionPenalty(double)
+ double getMaxPenalty()
+ void setMaxPenalty(double)
+ double getResScore()
+ void setResScore(double)
+ double getFragScore()
+ void setFragScore(double)
+ int getSparse()
+ void setSparse(int)
+ List<String> getUserConfigHelp()
+ List<String> getUserConfigParameterNames()
+ List<String> getUserConfigParameters()
+ List<Class> getUserConfigTypes()
+ String toString()
- Object getValue(String)
+ boolean isOptimizeAlignment()
+ void setOptimizeAlignment(boolean)
}
class org.biojava.nbio.structure.io.mmcif.model.EntitySrcSyn {
~ String details
~ String entity_id
~ String ncbi_taxonomy_id
~ String organism_common_name
~ String organism_scientific
~ String strain
+ String getDetails()
+ void setDetails(String)
+ String getEntity_id()
+ void setEntity_id(String)
+ String getNcbi_taxonomy_id()
+ void setNcbi_taxonomy_id(String)
+ String getOrganism_common_name()
+ void setOrganism_common_name(String)
+ String getOrganism_scientific()
+ void setOrganism_scientific(String)
+ String getStrain()
+ void setStrain(String)
}
class org.biojava.nbio.structure.geometry.CalcPoint {
+ {static} void center(Point3d[])
+ {static} Point3d centroid(Point3d[])
+ {static} void transform(Matrix4d,Point3d[])
+ {static} void translate(Vector3d,Point3d[])
+ {static} Point3d[] clonePoint3dArray(Point3d[])
+ {static} Matrix formMatrix(Point3d[],Point3d[])
+ {static} double TMScore(Point3d[],Point3d[],int)
+ {static} double GTSlikeScore(Point3d[],Point3d[])
+ {static} double rmsd(Point3d[],Point3d[])
+ {static} double rmsdMin(Point3d[],Point3d[])
+ {static} int contacts(Point3d[],Point3d[],double)
}
class org.biojava.nbio.structure.io.mmcif.model.Symmetry {
~ String entry_id
~ String space_group_name_H_M
~ String pdbx_full_space_group_name_H_M
~ String cell_setting
~ String Int_Tables_number
~ String space_group_name_Hall
+ String getEntry_id()
+ void setEntry_id(String)
+ String getSpace_group_name_H_M()
+ void setSpace_group_name_H_M(String)
+ String getPdbx_full_space_group_name_H_M()
+ void setPdbx_full_space_group_name_H_M(String)
+ String getCell_setting()
+ void setCell_setting(String)
+ String getInt_Tables_number()
+ void setInt_Tables_number(String)
+ String getSpace_group_name_Hall()
+ void setSpace_group_name_Hall(String)
}
interface org.biojava.nbio.structure.align.ce.UserArgumentProcessor {
+ void process(String[])
+ String printHelp()
}
class org.biojava.nbio.structure.cluster.SubunitClusterer {
- {static} Logger logger
+ {static} Stoichiometry cluster(Structure,SubunitClustererParameters)
+ {static} Stoichiometry cluster(List<Subunit>,SubunitClustererParameters)
}
class org.biojava.nbio.structure.io.MMCIFFileReader {
+ {static} String[] MMCIF_SPLIT_DIR
+ {static} String[] MMCIF_OBSOLETE_DIR
- SimpleMMcifConsumer consumer
+ {static} void main(String[])
+ Structure getStructure(InputStream)
+ SimpleMMcifConsumer getMMcifConsumer()
# String getFilename(String)
# String[] getSplitDirPath()
# String[] getObsoleteDirPath()
}
class org.biojava.nbio.structure.symmetry.geometry.RectangularPrism {
- {static} int[] lineLoop1
- {static} int[] lineLoop2
- {static} int[] lineLoop3
- {static} int[] lineLoop4
- double length
- double width
- double height
- {static} String[] viewNames
+ double getLength()
+ double getWidth()
+ double getHeight()
+ double getCirumscribedRadius()
+ Point3d[] getVertices()
+ List<int[]> getLineLoops()
+ int getViewCount()
+ String getViewName(int)
+ Matrix3d getViewMatrix(int)
}
class org.biojava.nbio.structure.io.EntityFinder {
- {static} Logger logger
+ {static} double RATIO_GAPS_FOR_MISMATCH
+ {static} double IDENTITY_THRESHOLD
+ {static} double GAP_COVERAGE_THRESHOLD
+ {static} List<EntityInfo> findPolyEntities(List<List<Chain>>)
- {static} List<EntityInfo> findUniqueEntities(TreeMap<String,EntityInfo>)
+ {static} void createPurelyNonPolyEntities(List<List<Chain>>,List<List<Chain>>,List<EntityInfo>)
- {static} EntityInfo findNonPolyEntityWithDescription(String,List<EntityInfo>)
- {static} boolean areResNumbersAligned(Chain,Chain)
- {static} TreeMap<String,EntityInfo> findEntitiesFromAlignment(List<List<Chain>>)
- {static} SequencePair<ProteinSequence,AminoAcidCompound> alignProtein(ProteinSequence,ProteinSequence)
- {static} SequencePair<DNASequence,NucleotideCompound> alignDNA(DNASequence,DNASequence)
- {static} SequencePair<RNASequence,NucleotideCompound> alignRNA(RNASequence,RNASequence)
- {static} int getNumGaps(SequencePair<?,?>)
- {static} int getNumGapsQuery(SequencePair<?,?>)
- {static} int getNumGapsTarget(SequencePair<?,?>)
- {static} boolean isProteinSequence(String)
- {static} boolean isDNASequence(String)
- {static} boolean isRNASequence(String)
- {static} ProteinSequence getProteinSequence(String)
- {static} DNASequence getDNASequence(String)
- {static} RNASequence getRNASequence(String)
}
class org.biojava.nbio.structure.align.multiple.util.MultipleAlignmentTools {
+ {static} List<String> getSequenceAlignment(MultipleAlignment,List<Integer>)
+ {static} List<String> getSequenceAlignment(MultipleAlignment)
+ {static} List<String> getBlockSequenceAlignment(MultipleAlignment,List<Integer>)
+ {static} List<String> getBlockSequenceAlignment(MultipleAlignment)
+ {static} Atom getAtomForSequencePosition(MultipleAlignment,List<Integer>,int,int)
+ {static} int getBlockForSequencePosition(MultipleAlignment,List<Integer>,int)
+ {static} Matrix getAverageResidueDistances(MultipleAlignment)
+ {static} Matrix getAverageResidueDistances(List<Atom[]>)
+ {static} List<Atom[]> transformAtoms(MultipleAlignment)
+ {static} List<Integer> getCorePositions(Block)
+ {static} void sortBlocks(List<Block>,int)
+ {static} MultipleSequenceAlignment<ProteinSequence,AminoAcidCompound> toProteinMSA(MultipleAlignment)
+ {static} Structure toMultimodelStructure(MultipleAlignment,List<Atom[]>)
+ {static} Structure getAlignedStructure(List<Atom[]>)
+ {static} Matrix getRMSDMatrix(MultipleAlignment)
+ {static} Phylogeny getKimuraTree(MultipleAlignment)
+ {static} Phylogeny getHSDMTree(MultipleAlignment)
+ {static} Phylogeny getStructuralTree(MultipleAlignment)
}
class org.biojava.nbio.structure.xtal.io.SpaceGroupMapRoot {
- TreeMap<Integer,SpaceGroup> mapProperty
+ TreeMap<Integer,SpaceGroup> getMapProperty()
+ void setMapProperty(TreeMap<Integer,SpaceGroup>)
+ String toXML()
+ {static} SpaceGroupMapRoot fromXML(String)
}
class org.biojava.nbio.structure.secstruc.SecStrucState {
- {static} long serialVersionUID
- {static} Logger logger
- double phi
- double psi
- double omega
- float kappa
- HBond accept1
- HBond accept2
- HBond donor1
- HBond donor2
- char[] turn
- boolean bend
- BetaBridge bridge1
- BetaBridge bridge2
+ boolean isBend()
+ void setBend(boolean)
+ float getKappa()
+ void setKappa(float)
+ char[] getTurn()
+ void setTurn(char,int)
+ HBond getAccept1()
+ void setAccept1(HBond)
+ HBond getAccept2()
+ void setAccept2(HBond)
+ HBond getDonor1()
+ void setDonor1(HBond)
+ HBond getDonor2()
+ void setDonor2(HBond)
+ double getPhi()
+ void setPhi(double)
+ double getPsi()
+ void setPsi(double)
+ double getOmega()
+ void setOmega(double)
+ BetaBridge getBridge1()
+ BetaBridge getBridge2()
+ boolean addBridge(BetaBridge)
+ void setBridge1(BetaBridge)
+ void setBridge2(BetaBridge)
+ String printDSSPline(int)
}
class org.biojava.nbio.structure.symmetry.internal.RefinerFailedException {
- {static} long serialVersionUID
}
class org.biojava.nbio.structure.scop.BerkeleyScopInstallation {
~ String defaultBerkeleyDownloadURL
~ String defaultBerkeleyScopVersion
+ {static} Map<String,String[]> EQUIVALENT_VERSIONS
}
class org.biojava.nbio.structure.scop.BerkeleyScopInstallation.BerkeleyScopMirror {
- String rootURL
+ String getClaURL(String)
+ String getDesURL(String)
+ String getHieURL(String)
+ String getComURL(String)
- String getFilename(String,String)
+ String toString()
}
class org.biojava.nbio.structure.io.sifts.SiftsChainToUniprotMapping {
- {static} Logger logger
# {static} File DEFAULT_FILE
- {static} String DEFAULT_FILENAME
- {static} URL DEFAULT_URL
- Map<String,SiftsChainEntry> byChainId
- Map<String,SiftsChainEntry> byUniProtId
+ {static} SiftsChainToUniprotMapping load()
+ {static} SiftsChainToUniprotMapping load(boolean)
# {static} SiftsChainToUniprotMapping build()
- {static} void download()
+ Set<Entry<String,SiftsChainEntry>> chainEntrySet()
+ boolean containsChainId(String,String)
+ boolean containsUniProtId(String)
+ SiftsChainEntry getByChainId(String,String)
+ SiftsChainEntry getByUniProtId(String)
+ Set<String> keySet()
+ int size()
+ Set<Entry<String,SiftsChainEntry>> uniProtEntrySet()
+ Collection<SiftsChainEntry> values()
}
class org.biojava.nbio.structure.domain.pdp.GetDistanceMatrix {
+ PDPDistanceMatrix getDistanceMatrix(Atom[])
- Atom getCBeta(Group)
}
class org.biojava.nbio.structure.align.seq.SmithWaterman3Daligner {
+ {static} String algorithmName
- {static} Logger logger
- {static} String version
- SmithWaterman3DParameters params
+ {static} void main(String[])
+ AFPChain align(Atom[],Atom[])
+ AFPChain align(Atom[],Atom[],Object)
- AFPChain convert(Atom[],Atom[],SequencePair<ProteinSequence,AminoAcidCompound>,PairwiseSequenceAligner<ProteinSequence,AminoAcidCompound>)
- {static} char getOneLetter(Group)
+ String getAlgorithmName()
+ ConfigStrucAligParams getParameters()
+ String getVersion()
+ void setParameters(ConfigStrucAligParams)
}
class org.biojava.nbio.structure.align.ce.CeParameters {
# int winSize
# double rmsdThr
# double rmsdThrJoin
# double maxOptRMSD
# ScoringStrategy scoringStrategy
# int maxGapSize
# boolean showAFPRanges
# int sideChainScoringType
- boolean optimizeAlignment
# {static} double DEFAULT_GAP_OPEN
# {static} double DEFAULT_GAP_EXTENSION
# {static} double DISTANCE_INCREMENT
# {static} double DEFAULT_oRmsdThr
# {static} String DEFAULT_SUBSTITUTION_MATRIX
# double gapOpen
# double gapExtension
# double distanceIncrement
# double oRmsdThr
# int maxNrIterationsForOptimization
# SubstitutionMatrix<AminoAcidCompound> substitutionMatrix
# double seqWeight
+ String toString()
+ void reset()
+ Integer getWinSize()
+ void setWinSize(Integer)
+ Double getRmsdThr()
+ void setRmsdThr(Double)
+ Double getRmsdThrJoin()
+ void setRmsdThrJoin(Double)
+ ScoringStrategy getScoringStrategy()
+ void setScoringStrategy(ScoringStrategy)
+ void setMaxGapSize(Integer)
+ Integer getMaxGapSize()
+ List<String> getUserConfigHelp()
+ List<String> getUserConfigParameters()
+ List<String> getUserConfigParameterNames()
+ List<Class> getUserConfigTypes()
+ boolean isShowAFPRanges()
+ void setShowAFPRanges(boolean)
+ void setMaxOptRMSD(Double)
+ Double getMaxOptRMSD()
+ Double getGapOpen()
+ void setGapOpen(Double)
+ Double getGapExtension()
+ void setGapExtension(Double)
+ Double getDistanceIncrement()
+ void setDistanceIncrement(Double)
+ Double getORmsdThr()
+ void setORmsdThr(Double)
+ int getMaxNrIterationsForOptimization()
+ void setMaxNrIterationsForOptimization(int)
+ double getSeqWeight()
+ void setSeqWeight(double)
+ SubstitutionMatrix<AminoAcidCompound> getSubstitutionMatrix()
+ void setSubstitutionMatrix(SubstitutionMatrix<AminoAcidCompound>)
+ boolean isOptimizeAlignment()
+ void setOptimizeAlignment(boolean)
}
class org.biojava.nbio.structure.scop.ScopFactory {
- {static} Logger logger
+ {static} String VERSION_2_0_7
+ {static} String VERSION_2_0_6
+ {static} String VERSION_2_0_5
+ {static} String VERSION_2_0_4
+ {static} String VERSION_2_0_3
+ {static} String VERSION_2_0_2
+ {static} String VERSION_2_0_1
+ {static} String VERSION_1_75C
+ {static} String VERSION_1_75B
+ {static} String VERSION_1_75A
+ {static} String VERSION_1_75
+ {static} String VERSION_1_73
+ {static} String VERSION_1_71
+ {static} String VERSION_1_69
+ {static} String VERSION_1_67
+ {static} String VERSION_1_65
+ {static} String VERSION_1_63
+ {static} String VERSION_1_61
+ {static} String VERSION_1_59
+ {static} String VERSION_1_57
+ {static} String VERSION_1_55
+ {static} String LATEST_VERSION
- {static} Map<String,ScopDatabase> versionedScopDBs
- {static} String defaultVersion
+ {static} ScopDatabase getSCOP()
+ {static} ScopDatabase getSCOP(String)
+ {static} void setScopDatabase(String)
+ {static} void setScopDatabase(ScopDatabase)
}
class org.biojava.nbio.structure.contact.StructureInterfaceCluster {
- {static} long serialVersionUID
- int id
- List<StructureInterface> members
- double averageScore
+ List<StructureInterface> getMembers()
+ void setMembers(List<StructureInterface>)
+ boolean addMember(StructureInterface)
+ int getId()
+ void setId(int)
+ double getTotalArea()
+ double getAverageScore()
+ void setAverageScore(double)
}
class org.biojava.nbio.structure.align.pairwise.StrCompAlignment {
~ AligMatEl[][] aligmat
~ int rows
~ int cols
~ IndexPair[] path
~ int pathSize
~ float gapOpenCol
~ float gapOpenRow
~ float gapExtCol
~ float gapExtRow
~ float score
+ int getRows()
+ int getCols()
+ void setAligMat(int,int,AligMatEl)
+ AligMatEl getAligMat(int,int)
+ AligMatEl[][] getAligMat()
+ void setAligMat(AligMatEl[][])
+ float getGapExtCol()
+ void setGapExtCol(float)
+ float getGapExtRow()
+ void setGapExtRow(float)
+ float getGapOpenCol()
+ void setGapOpenCol(float)
+ float getGapOpenRow()
+ void setGapOpenRow(float)
+ float getScore()
+ void setScore(float)
+ IndexPair[] getPath()
+ void setPath(IndexPair[])
+ int getPathSize()
+ void setPathSize(int)
}
interface org.biojava.nbio.structure.symmetry.core.QuatSymmetrySolver {
~ RotationGroup getSymmetryOperations()
}
class org.biojava.nbio.structure.symmetry.internal.CESymmParameters {
- int maxSymmOrder
- int userOrder
- SymmetryType symmType
- OrderDetectorMethod orderDetectorMethod
- RefineMethod refineMethod
- boolean optimization
- int rndSeed
- int symmLevels
- double unrefinedScoreThreshold
- double refinedScoreThreshold
- int sseThreshold
- int minCoreLength
- double distanceCutoff
- boolean gaps
- int optimizationSteps
+ {static} double DEFAULT_SYMMETRY_THRESHOLD
+ CESymmParameters clone()
+ void reset()
+ List<String> getUserConfigHelp()
+ List<String> getUserConfigParameters()
+ List<String> getUserConfigParameterNames()
+ List<Class> getUserConfigTypes()
+ RefineMethod getRefineMethod()
+ void setRefineMethod(RefineMethod)
+ void setRefineResult(boolean)
+ OrderDetectorMethod getOrderDetectorMethod()
+ void setOrderDetectorMethod(OrderDetectorMethod)
+ void setUserOrder(Integer)
+ int getUserOrder()
+ void setMaxSymmOrder(Integer)
+ int getMaxSymmOrder()
+ SymmetryType getSymmType()
+ void setSymmType(SymmetryType)
+ boolean getOptimization()
+ void setOptimization(Boolean)
+ int getRndSeed()
+ void setRndSeed(Integer)
+ int getSymmLevels()
+ void setSymmLevels(Integer)
+ double getUnrefinedScoreThreshold()
+ void setUnrefinedScoreThreshold(Double)
+ double getRefinedScoreThreshold()
+ void setRefinedScoreThreshold(Double)
+ int getSSEThreshold()
+ void setSSEThreshold(Integer)
+ int getMinCoreLength()
+ void setMinCoreLength(Integer)
+ double getDistanceCutoff()
+ void setDistanceCutoff(Double)
+ boolean isGaps()
+ void setGaps(Boolean)
+ int getOptimizationSteps()
+ void setOptimizationSteps(Integer)
+ String toString()
}
class org.biojava.nbio.structure.align.model.AFP {
- {static} long serialVersionUID
~ int p1
~ int p2
~ int fragLen
~ double rmsd
~ Matrix m
~ double[] t
~ double score
~ long id
+ String toString()
+ long getId()
+ void setId(long)
+ int getP1()
+ void setP1(int)
+ int getP2()
+ void setP2(int)
+ int getFragLen()
+ void setFragLen(int)
+ double getRmsd()
+ void setRmsd(double)
+ Matrix getM()
+ void setM(Matrix)
+ double[] getT()
+ void setT(double[])
+ double getScore()
+ void setScore(double)
}
class org.biojava.nbio.structure.symmetry.internal.AngleOrderDetectorPlus {
- int maxOrder
- double error
- boolean normalizeError
+ int calculateOrder(AFPChain,Atom[])
+ String toString()
}
class org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory {
- {static} Logger logger
- {static} ChemCompProvider chemCompProvider
- {static} SoftHashMap<String,ChemComp> cache
+ {static} ChemComp getChemComp(String)
+ {static} void setChemCompProvider(ChemCompProvider)
+ {static} ChemCompProvider getChemCompProvider()
+ {static} void clearCache()
+ {static} Group getGroupFromChemCompDictionary(String)
+ {static} String getOneLetterCode(ChemComp)
}
class org.biojava.nbio.structure.HetatomImpl {
- {static} Logger logger
- {static} long serialVersionUID
+ {static} GroupType type
- Map<String,Object> properties
- long id
# boolean pdb_flag
# String pdb_name
# ResidueNumber residueNumber
# List<Atom> atoms
- Chain parent
- boolean isHetAtomInFile
- {static} PerformanceBehavior performanceBehavior
- Map<String,Atom> atomNameLookup
# ChemComp chemComp
- List<Group> altLocs
+ boolean has3D()
+ void setPDBFlag(boolean)
+ void setPDBName(String)
+ String getPDBName()
+ void addAtom(Atom)
+ void clearAtoms()
+ int size()
+ List<Atom> getAtoms()
+ void setAtoms(List<Atom>)
+ Atom getAtom(String)
+ Atom getAtom(int)
+ boolean hasAtom(String)
+ GroupType getType()
+ String toString()
+ boolean hasAminoAtoms()
+ boolean isPolymeric()
+ boolean isAminoAcid()
+ boolean isNucleotide()
+ void setProperties(Map<String,Object>)
+ Map<String,Object> getProperties()
+ void setProperty(String,Object)
+ Object getProperty(String)
+ Iterator<Atom> iterator()
+ Object clone()
# void cloneAtomsAndBonds(Group)
+ long getId()
+ void setId(long)
+ ChemComp getChemComp()
+ void setChemComp(ChemComp)
+ void setChain(Chain)
+ Chain getChain()
+ String getChainId()
+ ResidueNumber getResidueNumber()
+ void setResidueNumber(ResidueNumber)
+ void setResidueNumber(String,Integer,Character)
+ boolean hasAltLoc()
+ List<Group> getAltLocs()
+ Group getAltLocGroup(Character)
+ void addAltLoc(Group)
+ boolean isWater()
+ void trimToSize()
+ String toSDF()
+ boolean isHetAtomInFile()
+ void setHetAtomInFile(boolean)
}
class org.biojava.nbio.structure.NucleotideImpl {
- {static} long serialVersionUID
+ {static} GroupType type
+ GroupType getType()
+ String toString()
+ Atom getO3Prime()
+ Atom getO5Prime()
+ Atom getP()
+ Object clone()
}
class org.biojava.nbio.structure.io.mmcif.model.EntityPoly {
~ String entity_id
~ String type
~ String nstd_chirality
~ String nstd_linkage
~ String nstd_monomer
~ String type_details
~ String pdbx_seq_one_letter_code
~ String pdbx_seq_one_letter_code_can
~ String pdbx_strand_id
~ String pdbx_target_identifier
+ String getEntity_id()
+ void setEntity_id(String)
+ String getType()
+ void setType(String)
+ String getNstd_chirality()
+ void setNstd_chirality(String)
+ String getNstd_linkage()
+ void setNstd_linkage(String)
+ String getNstd_monomer()
+ void setNstd_monomer(String)
+ String getType_details()
+ void setType_details(String)
+ String getPdbx_seq_one_letter_code()
+ void setPdbx_seq_one_letter_code(String)
+ String getPdbx_seq_one_letter_code_can()
+ void setPdbx_seq_one_letter_code_can(String)
+ String getPdbx_strand_id()
+ void setPdbx_strand_id(String)
+ String getPdbx_target_identifier()
+ void setPdbx_target_identifier(String)
}
class org.biojava.nbio.structure.align.fatcat.FatCatUserArgumentProcessor {
~ Logger logger
# StartupParameters getStartupParametersInstance()
+ StructureAlignment getAlgorithm()
+ Object getParameters()
+ String getDbSearchLegend()
}
class org.biojava.nbio.structure.align.fatcat.FatCatUserArgumentProcessor.FatCatStartupParams {
~ int fragLen
~ Double rmsdCut
~ double disCut
~ int maxTra
~ boolean flexible
+ int getFragLen()
+ void setFragLen(int)
+ Double getRmsdCut()
+ void setRmsdCut(Double)
+ double getDisCut()
+ void setDisCut(double)
+ int getMaxTra()
+ void setMaxTra(int)
+ boolean isFlexible()
+ void setFlexible(boolean)
}
class org.biojava.nbio.structure.io.mmcif.ZipChemCompProvider {
- {static} Logger s_logger
- Path m_tempDir
- Path m_zipRootDir
- Path m_zipFile
- DownloadChemCompProvider m_dlProvider
- boolean m_removeCif
- Set<String> unavailable
- void initializeZip()
+ void setRemoveCif(boolean)
+ ChemComp getChemComp(String)
- ChemComp downloadAndAdd(String)
+ {static} void purgeTempFiles(String)
- ChemComp getEmptyChemComp(String)
- {static} File[] finder(String,String)
- ChemComp getFromZip(String)
- boolean addToZipFileSystem(Path,File[],Path)
}
class org.biojava.nbio.structure.io.mmcif.model.ChemComp {
- {static} long serialVersionUID
- String id
- String name
- String type
- String pdbx_type
- String formula
- String mon_nstd_parent_comp_id
- String pdbx_synonyms
- String pdbx_formal_charge
- String pdbx_initial_date
- String pdbx_modified_date
- String pdbx_ambiguous_flag
- String pdbx_release_status
- String pdbx_replaced_by
- String pdbx_replaces
- String formula_weight
- String one_letter_code
- String three_letter_code
- String pdbx_model_coordinates_details
- String pdbx_model_coordinates_missing_flag
- String pdbx_ideal_coordinates_details
- String pdbx_ideal_coordinates_missing_flag
- String pdbx_model_coordinates_db_code
- String pdbx_subcomponent_list
- String pdbx_processing_site
- String mon_nstd_flag
- List<ChemCompDescriptor> descriptors
- List<ChemCompBond> bonds
- List<ChemCompAtom> atoms
- ResidueType residueType
- PolymerType polymerType
- boolean standard
+ String toString()
+ boolean hasParent()
+ boolean isStandard()
- void setStandardFlag()
+ String getId()
+ void setId(String)
+ String getName()
+ void setName(String)
+ String getType()
+ void setType(String)
+ ResidueType getResidueType()
+ void setResidueType(ResidueType)
+ PolymerType getPolymerType()
+ void setPolymerType(PolymerType)
+ String getPdbx_type()
+ void setPdbx_type(String)
+ String getFormula()
+ void setFormula(String)
+ String getMon_nstd_parent_comp_id()
+ void setMon_nstd_parent_comp_id(String)
+ String getPdbx_synonyms()
+ void setPdbx_synonyms(String)
+ String getPdbx_formal_charge()
+ void setPdbx_formal_charge(String)
+ String getPdbx_initial_date()
+ void setPdbx_initial_date(String)
+ String getPdbx_modified_date()
+ void setPdbx_modified_date(String)
+ String getPdbx_ambiguous_flag()
+ void setPdbx_ambiguous_flag(String)
+ String getPdbx_release_status()
+ void setPdbx_release_status(String)
+ String getPdbx_replaced_by()
+ void setPdbx_replaced_by(String)
+ String getPdbx_replaces()
+ void setPdbx_replaces(String)
+ String getFormula_weight()
+ void setFormula_weight(String)
+ String getOne_letter_code()
+ void setOne_letter_code(String)
+ String getThree_letter_code()
+ void setThree_letter_code(String)
+ String getPdbx_model_coordinates_details()
+ void setPdbx_model_coordinates_details(String)
+ String getPdbx_model_coordinates_missing_flag()
+ void setPdbx_model_coordinates_missing_flag(String)
+ String getPdbx_ideal_coordinates_details()
+ void setPdbx_ideal_coordinates_details(String)
+ String getPdbx_ideal_coordinates_missing_flag()
+ void setPdbx_ideal_coordinates_missing_flag(String)
+ String getPdbx_model_coordinates_db_code()
+ void setPdbx_model_coordinates_db_code(String)
+ String getPdbx_subcomponent_list()
+ void setPdbx_subcomponent_list(String)
+ String getPdbx_processing_site()
+ void setPdbx_processing_site(String)
+ void setStandard(boolean)
+ String getMon_nstd_flag()
+ void setMon_nstd_flag(String)
+ List<ChemCompDescriptor> getDescriptors()
+ void setDescriptors(List<ChemCompDescriptor>)
+ List<ChemCompBond> getBonds()
+ void setBonds(List<ChemCompBond>)
+ List<ChemCompAtom> getAtoms()
+ void setAtoms(List<ChemCompAtom>)
+ int compareTo(ChemComp)
+ int hashCode()
+ boolean equals(Object)
+ {static} ChemComp getEmptyChemComp()
+ boolean isEmpty()
}
class org.biojava.nbio.structure.align.ce.CeUserArgumentProcessor {
# StartupParameters getStartupParametersInstance()
+ StructureAlignment getAlgorithm()
+ Object getParameters()
+ String getDbSearchLegend()
}
class org.biojava.nbio.structure.align.ce.CeUserArgumentProcessor.CeStartupParams {
# int maxGapSize
# int winSize
# ScoringStrategy scoringStrategy
# double maxOptRMSD
# double gapOpen
# double gapExtension
# boolean showAFPRanges
+ int getWinSize()
+ void setWinSize(int)
+ ScoringStrategy getScoringStrategy()
+ void setScoringStrategy(ScoringStrategy)
+ double getGapOpen()
+ void setGapOpen(double)
+ double getGapExtension()
+ void setGapExtension(double)
+ int getMaxGapSize()
+ void setMaxGapSize(int)
+ boolean isShowAFPRanges()
+ void setShowAFPRanges(boolean)
+ Double getMaxOptRMSD()
+ void setMaxOptRMSD(Double)
+ String toString()
}
class org.biojava.nbio.structure.geometry.UnitQuaternions {
+ {static} double orientationMetric(Point3d[],Point3d[])
+ {static} double orientationMetric(Quat4d,Quat4d)
+ {static} Quat4d orientation(Point3d[])
+ {static} double angle(Quat4d)
+ {static} double orientationAngle(Point3d[],Point3d[])
+ {static} double orientationAngle(Point3d[],Point3d[],boolean)
+ {static} Quat4d relativeOrientation(Point3d[],Point3d[])
+ {static} double dotProduct(Quat4d,Quat4d)
}
class org.biojava.nbio.structure.align.fatcat.FatCatFlexible {
+ {static} String algorithmName
~ FatCatParameters params
+ AFPChain align(Atom[],Atom[])
+ AFPChain align(Atom[],Atom[],Object)
+ String getAlgorithmName()
+ String getVersion()
+ ConfigStrucAligParams getParameters()
+ void setParameters(ConfigStrucAligParams)
}
interface org.biojava.nbio.structure.symmetry.internal.SymmetryRefiner {
+ MultipleAlignment refine(AFPChain,Atom[],int)
}
abstract class org.biojava.nbio.structure.io.LocalPDBDirectory {
- {static} Logger logger
+ {static} String DEFAULT_PDB_FILE_SERVER
+ {static} String PDB_FILE_SERVER_PROPERTY
+ {static} long LAST_REMEDIATION_DATE
- {static} String LAST_REMEDIATION_DATE_STRING
# {static} String lineSplit
+ {static} long MIN_PDB_FILE_SIZE
- File path
- List<String> extensions
- String serverName
- FileParsingParameters params
- ObsoleteBehavior obsoleteBehavior
- FetchBehavior fetchBehavior
- String splitDirURL
- String obsoleteDirURL
- File splitDirPath
- File obsoleteDirPath
+ void setPath(String)
+ String getPath()
+ void addExtension(String)
+ List<String> getExtensions()
+ void clearExtensions()
+ void setFileParsingParameters(FileParsingParameters)
+ FileParsingParameters getFileParsingParameters()
+ void setObsoleteBehavior(ObsoleteBehavior)
+ ObsoleteBehavior getObsoleteBehavior()
+ FetchBehavior getFetchBehavior()
+ void setFetchBehavior(FetchBehavior)
+ Structure getStructure(String)
+ Structure getStructure(URL)
+ Structure getStructure(File)
+ Structure getStructureById(String)
+ {abstract}Structure getStructure(InputStream)
# InputStream getInputStream(String)
+ void prefetchStructure(String)
+ boolean deleteStructure(String)
# File downloadStructure(String)
- File downloadStructure(String,String,boolean,File)
- Date getLastModifiedTime(URL)
# File getDir(String,boolean)
+ File getLocalFile(String)
# boolean checkFileExists(String)
+ {static} String getServerName()
# void initPaths()
# {abstract}String getFilename(String)
# {abstract}String[] getSplitDirPath()
# {abstract}String[] getObsoleteDirPath()
}
interface org.biojava.nbio.structure.align.MultipleStructureAligner {
+ MultipleAlignment align(List<Atom[]>)
+ MultipleAlignment align(List<Atom[]>,Object)
+ ConfigStrucAligParams getParameters()
+ void setParameters(ConfigStrucAligParams)
+ String getAlgorithmName()
+ String getVersion()
}
interface org.biojava.nbio.structure.Group {
+ {static} String SEC_STRUC
+ int size()
+ boolean has3D()
+ void setPDBFlag(boolean)
+ GroupType getType()
+ void addAtom(Atom)
+ List<Atom> getAtoms()
+ void setAtoms(List<Atom>)
+ void clearAtoms()
+ Atom getAtom(String)
+ Atom getAtom(int)
+ boolean hasAtom(String)
+ String getPDBName()
+ void setPDBName(String)
+ boolean hasAminoAtoms()
+ boolean isPolymeric()
+ boolean isAminoAcid()
+ boolean isNucleotide()
+ void setProperties(Map<String,Object>)
+ Map<String,Object> getProperties()
+ void setProperty(String,Object)
+ Object getProperty(String)
+ Iterator<Atom> iterator()
+ Object clone()
+ void setChain(Chain)
+ Chain getChain()
+ ResidueNumber getResidueNumber()
+ void setResidueNumber(ResidueNumber)
+ void setResidueNumber(String,Integer,Character)
+ String getChainId()
+ void setChemComp(ChemComp)
+ ChemComp getChemComp()
+ boolean hasAltLoc()
+ List<Group> getAltLocs()
+ void addAltLoc(Group)
+ boolean isWater()
+ Group getAltLocGroup(Character)
+ void trimToSize()
+ String toSDF()
+ boolean isHetAtomInFile()
+ void setHetAtomInFile(boolean)
}
class org.biojava.nbio.structure.scop.ScopInstallation {
+ {static} String DEFAULT_VERSION
- {static} Logger logger
- String scopVersion
- List<ScopMirror> mirrors
+ {static} String claFileName
+ {static} String desFileName
+ {static} String hieFileName
+ {static} String comFileName
+ {static} String SCOP_DOWNLOAD
+ {static} String SCOP_DOWNLOAD_ALTERNATE
+ {static} String FILESPLIT
- String cacheLocation
- AtomicBoolean installedCla
- AtomicBoolean installedDes
- AtomicBoolean installedHie
- AtomicBoolean installedCom
- Map<Integer,List<String>> commentsMap
- Map<String,List<ScopDomain>> domainMap
- Map<Integer,ScopDescription> sunidMap
- Map<Integer,ScopNode> scopTree
+ void nullifyComments()
+ void ensureClaInstalled()
+ void ensureDesInstalled()
+ void ensureComInstalled()
+ void ensureHieInstalled()
+ List<ScopDescription> getByCategory(ScopCategory)
+ List<ScopDescription> filterByClassificationId(String)
+ List<ScopNode> getTree(ScopDomain)
+ List<ScopDomain> filterByDomainName(String)
+ List<ScopDescription> filterByDescription(String)
+ ScopDescription getScopDescriptionBySunid(int)
+ List<ScopDomain> getDomainsForPDB(String)
+ ScopDomain getDomainByScopID(String)
+ ScopNode getScopNode(int)
- void parseClassification()
- void parseHierarchy()
- void parseHierarchy(BufferedReader)
- void parseDescriptions()
- void parseComments()
- void parseComments(BufferedReader)
- void parseDescriptions(BufferedReader)
- void parseClassification(BufferedReader)
- List<String> extractRanges(String)
# void downloadClaFile()
# void downloadDesFile()
# void downloadHieFile()
# void downloadComFile()
# void downloadFileFromRemote(URL,File)
- boolean claFileAvailable()
- boolean desFileAvailable()
- boolean hieFileAvailable()
- boolean comFileAvailable()
# String getClaFilename()
# String getDesFilename()
# String getHieFilename()
# String getComFilename()
+ String getCacheLocation()
+ void setCacheLocation(String)
+ String getScopVersion()
+ void setScopVersion(String)
+ void addMirror(String)
~ void addMirror(ScopMirror)
+ List<ScopMirror> getMirrors()
+ List<ScopDomain> getScopDomainsBySunid(Integer)
+ List<String> getComments(int)
- void initScopURLs()
}
class org.biojava.nbio.structure.align.multiple.MultipleAlignmentImpl {
- {static} long serialVersionUID
- MultipleAlignmentEnsemble parent
- List<BlockSet> blockSets
- int length
- int coreLength
- List<Integer> alignResCounts
- List<Double> coverages
+ void clear()
+ MultipleAlignmentImpl clone()
+ String toString()
+ List<BlockSet> getBlockSets()
+ List<Block> getBlocks()
+ void setBlockSets(List<BlockSet>)
+ BlockSet getBlockSet(int)
+ Block getBlock(int)
+ List<Atom[]> getAtomArrays()
+ StructureIdentifier getStructureIdentifier(int)
+ int size()
+ int length()
+ int getCoreLength()
# void updateLength()
# void updateCoreLength()
# void updateCache()
+ MultipleAlignmentEnsemble getEnsemble()
+ void setEnsemble(MultipleAlignmentEnsemble)
+ List<Integer> getAlignResCounts()
+ List<Double> getCoverages()
}
class org.biojava.nbio.structure.io.mmtf.MmtfActions {
+ {static} Structure readFromFile(Path)
+ {static} void writeToFile(Structure,Path)
+ {static} void writeToOutputStream(Structure,OutputStream)
+ {static} Structure readFromWeb(String)
+ {static} Structure readFromInputStream(InputStream)
}
class org.biojava.nbio.structure.io.SandboxStyleStructureProvider {
~ FileParsingParameters params
~ String path
+ {static} String fileSeparator
+ void setPath(String)
+ Structure getStructureById(String)
+ void setFileParsingParameters(FileParsingParameters)
+ FileParsingParameters getFileParsingParameters()
+ List<String> getAllPDBIDs()
}
class org.biojava.nbio.structure.align.ce.StartupParameters {
~ String pdbFilePath
~ String cacheFilePath
~ String outFile
~ String pdb1
~ String pdb2
~ String file1
~ String file2
~ String showDBresult
~ boolean printXML
~ boolean printFatCat
~ boolean show3d
~ boolean autoFetch
~ boolean printCE
~ boolean showMenu
~ boolean printPDB
~ boolean isDomainSplit
~ String alignPairs
~ String searchFile
~ String saveOutputDir
~ int nrCPU
- {static} String newline
+ String getSearchFile()
+ void setSearchFile(String)
+ String getAlignPairs()
+ void setAlignPairs(String)
+ String getSaveOutputDir()
+ void setSaveOutputDir(String)
+ boolean isShowMenu()
+ void setShowMenu(boolean)
+ boolean isPrintCE()
+ void setPrintCE(boolean)
+ String getPdb1()
+ void setPdb1(String)
+ String getPdb2()
+ void setPdb2(String)
+ boolean isPrintXML()
+ void setPrintXML(boolean)
+ boolean isPrintFatCat()
+ void setPrintFatCat(boolean)
+ String getPdbFilePath()
+ void setPdbFilePath(String)
+ String getCacheFilePath()
+ void setCacheFilePath(String)
+ boolean isShow3d()
+ void setShow3d(boolean)
+ String getOutFile()
+ void setOutFile(String)
+ boolean isAutoFetch()
+ void setAutoFetch(boolean)
+ String getShowDBresult()
+ void setShowDBresult(String)
+ int getNrCPU()
+ void setNrCPU(int)
+ String getFile1()
+ void setFile1(String)
+ String getFile2()
+ void setFile2(String)
+ boolean isOutputPDB()
+ void setOutputPDB(boolean)
+ boolean isDomainSplit()
+ void setDomainSplit(boolean)
+ String toString()
}
class org.biojava.nbio.structure.jama.Matrix {
~ {static} long serialVersionUID
- double[][] A
- int m
+ {static} Matrix constructWithCopy(double[][])
+ Matrix copy()
+ Object clone()
+ double[][] getArray()
+ double[][] getArrayCopy()
+ double[] getColumnPackedCopy()
+ double[] getRowPackedCopy()
+ int getRowDimension()
+ int getColumnDimension()
+ double get(int,int)
+ Matrix getMatrix(int,int,int,int)
+ Matrix getMatrix(int[],int[])
+ Matrix getMatrix(int,int,int[])
+ Matrix getMatrix(int[],int,int)
+ void set(int,int,double)
+ void setMatrix(int,int,int,int,Matrix)
+ void setMatrix(int[],int[],Matrix)
+ void setMatrix(int[],int,int,Matrix)
+ void setMatrix(int,int,int[],Matrix)
+ Matrix transpose()
+ double norm1()
+ double norm2()
+ double normInf()
+ double normF()
+ Matrix uminus()
+ Matrix plus(Matrix)
+ Matrix plusEquals(Matrix)
+ Matrix minus(Matrix)
+ Matrix minusEquals(Matrix)
+ Matrix arrayTimes(Matrix)
+ Matrix arrayTimesEquals(Matrix)
+ Matrix arrayRightDivide(Matrix)
+ Matrix arrayRightDivideEquals(Matrix)
+ Matrix arrayLeftDivide(Matrix)
+ Matrix arrayLeftDivideEquals(Matrix)
+ Matrix times(double)
+ Matrix timesEquals(double)
+ Matrix times(Matrix)
+ LUDecomposition lu()
+ QRDecomposition qr()
+ CholeskyDecomposition chol()
+ SingularValueDecomposition svd()
+ EigenvalueDecomposition eig()
+ Matrix solve(Matrix)
+ Matrix solveTranspose(Matrix)
+ Matrix inverse()
+ double det()
+ int rank()
+ double cond()
+ double trace()
+ {static} Matrix random(int,int)
+ {static} Matrix identity(int,int)
+ String toString()
+ void print(int,int)
+ void print(PrintWriter,int,int)
+ void print(NumberFormat,int)
+ void print(PrintWriter,NumberFormat,int)
+ {static} Matrix read(BufferedReader)
- void checkMatrixDimensions(Matrix)
}
class org.biojava.nbio.structure.domain.pdp.Cut {
~ {static} boolean verbose
+ int cut(Atom[],Domain,CutValues,int[][],PDPDistanceMatrix)
}
class org.biojava.nbio.structure.align.helper.JointFragments {
~ double rms
~ List<int[]> idxlist
+ void setIdxlist(List<int[]>)
+ double getRms()
+ void setRms(double)
+ List<int[]> getIdxlist()
+ void add(int,int,int,int)
+ String toString()
}
class org.biojava.nbio.structure.align.fatcat.calc.AFPChainer {
+ {static} boolean debug
+ {static} void doChainAfp(FatCatParameters,AFPChain,Atom[],Atom[])
- {static} Matrix getDisTable(int,Atom[])
- {static} int getCompatibleAfps(int,int[],FatCatParameters,AFPChain)
+ {static} boolean afpPairConn(int,int,FatCatParameters,AFPChain)
- {static} int calcGap(AFP,AFP)
- {static} int calcMismatch(AFP,AFP)
- {static} double calAfpDis(int,int,FatCatParameters,AFPChain)
- {static} void traceBack(int[],int,int,FatCatParameters,AFPChain,Atom[],Atom[])
# {static} double calAfpRmsd(int,int[],int,AFPChain,Atom[],Atom[])
- {static} double getRmsd(int,int[],int[],AFPChain,Atom[],Atom[])
- {static} double getRmsd(Atom[],Atom[])
}
class org.biojava.nbio.structure.align.quaternary.QsAlignParameters {
- double dCutoff
- double maxRmsd
- double maxOrientationAngle
+ double getdCutoff()
+ void setdCutoff(double)
+ double getMaxRmsd()
+ void setMaxRmsd(double)
+ double getMaxOrientationAngle()
+ void setMaxOrientationAngle(double)
}
class org.biojava.nbio.structure.geometry.Matrices {
+ {static} Matrix getRotationJAMA(Matrix4d)
+ {static} Matrix3d getRotationMatrix(Matrix4d)
+ {static} Vector3d getTranslationVector(Matrix4d)
+ {static} Matrix4d getTransformation(Matrix,Matrix)
}
class org.biojava.nbio.structure.align.multiple.mc.MultipleMcParameters {
- int randomSeed
- int minBlockLen
- int minAlignedStructures
- double gapOpen
- double gapExtension
- double distanceCutoff
- int convergenceSteps
- int nrThreads
+ List<String> getUserConfigParameters()
+ List<String> getUserConfigParameterNames()
+ List<Class> getUserConfigTypes()
+ List<String> getUserConfigHelp()
+ String toString()
+ void reset()
+ int getRandomSeed()
+ void setRandomSeed(Integer)
+ int getMinBlockLen()
+ void setMinBlockLen(Integer)
+ int getMinAlignedStructures()
+ void setMinAlignedStructures(Integer)
+ double getGapOpen()
+ void setGapOpen(Double)
+ double getGapExtension()
+ void setGapExtension(Double)
+ int getConvergenceSteps()
+ void setConvergenceSteps(Integer)
+ int getNrThreads()
+ void setNrThreads(Integer)
+ double getDistanceCutoff()
+ void setDistanceCutoff(Double)
}
class org.biojava.nbio.structure.xtal.CrystalBuilder {
+ {static} String NCS_CHAINID_SUFFIX_CHAR
+ {static} int DEF_NUM_CELLS
+ {static} double DEFAULT_INTERFACE_DISTANCE_CUTOFF
+ {static} Matrix4d IDENTITY
- {static} boolean INCLUDE_HETATOMS
- Structure structure
- PDBCrystallographicInfo crystallographicInfo
- int numPolyChainsAu
- int numOperatorsSg
- Map<String,Matrix4d> chainNcsOps
- Map<String,String> chainOrigNames
- {static} Logger logger
- int numCells
- ArrayList<CrystalTransform> visitedCrystalTransforms
- Map<String,Map<Matrix4d,StructureInterface>> visitedNcsChainPairs
- boolean searchBeyondAU
- Matrix4d[] ops
+ boolean hasNcsOps()
+ void setNumCells(int)
- void initialiseVisited()
+ StructureInterfaceList getUniqueInterfaces()
+ StructureInterfaceList getUniqueInterfaces(double)
- void calcInterfacesCrystal(StructureInterfaceList,double)
- StructureInterface findNcsRef(StructureInterface)
- StructureInterface calcContacts(Chain,Chain,double,CrystalTransform,StringBuilder)
- void addVisitedTransform(CrystalTransform)
- boolean isRedundantTransform(CrystalTransform)
+ void translate(Matrix4d,Vector3d)
+ {static} void expandNcsOps(Structure,Map<String,String>,Map<String,Matrix4d>)
- {static} void setChainIdsInResidueNumbers(Chain,String)
}
class org.biojava.nbio.structure.domain.pdp.CutValues {
+ double s_min
+ int site2
+ boolean first_cut
+ double AD
+ String toString()
}
class org.biojava.nbio.structure.cath.CathInstallation {
- {static} Logger LOGGER
+ {static} String DEFAULT_VERSION
+ {static} String domainListFileName
+ {static} String domainDescriptionFileName
+ {static} String nodeListFileName
+ {static} String domallFileName
+ {static} String CATH_DOWNLOAD_URL
+ {static} String CATH_DOWNLOAD_ALL_RELEASES_DIR
+ {static} String CATH_DOWNLOAD_CLASSIFICATION_DATA_DIR
+ {static} String NEWLINE
+ {static} String FILESPLIT
- String cathVersion
- String cathDownloadUrl
- String cacheLocation
- AtomicBoolean installedDomainList
- AtomicBoolean installedDomainDescription
- AtomicBoolean installedNodeList
- AtomicBoolean installedDomall
- boolean useCathDomainDescriptionFile
- boolean parseCathFragments
- Map<String,List<CathDomain>> pdbMap
- Map<String,CathDomain> domainMap
- Map<String,CathNode> cathTree
- Map<String,List<CathFragment>> fragmentMap
+ String getDomainListFileName()
+ String getDomainDescriptionFileName()
+ String getNodeListFileName()
+ String getDomallFileName()
- String buildFileName(String)
- String buildUrl(String)
+ String getCathDownloadUrl()
+ void setCathDownloadUrl(String)
+ String getCacheLocation()
+ void setCacheLocation(String)
+ AtomicBoolean getInstalledDomainList()
+ void setInstalledDomainList(AtomicBoolean)
+ AtomicBoolean getInstalledDomainDescription()
+ void setInstalledDomainDescription(AtomicBoolean)
+ AtomicBoolean getInstalledNodeList()
+ AtomicBoolean getInstalledDomall()
+ void setInstalledNodeList(AtomicBoolean)
+ void setInstalledDomall(AtomicBoolean)
+ String getCathVersion()
+ CathNode getCathNode(String)
+ List<CathDomain> getByCategory(CathCategory)
+ List<CathDomain> filterByCathCode(String)
+ List<CathNode> getTree(CathDomain)
+ List<CathDomain> filterByNodeName(String)
+ List<CathDomain> filterByDescription(String)
+ CathDomain getDescriptionByNodeId(String)
+ List<CathDomain> getDomainsForPdb(String)
+ CathDomain getDomainByCathId(String)
+ CathDomain getDescriptionByCathId(String)
+ List<CathDomain> getDomainsByNodeId(String)
+ List<CathFragment> getFragmentsByPdbId(String)
- void parseCathDomainList()
- void parseCathDomainList(BufferedReader)
- void parseCathNames()
- void parseCathNames(BufferedReader)
- void parseCathDomainDescriptionFile()
- void parseCathDomainDescriptionFile(BufferedReader)
- CathDomain parseCathListFileLine(String)
- CathNode parseCathNamesFileLine(String)
- void parseCathDomall()
- void parseCathDomall(BufferedReader)
# void downloadFileFromRemote(URL,File)
- boolean domainDescriptionFileAvailable()
- boolean domainListFileAvailable()
- boolean nodeListFileAvailable()
- boolean domallFileAvailable()
# void downloadDomainListFile()
# void downloadDomainDescriptionFile()
# void downloadNodeListFile()
# void downloadDomallFile()
+ void ensureDomainListInstalled()
+ void ensureDomainDescriptionInstalled()
+ void ensureNodeListInstalled()
+ void ensureDomallInstalled()
+ void setCathVersion(String)
}
class org.biojava.nbio.structure.xtal.SymoplibParser {
- {static} Logger logger
- {static} String newline
- {static} String SPACE_GROUPS_FILE
- {static} Pattern namePat
- {static} TreeMap<Integer,SpaceGroup> sgs
- {static} HashMap<String,SpaceGroup> name2sgs
+ {static} SpaceGroup getSpaceGroup(int)
- {static} TreeMap<Integer,SpaceGroup> parseSpaceGroupsXML()
+ {static} TreeMap<Integer,SpaceGroup> parseSpaceGroupsXML(InputStream)
- {static} String convertStreamToString(InputStream)
+ {static} SpaceGroup getSpaceGroup(String)
+ {static} TreeMap<Integer,SpaceGroup> getAllSpaceGroups()
+ {static} TreeMap<Integer,SpaceGroup> parseSymopLib(InputStream)
}
interface org.biojava.nbio.structure.align.ce.ConfigStrucAligParams {
+ List<String> getUserConfigParameters()
+ List<String> getUserConfigParameterNames()
+ List<Class> getUserConfigTypes()
+ List<String> getUserConfigHelp()
+ void reset()
}
class org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils {
}
class org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord {
- String name1
- String altLoc1
- String resName1
- String chainID1
- String resSeq1
- String iCode1
- String name2
- String altLoc2
- String resName2
- String chainID2
- String resSeq2
- String iCode2
- String sym1
- String sym2
+ String getName1()
+ String getAltLoc1()
+ String getResName1()
+ String getChainID1()
+ String getResSeq1()
+ String getiCode1()
+ String getName2()
+ String getAltLoc2()
+ String getResName2()
+ String getChainID2()
+ String getResSeq2()
+ String getiCode2()
+ String getSym1()
+ String getSym2()
+ String toString()
}
class org.biojava.nbio.structure.symmetry.core.PermutationGroup {
~ List<List<Integer>> permutations
+ void addPermutation(List<Integer>)
+ List<Integer> getPermutation(int)
+ int getOrder()
+ void completeGroup()
+ String toString()
+ {static} List<Integer> combine(List<Integer>,List<Integer>)
+ {static} int getOrder(List<Integer>)
+ String getGroupTable()
+ int hashCode()
+ Iterator<List<Integer>> iterator()
+ boolean equals(Object)
}
class org.biojava.nbio.structure.quaternary.OperatorResolver {
- List<String> unaryOperators
- List<OrderedPair<String>> binaryOperators
+ void parseOperatorExpressionString(String)
+ void setUnaryOperators(List<String>)
+ void setBinaryOperators(List<OrderedPair<String>>)
+ List<String> getUnaryOperators()
+ List<OrderedPair<String>> getBinaryOperators()
}
interface org.biojava.nbio.structure.cath.CathDatabase {
+ String getCathVersion()
+ CathNode getCathNode(String)
+ List<CathDomain> getByCategory(CathCategory)
+ List<CathDomain> filterByCathCode(String)
+ List<CathNode> getTree(CathDomain)
+ List<CathDomain> filterByNodeName(String)
+ List<CathDomain> filterByDescription(String)
+ CathDomain getDescriptionByNodeId(String)
+ List<CathDomain> getDomainsForPdb(String)
+ CathDomain getDomainByCathId(String)
+ CathDomain getDescriptionByCathId(String)
+ List<CathDomain> getDomainsByNodeId(String)
+ List<CathFragment> getFragmentsByPdbId(String)
}
class org.biojava.nbio.structure.io.mmcif.model.Struct {
~ String entry_id
~ String title
~ String pdbx_descriptor
~ String pdbx_model_details
~ String pdbx_model_type_details
~ String pdbx_CASP_flag
+ String toString()
+ String getEntry_id()
+ void setEntry_id(String)
+ String getTitle()
+ void setTitle(String)
+ String getPdbx_descriptor()
+ void setPdbx_descriptor(String)
+ String getPdbx_model_details()
+ void setPdbx_model_details(String)
+ String getPdbx_model_type_details()
+ void setPdbx_model_type_details(String)
+ String getPdbx_CASP_flag()
+ void setPdbx_CASP_flag(String)
}
class org.biojava.nbio.structure.align.BioJavaStructureAlignment {
+ {static} String algorithmName
- {static} float versionNr
~ StrucAligParameters params
+ String getAlgorithmName()
+ ConfigStrucAligParams getParameters()
+ void setParameters(ConfigStrucAligParams)
+ String getVersion()
+ String printHelp()
+ AFPChain align(Atom[],Atom[])
+ AFPChain align(Atom[],Atom[],Object)
- void copyResults(AFPChain,AlternativeAlignment,Atom[],Atom[])
- {static} char getOneLetter(Group)
}
class org.biojava.nbio.structure.jama.CholeskyDecomposition {
~ {static} long serialVersionUID
- double[][] L
- int n
- boolean isspd
+ boolean isSPD()
+ Matrix getL()
+ Matrix solve(Matrix)
}
class org.biojava.nbio.structure.align.ce.CeCPMain {
- {static} boolean debug
+ {static} String algorithmName
+ {static} String version
+ String getAlgorithmName()
+ String getVersion()
+ {static} void main(String[])
+ AFPChain align(Atom[],Atom[],Object)
- AFPChain alignRight(Atom[],Atom[],CECPParameters)
+ {static} AFPChain postProcessAlignment(AFPChain,Atom[],Atom[],CECalculator)
+ {static} AFPChain postProcessAlignment(AFPChain,Atom[],Atom[],CECalculator,CECPParameters)
+ AFPChain invertAlignment(AFPChain)
+ {static} AFPChain filterDuplicateAFPs(AFPChain,CECalculator,Atom[],Atom[])
+ {static} AFPChain filterDuplicateAFPs(AFPChain,CECalculator,Atom[],Atom[],CECPParameters)
- {static} int[] countCtermResidues(int[],int,int,int)
- {static} int[] countNtermResidues(int[],int,int)
# {static} CPRange calculateMinCP(int[],int,int,int)
- {static} CutPoint calculateCutPoint(int[],int,int,int,int,int,int,int)
- {static} void displayAlignment(AFPChain,Atom[],Atom[])
}
class org.biojava.nbio.structure.align.ce.CeCPMain.ResiduePair {
+ int a
+ int b
+ String toString()
}
class org.biojava.nbio.structure.align.ce.CeCPMain.CPRange {
+ int n
+ int mid
+ int c
}
class org.biojava.nbio.structure.align.ce.CeCPMain.CutPoint {
+ int numResiduesCut
+ int firstRes
+ int lastRes
}
class org.biojava.nbio.structure.symmetry.internal.SequenceFunctionRefiner {
+ MultipleAlignment refine(AFPChain,Atom[],int)
+ {static} AFPChain refineSymmetry(AFPChain,Atom[],Atom[],int)
+ {static} Map<Integer,Integer> refineSymmetry(Map<Integer,Integer>,int)
- {static} List<Integer> initializeEligible(Map<Integer,Integer>,Map<Integer,Double>,List<Integer>,int,NavigableSet<Integer>,NavigableSet<Integer>)
- {static} Map<Integer,Integer> applyAlignmentAndCheckCycles(Map<Integer,Integer>,int,List<Integer>)
- {static} Map<Integer,Double> initializeScores(Map<Integer,Integer>,Map<Integer,Double>,int)
- {static} double scoreAbsError(Integer,Integer,int,int)
- {static} AFPChain partitionAFPchain(AFPChain,Atom[],Atom[],int)
}
class org.biojava.nbio.structure.align.StructurePairAligner {
- {static} Logger logger
~ AlternativeAlignment[] alts
~ Matrix distanceMatrix
~ StrucAligParameters params
~ FragmentPair[] fragPairs
~ List<AlignmentProgressListener> listeners
+ void addProgressListener(AlignmentProgressListener)
+ void clearListeners()
+ {static} void main(String[])
- void reset()
+ FragmentPair[] getFragmentPairs()
+ void setFragmentPairs(FragmentPair[])
+ AlternativeAlignment[] getAlignments()
+ Matrix getDistMat()
+ StrucAligParameters getParams()
+ void setParams(StrucAligParameters)
+ void align(Structure,Structure)
+ void align(Structure,Structure,StrucAligParameters)
+ void align(Structure,String,Structure,String)
+ void align(Structure,String,Structure,String,StrucAligParameters)
+ Atom[] getAlignmentAtoms(Structure)
+ void align(Atom[],Atom[],StrucAligParameters)
- void notifyStartingAlignment(String,Atom[],String,Atom[])
- void notifyFragmentListeners(List<FragmentPair>)
- void notifyJointFragments(JointFragments[])
}
interface org.biojava.nbio.structure.scop.LocalScopDatabase {
}
class org.biojava.nbio.structure.align.xml.AFPChainFlipper {
+ {static} AFPChain flipChain(AFPChain)
}
class org.biojava.nbio.structure.align.multiple.mc.MultipleMcOptimizer {
- {static} Logger logger
- Random rnd
- MultipleSuperimposer imposer
- int Rmin
- int Lmin
- int convergenceSteps
- double C
- double Gopen
- double Gextend
- double dCutoff
- MultipleAlignment msa
- List<SortedSet<Integer>> freePool
- List<Atom[]> atomArrays
- int size
- int blockNr
- double mcScore
- {static} boolean history
- {static} String pathToHistory
- List<Integer> lengthHistory
- List<Double> rmsdHistory
- List<Double> scoreHistory
+ MultipleAlignment call()
- void initialize()
+ MultipleAlignment optimize()
- boolean checkGaps()
- boolean insertGap()
- boolean shiftRow()
- boolean expandBlock()
- boolean shrinkBlock()
- double probabilityFunction(double,int,int)
- void saveHistory(String)
}
class org.biojava.nbio.structure.symmetry.axis.RotationAxisAligner {
- {static} Logger logger
- {static} Vector3d X_AXIS
- {static} Vector3d Y_AXIS
- {static} Vector3d Z_AXIS
- QuatSymmetrySubunits subunits
- RotationGroup rotationGroup
- Matrix4d transformationMatrix
- Matrix4d reverseTransformationMatrix
- Vector3d referenceVector
- Vector3d principalRotationVector
- Vector3d[] principalAxesOfInertia
~ List<List<Integer>> alignedOrbits
- Vector3d minBoundary
- Vector3d maxBoundary
- double xyRadiusMax
~ boolean modified
+ String getSymmetry()
+ Matrix4d getTransformation()
+ Matrix3d getRotationMatrix()
+ Matrix4d getReverseTransformation()
+ Vector3d getPrincipalRotationAxis()
+ Vector3d getRotationReferenceAxis()
+ Vector3d[] getPrincipalAxesOfInertia()
+ Vector3d getDimension()
+ double getRadius()
+ Matrix4d getGeometicCenterTransformation()
+ Point3d getGeometricCenter()
+ Point3d getCentroid()
+ QuatSymmetrySubunits getSubunits()
+ RotationGroup getRotationGroup()
+ List<List<Integer>> getOrbits()
- void run()
- void calcAlignedOrbits()
- List<Integer> alignWithReferenceAxis(List<Integer>)
- void calcTransformation()
- void calcReverseTransformation()
- void calcTransformationBySymmetryAxes()
- void calcTransformationByInertiaAxes()
- Matrix4d alignAxes(Vector3d[],Vector3d[])
- void calcPrincipalAxes()
- void calcBoundaries()
- void calcZDirection()
- List<List<Integer>> getOrbitsByXYWidth()
- double[] getSubunitXYWidth()
- double[] getSubunitZDepth()
- List<List<Integer>> calcOrbits()
- List<Integer> deconvolute(List<Integer>)
- void calcPrincipalRotationVector()
- void calcReferenceVector()
- void refineReferenceVector()
- Vector3d orthogonalize(Vector3d,Vector3d)
- Vector3d getReferenceAxisCylic()
- Vector3d getReferenceAxisCylicWithSubunitAlignment()
- Vector3d getReferenceAxisDihedralWithSubunitAlignment()
- Vector3d getReferenceAxisDihedral()
- Vector3d getReferenceAxisTetrahedral()
- Vector3d getReferenceAxisOctahedral()
- Vector3d getReferenceAxisIcosahedral()
- Vector3d getSubunitReferenceVector()
- {static} Matrix4d flipX()
- {static} Matrix4d flipY()
- {static} Matrix4d flipZ()
}
class org.biojava.nbio.structure.align.pairwise.AlignmentResult {
- {static} long serialVersionUID
~ AlternativeAlignment[] alignments
~ String pdb1
~ String pdb2
~ String chain1
~ String chain2
~ int length1
~ int length2
~ long calculationTime
~ long ioTime
+ String toString()
+ AlternativeAlignment[] getAlignments()
+ void setAlignments(AlternativeAlignment[])
+ String getPdb1()
+ void setPdb1(String)
+ String getPdb2()
+ void setPdb2(String)
+ String getChain1()
+ void setChain1(String)
+ String getChain2()
+ void setChain2(String)
+ int getLength1()
+ void setLength1(int)
+ int getLength2()
+ void setLength2(int)
+ long getCalculationTime()
+ void setCalculationTime(long)
+ long getIoTime()
+ void setIoTime(long)
+ void serialize(File)
+ {static} AlignmentResult deserialize(File)
}
class org.biojava.nbio.structure.io.mmcif.model.PdbxPolySeqScheme {
~ String asym_id
~ String entity_id
~ String seq_id
~ String mon_id
~ String ndb_seq_num
~ String pdb_seq_num
~ String auth_seq_num
~ String pdb_mon_id
~ String auth_mon_id
~ String pdb_strand_id
~ String pdb_ins_code
~ String hetero
+ String getAsym_id()
+ void setAsym_id(String)
+ String getEntity_id()
+ void setEntity_id(String)
+ String getSeq_id()
+ void setSeq_id(String)
+ String getMon_id()
+ void setMon_id(String)
+ String getNdb_seq_num()
+ void setNdb_seq_num(String)
+ String getPdb_seq_num()
+ void setPdb_seq_num(String)
+ String getAuth_seq_num()
+ void setAuth_seq_num(String)
+ String getPdb_mon_id()
+ void setPdb_mon_id(String)
+ String getAuth_mon_id()
+ void setAuth_mon_id(String)
+ String getPdb_strand_id()
+ void setPdb_strand_id(String)
+ String getPdb_ins_code()
+ void setPdb_ins_code(String)
+ String getHetero()
+ void setHetero(String)
}
class org.biojava.nbio.structure.contact.BoundingBox {
- {static} long serialVersionUID
- {static} Logger logger
+ double xmin
+ double xmax
+ double ymin
+ double ymax
+ double zmin
+ double zmax
+ double[] getDimensions()
+ boolean overlaps(BoundingBox,double)
- boolean areOverlapping(double,double,double,double,double)
+ boolean contains(Point3d)
+ void translate(Vector3d)
+ double[] getMinMax(double[])
+ String toString()
}
class org.biojava.nbio.structure.contact.BoundingBox.Bound {
~ int cardinal
~ double value
+ int compareTo(Bound)
+ String toString()
}
class org.biojava.nbio.structure.cath.CathFragment {
+ {static} long serialVersionUID
~ Integer fragmentId
~ String start
~ String stop
~ Integer length
+ Integer getFragmentId()
+ void setFragmentId(Integer)
+ String getStart()
+ void setStart(String)
+ String getStop()
+ void setStop(String)
+ Integer getLength()
+ void setLength(Integer)
}
class org.biojava.nbio.structure.geometry.SuperPositionQuat {
+ Matrix4d superpose(Point3d[],Point3d[])
+ double getRmsd(Point3d[],Point3d[])
}
class org.biojava.nbio.structure.io.mmcif.model.Entity {
~ String id
~ String type
~ String src_method
~ String pdbx_description
~ String formula_weight
~ String pdbx_number_of_molecules
~ String details
~ String pdbx_mutation
~ String pdbx_fragment
~ String pdbx_ec
+ String toString()
+ String getId()
+ void setId(String)
+ String getType()
+ void setType(String)
+ String getSrc_method()
+ void setSrc_method(String)
+ String getPdbx_description()
+ void setPdbx_description(String)
+ String getFormula_weight()
+ void setFormula_weight(String)
+ String getPdbx_number_of_molecules()
+ void setPdbx_number_of_molecules(String)
+ String getDetails()
+ void setDetails(String)
+ String getPdbx_mutation()
+ void setPdbx_mutation(String)
+ String getPdbx_fragment()
+ void setPdbx_fragment(String)
+ String getPdbx_ec()
+ void setPdbx_ec(String)
}
interface org.biojava.nbio.structure.io.mmcif.MMcifConsumer {
+ void documentStart()
+ void documentEnd()
+ void newAtomSite(AtomSite)
+ void newEntity(Entity)
+ void newEntityPoly(EntityPoly)
+ void newEntityPolySeq(EntityPolySeq)
+ void newStructAsym(StructAsym)
+ void setStruct(Struct)
+ void newDatabasePDBrev(DatabasePDBrev)
+ void newDatabasePDBrevRecord(DatabasePdbrevRecord)
+ void newDatabasePDBremark(DatabasePDBremark)
+ void newExptl(Exptl)
+ void newCell(Cell)
+ void newSymmetry(Symmetry)
+ void newStructNcsOper(StructNcsOper)
+ void newAtomSites(AtomSites)
+ void newStructRef(StructRef)
+ void newStructRefSeq(StructRefSeq)
+ void newStructRefSeqDif(StructRefSeqDif)
+ void newStructSite(StructSite)
+ void newStructSiteGen(StructSiteGen)
+ void newPdbxAuditRevisionHistory(PdbxAuditRevisionHistory)
+ void newPdbxDatabaseStatus(PdbxDatabaseStatus)
+ void newPdbxPolySeqScheme(PdbxPolySeqScheme)
+ void newPdbxNonPolyScheme(PdbxNonPolyScheme)
+ void newPdbxEntityNonPoly(PdbxEntityNonPoly)
+ void newStructKeywords(StructKeywords)
+ void newRefine(Refine)
+ void newChemComp(ChemComp)
+ void newChemCompDescriptor(ChemCompDescriptor)
+ void newPdbxStructOperList(PdbxStructOperList)
+ void newPdbxStrucAssembly(PdbxStructAssembly)
+ void newPdbxStrucAssemblyGen(PdbxStructAssemblyGen)
+ void newChemCompAtom(ChemCompAtom)
+ void newPdbxChemCompIndentifier(PdbxChemCompIdentifier)
+ void newChemCompBond(ChemCompBond)
+ void newPdbxChemCompDescriptor(PdbxChemCompDescriptor)
+ void newEntitySrcGen(EntitySrcGen)
+ void newEntitySrcNat(EntitySrcNat)
+ void newEntitySrcSyn(EntitySrcSyn)
+ void newStructConn(StructConn)
+ void newAuditAuthor(AuditAuthor)
+ void newGenericData(String,List<String>,List<String>)
+ void setFileParsingParameters(FileParsingParameters)
+ FileParsingParameters getFileParsingParameters()
}
class org.biojava.nbio.structure.symmetry.core.Stoichiometry {
- String alphabet
- StringOverflowStrategy strategy
- Function<List<SubunitCluster>,String> customStringGenerator
- List<SubunitCluster> orderedClusters
+ void resetAlphas()
- void doResetAlphas()
- String generateAlpha(int)
+ List<SubunitCluster> getClusters()
+ int numberOfComponents()
+ Stoichiometry combineWith(Stoichiometry)
+ Stoichiometry getComponent(int)
+ StringOverflowStrategy getStrategy()
+ void setStrategy(StringOverflowStrategy)
+ void setCustomStringGenerator(Function<List<SubunitCluster>,String>)
+ String getAlphabet()
+ void setAlphabet(String)
+ String toString()
+ boolean isPseudoStoichiometric()
}
class org.biojava.nbio.structure.align.model.AfpChainWriter {
+ {static} String newline
- {static} int LINELENGTH
+ {static} String toFatCat(AFPChain,Atom[],Atom[])
+ {static} String toScoresList(AFPChain)
+ {static} String toFatCatCore(AFPChain,Atom[],Atom[],boolean,boolean,boolean,boolean)
+ {static} void printScoresInLines(AFPChain,int,int,double,double,int,int,double,double,StringBuffer)
- {static} void printScore(StringBuffer,String,double,boolean)
+ {static} String toWebSiteDisplay(AFPChain,Atom[],Atom[])
+ {static} String toWebSiteDisplay(AFPChain,Atom[],Atom[],boolean)
+ {static} String toPrettyAlignment(AFPChain,Atom[],Atom[],boolean,boolean)
+ {static} String toAlignedPairs(AFPChain,Atom[],Atom[])
- {static} void formatGappedRegion(Atom[],Atom[],StringBuffer,int,int,int,int,int,StringWriter,StringWriter,StringWriter,StringWriter,StringWriter,StringWriter,StringWriter,StringWriter,int,boolean)
- {static} CharSequence getPrefix(char,char,int,int,boolean)
- {static} void formatPosition(int,Atom[],int,StringWriter,StringWriter)
- {static} void formatAlignedRegion(AFPChain,Atom[],Atom[],int,int,StringWriter,StringWriter,StringWriter,StringWriter,StringWriter,StringWriter,StringWriter,StringWriter,int,int,boolean,boolean)
- {static} void formatStartingText(int,int,StringWriter,StringWriter,StringWriter,StringWriter,Atom[],Atom[])
- {static} boolean doLenCheck(int,StringBuffer,StringWriter,StringWriter,StringWriter,StringWriter,StringWriter,StringWriter,StringWriter,StringWriter,boolean)
- {static} CharSequence getPDBPos(Atom)
- {static} char getOneLetter(Group)
+ {static} String toDBSearchResult(AFPChain)
+ {static} String toRotMat(AFPChain)
+ {static} String toCE(AFPChain,Atom[],Atom[])
}
class org.biojava.nbio.structure.cluster.SubunitCluster {
- {static} Logger logger
- List<Subunit> subunits
- List<List<Integer>> subunitEQR
- int representative
- SubunitClustererMethod method
- boolean pseudoStoichiometric
- String alpha
+ String getAlpha()
+ void setAlpha(String)
+ List<Subunit> getSubunits()
+ boolean isIdenticalTo(SubunitCluster)
+ boolean isIdenticalByEntityIdTo(SubunitCluster)
+ boolean mergeIdentical(SubunitCluster)
+ boolean mergeIdenticalByEntityId(SubunitCluster)
+ boolean mergeSequence(SubunitCluster,SubunitClustererParameters)
+ boolean mergeSequence(SubunitCluster,SubunitClustererParameters,PairwiseSequenceAlignerType,GapPenalty,SubstitutionMatrix<AminoAcidCompound>)
+ boolean mergeStructure(SubunitCluster,SubunitClustererParameters)
- void updateEquivResidues(SubunitCluster,List<Integer>,List<Integer>)
+ boolean divideInternally(SubunitClustererParameters)
+ int size()
+ int length()
+ SubunitClustererMethod getClustererMethod()
+ List<Atom[]> getAlignedAtomsSubunits()
+ Atom[] getAlignedAtomsSubunit(int)
+ MultipleAlignment getMultipleAlignment()
+ String toString()
+ boolean isPseudoStoichiometric()
}
class org.biojava.nbio.structure.io.GroupToSDF {
+ String getText(Group)
- String getCtab(Group)
- Object getCharges(Group)
- {static} List<Number> getAtomCharges(Group)
- String getSpace(int,String)
- String getHeader(Group)
}
class org.biojava.nbio.structure.io.sifts.SiftsSegment {
- {static} long serialVersionUID
~ String segId
~ String start
~ String end
~ List<SiftsResidue> residues
+ String getSegId()
+ void setSegId(String)
+ String getStart()
+ void setStart(String)
+ String getEnd()
+ void setEnd(String)
+ void addResidue(SiftsResidue)
+ List<SiftsResidue> getResidues()
+ void setResidues(List<SiftsResidue>)
+ String toString()
+ int hashCode()
+ boolean equals(Object)
}
class org.biojava.nbio.structure.io.mmcif.model.AtomSite {
~ String group_PDB
~ String id
~ String type_symbol
~ String label_atom_id
~ String label_alt_id
~ String label_comp_id
~ String label_asym_id
~ String label_entity_id
~ String label_seq_id
~ String pdbx_PDB_ins_code
~ String Cartn_x
~ String Cartn_y
~ String Cartn_z
~ String occupancy
~ String B_iso_or_equiv
~ String Cartn_x_esd
~ String Cartn_y_esd
~ String Cartn_z_esd
~ String occupancy_esd
~ String B_iso_or_equiv_esd
~ String pdbx_formal_charge
~ String auth_seq_id
~ String auth_comp_id
~ String auth_asym_id
~ String auth_atom_id
~ String pdbx_PDB_model_num
+ String getGroup_PDB()
+ void setGroup_PDB(String)
+ String getId()
+ void setId(String)
+ String getType_symbol()
+ void setType_symbol(String)
+ String getLabel_alt_id()
+ void setLabel_alt_id(String)
+ String getLabel_comp_id()
+ void setLabel_comp_id(String)
+ String getLabel_entity_id()
+ void setLabel_entity_id(String)
+ String getLabel_seq_id()
+ void setLabel_seq_id(String)
+ String getPdbx_PDB_ins_code()
+ void setPdbx_PDB_ins_code(String)
+ String getCartn_x()
+ void setCartn_x(String)
+ String getCartn_y()
+ void setCartn_y(String)
+ String getCartn_z()
+ void setCartn_z(String)
+ String getOccupancy()
+ void setOccupancy(String)
+ String getB_iso_or_equiv()
+ void setB_iso_or_equiv(String)
+ String getCartn_x_esd()
+ void setCartn_x_esd(String)
+ String getCartn_y_esd()
+ void setCartn_y_esd(String)
+ String getCartn_z_esd()
+ void setCartn_z_esd(String)
+ String getAuth_seq_id()
+ void setAuth_seq_id(String)
+ String getAuth_comp_id()
+ void setAuth_comp_id(String)
+ String getAuth_asym_id()
+ void setAuth_asym_id(String)
+ String getAuth_atom_id()
+ void setAuth_atom_id(String)
+ String getPdbx_PDB_model_num()
+ void setPdbx_PDB_model_num(String)
+ String getLabel_atom_id()
+ void setLabel_atom_id(String)
+ String getLabel_asym_id()
+ void setLabel_asym_id(String)
+ String getOccupancy_esd()
+ void setOccupancy_esd(String)
+ String getB_iso_or_equiv_esd()
+ void setB_iso_or_equiv_esd(String)
+ String getPdbx_formal_charge()
+ void setPdbx_formal_charge(String)
}
class org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer {
- {static} Logger logger
- Structure structure
- Chain currentChain
- Group currentGroup
- ArrayList<List<Chain>> allModels
- List<Chain> currentModel
- List<Entity> entities
- List<EntityPoly> entityPolys
- List<StructRef> strucRefs
- List<Chain> seqResChains
- List<Chain> entityChains
- List<StructAsym> structAsyms
- List<PdbxStructOperList> structOpers
- List<PdbxStructAssembly> strucAssemblies
- List<PdbxStructAssemblyGen> strucAssemblyGens
- List<EntitySrcGen> entitySrcGens
- List<EntitySrcNat> entitySrcNats
- List<EntitySrcSyn> entitySrcSyns
- List<StructConn> structConn
- List<StructNcsOper> structNcsOper
- List<StructRefSeqDif> sequenceDifs
- List<StructSiteGen> structSiteGens
- Matrix4d parsedScaleMatrix
- Map<String,String> asymId2entityId
- Map<String,String> asymId2authorId
- String currentNmrModelNumber
- FileParsingParameters params
+ void newEntity(Entity)
+ void newEntityPoly(EntityPoly)
+ void newPdbxStructOperList(PdbxStructOperList)
+ void newStructAsym(StructAsym)
- Entity getEntity(int)
+ void newStructKeywords(StructKeywords)
+ void setStruct(Struct)
- Group getNewGroup(String,Character,long,String)
- {static} Chain isKnownChain(String,List<Chain>)
+ void newAtomSite(AtomSite)
- Atom convertAtom(AtomSite)
- Group getCorrectAltLocGroup(Character,String,Character,String,long)
+ void documentStart()
+ void documentEnd()
- void linkEntities()
- void addCharges()
- {static} Chain removeSeqResHeterogeneity(Chain)
- void addBonds()
- void alignSeqRes()
- int getInternalNr(Group)
- void addEntities(StructAsym)
- void addAncilliaryEntityData(StructAsym,int,Entity,EntityInfo)
- void addInformationFromESG(EntitySrcGen,int,EntityInfo)
- void addInformationFromESN(EntitySrcNat,int,EntityInfo)
- void addInfoFromESS(EntitySrcSyn,int,EntityInfo)
- void initMaps()
- void setStructNcsOps()
- void setCrystallographicInfoMetadata()
+ Structure getStructure()
+ void newDatabasePDBrevRecord(DatabasePdbrevRecord)
+ void newDatabasePDBrev(DatabasePDBrev)
+ void newPdbxAuditRevisionHistory(PdbxAuditRevisionHistory)
+ void newPdbxDatabaseStatus(PdbxDatabaseStatus)
+ void newDatabasePDBremark(DatabasePDBremark)
+ void newRefine(Refine)
+ void newAuditAuthor(AuditAuthor)
+ void newExptl(Exptl)
+ void newCell(Cell)
+ void newSymmetry(Symmetry)
+ void newStructNcsOper(StructNcsOper)
+ void newAtomSites(AtomSites)
+ void newStructRef(StructRef)
- StructRef getStructRef(String)
+ void newStructRefSeq(StructRefSeq)
+ void newStructRefSeqDif(StructRefSeqDif)
- Chain getEntityChain(String)
+ void newEntitySrcGen(EntitySrcGen)
+ void newEntitySrcNat(EntitySrcNat)
+ void newEntitySrcSyn(EntitySrcSyn)
+ void newEntityPolySeq(EntityPolySeq)
+ void newPdbxPolySeqScheme(PdbxPolySeqScheme)
+ void newPdbxNonPolyScheme(PdbxNonPolyScheme)
+ void newPdbxEntityNonPoly(PdbxEntityNonPoly)
+ void newChemComp(ChemComp)
+ void newGenericData(String,List<String>,List<String>)
+ FileParsingParameters getFileParsingParameters()
+ void setFileParsingParameters(FileParsingParameters)
+ void newChemCompDescriptor(ChemCompDescriptor)
+ List<PdbxStructOperList> getStructOpers()
+ void newPdbxStrucAssembly(PdbxStructAssembly)
+ List<PdbxStructAssembly> getStructAssemblies()
+ void newPdbxStrucAssemblyGen(PdbxStructAssemblyGen)
+ List<PdbxStructAssemblyGen> getStructAssemblyGens()
+ void newChemCompAtom(ChemCompAtom)
+ void newPdbxChemCompIndentifier(PdbxChemCompIdentifier)
+ void newChemCompBond(ChemCompBond)
+ void newPdbxChemCompDescriptor(PdbxChemCompDescriptor)
+ void newStructConn(StructConn)
+ void newStructSiteGen(StructSiteGen)
+ void newStructSite(StructSite)
- void addSites()
}
class org.biojava.nbio.structure.align.pairwise.AltAligComparator {
- {static} long serialVersionUID
+ int compare(AlternativeAlignment,AlternativeAlignment)
}
class org.biojava.nbio.structure.contact.AtomContactSet {
- {static} long serialVersionUID
- HashMap<Pair<AtomIdentifier>,AtomContact> contacts
- double cutoff
+ void add(AtomContact)
+ void addAll(Collection<AtomContact>)
+ boolean hasContact(Atom,Atom)
+ boolean hasContact(AtomIdentifier,AtomIdentifier)
+ AtomContact getContact(Atom,Atom)
+ int size()
+ Iterator<AtomContact> iterator()
- Pair<AtomIdentifier> getAtomIdPairFromContact(AtomContact)
+ boolean hasContactsWithinDistance(double)
+ List<AtomContact> getContactsWithinDistance(double)
}
interface org.biojava.nbio.structure.align.pairwise.Alignable {
+ int getRows()
+ int getCols()
+ AligMatEl[][] getAligMat()
+ void setAligMat(AligMatEl[][])
+ float getGapExtCol()
+ void setGapExtCol(float)
+ float getGapExtRow()
+ void setGapExtRow(float)
+ float getGapOpenCol()
+ void setGapOpenCol(float)
+ float getGapOpenRow()
+ void setGapOpenRow(float)
+ void setScore(float)
+ float getScore()
+ int getPathSize()
+ void setPathSize(int)
+ void setPath(IndexPair[])
+ IndexPair[] getPath()
}
class org.biojava.nbio.structure.align.ClusterAltAligs {
+ {static} int DEFAULT_CLUSTER_CUTOFF
+ {static} void cluster(AlternativeAlignment[])
+ {static} void cluster(AlternativeAlignment[],int)
}
class org.biojava.nbio.structure.align.fatcat.FatCat {
+ {static} String VERSION
+ {static} String newline
~ FatCatAligner aligner
+ {static} String algorithmName
+ {static} void main(String[])
+ String toString()
+ AFPChain alignRigid(Atom[],Atom[])
+ AFPChain alignRigid(Atom[],Atom[],FatCatParameters)
+ AFPChain alignFlexible(Atom[],Atom[],FatCatParameters)
# AFPChain align(Atom[],Atom[],FatCatParameters,boolean)
+ FatCatAligner getFatCatAligner()
}
class org.biojava.nbio.structure.io.mmcif.ReducedChemCompProvider {
- {static} Logger logger
+ ChemComp getChemComp(String)
}
class org.biojava.nbio.structure.symmetry.core.Rotation {
- double subunitRmsd
- double traceRmsd
- double traceTmScoreMin
- QuatSymmetryScores scores
- List<Integer> permutation
- Matrix4d transformation
- AxisAngle4d axisAngle
- int direction
- int fold
+ double getSubunitRmsd()
+ void setSubunitRmsd(double)
+ double getTraceRmsd()
+ void setTraceRmsd(double)
+ void setTraceTmScoreMin(double)
+ double getTraceTmScoreMin()
+ List<Integer> getPermutation()
+ void setPermutation(List<Integer>)
+ Matrix4d getTransformation()
+ void setTransformation(Matrix4d)
+ int getFold()
+ void setFold(int)
+ QuatSymmetryScores getScores()
+ void setScores(QuatSymmetryScores)
+ int getDirection()
+ void setDirection(int)
+ AxisAngle4d getAxisAngle()
+ void setAxisAngle(AxisAngle4d)
+ int getNStart()
+ String toString()
}
class org.biojava.nbio.structure.AtomIterator {
- {static} Logger logger
- Group group
- int current_atom_pos
- GroupIterator groupiter
+ Chain getCurrentChain()
+ int getCurrentModel()
+ boolean hasNext()
+ Atom next()
+ void remove()
}
class org.biojava.nbio.structure.jama.QRDecomposition {
~ {static} long serialVersionUID
- double[][] QR
- int m
- double[] Rdiag
+ boolean isFullRank()
+ Matrix getH()
+ Matrix getR()
+ Matrix getQ()
+ Matrix solve(Matrix)
}
class org.biojava.nbio.structure.align.util.CliTools {
+ {static} String[] configureBean(Object,String[])
+ {static} String getEnumValuesAsString(Class<T>)
}
class org.biojava.nbio.structure.io.mmcif.model.PdbxNonPolyScheme {
~ String asym_id
~ String entity_id
~ String seq_id
~ String mon_id
~ String ndb_seq_num
~ String pdb_seq_num
~ String auth_seq_num
~ String pdb_mon_id
~ String auth_mon_id
~ String pdb_strand_id
~ String pdb_ins_code
+ String getAsym_id()
+ void setAsym_id(String)
+ String getEntity_id()
+ void setEntity_id(String)
+ String getSeq_id()
+ void setSeq_id(String)
+ String getMon_id()
+ void setMon_id(String)
+ String getNdb_seq_num()
+ void setNdb_seq_num(String)
+ String getPdb_seq_num()
+ void setPdb_seq_num(String)
+ String getAuth_seq_num()
+ void setAuth_seq_num(String)
+ String getPdb_mon_id()
+ void setPdb_mon_id(String)
+ String getAuth_mon_id()
+ void setAuth_mon_id(String)
+ String getPdb_strand_id()
+ void setPdb_strand_id(String)
+ String getPdb_ins_code()
+ void setPdb_ins_code(String)
}
interface org.biojava.nbio.structure.SeqMisMatch {
+ Integer getSeqNum()
+ void setSeqNum(Integer)
+ String getOrigGroup()
+ void setOrigGroup(String)
+ String getPdbGroup()
+ void setPdbGroup(String)
+ String getDetails()
+ void setDetails(String)
+ String getUniProtId()
+ void setUniProtId(String)
+ String getInsCode()
+ void setInsCode(String)
+ String getPdbResNum()
+ void setPdbResNum(String)
+ String toString()
}
class org.biojava.nbio.structure.AtomPositionMap {
- {static} Logger logger
- HashMap<ResidueNumber,Integer> hashMap
- TreeMap<ResidueNumber,Integer> treeMap
+ {static} GroupMatcher AMINO_ACID_MATCHER
+ {static} GroupMatcher ANYTHING_MATCHER
+ int getLength(int,int,String)
+ int getLengthDirectional(int,int,String)
+ int getLength(ResidueNumber,ResidueNumber)
+ int getLengthDirectional(ResidueNumber,ResidueNumber)
+ NavigableMap<ResidueNumber,Integer> getNavMap()
+ Integer getPosition(ResidueNumber)
+ ResidueNumber getFirst(String)
+ ResidueNumber getLast(String)
+ ResidueNumber getFirst()
+ ResidueNumber getLast()
+ List<ResidueRangeAndLength> getRanges()
+ ResidueRangeAndLength trimToValidResidues(ResidueRange)
}
interface org.biojava.nbio.structure.AtomPositionMap.GroupMatcher {
~ boolean matches(Group)
}
class org.biojava.nbio.structure.AtomPositionMap.ValueComparator {
- {static} long serialVersionUID
- Map<T,V> map
+ int compare(T,T)
}
class org.biojava.nbio.structure.io.FastaAFPChainConverter {
- {static} Logger logger
+ {static} AFPChain cpFastaToAfpChain(String,String,Structure,int)
+ {static} AFPChain cpFastaToAfpChain(File,Structure,int)
+ {static} AFPChain cpFastaToAfpChain(ProteinSequence,ProteinSequence,Structure,int)
+ {static} AFPChain fastaFileToAfpChain(File,Structure,Structure)
+ {static} AFPChain fastaStringToAfpChain(String,String,Structure,Structure)
+ {static} AFPChain fastaToAfpChain(Map<String,ProteinSequence>,Structure,Structure)
+ {static} AFPChain fastaToAfpChain(String,String,Structure,Structure)
+ {static} AFPChain fastaToAfpChain(ProteinSequence,ProteinSequence,Structure,Structure)
+ {static} AFPChain fastaToAfpChain(SequencePair<Sequence<AminoAcidCompound>,AminoAcidCompound>,Structure,Structure)
- {static} AFPChain buildAlignment(Atom[],Atom[],ResidueNumber[],ResidueNumber[])
+ {static} List<Object> getAlignedUserCollection(String)
+ {static} void main(String[])
}
interface org.biojava.nbio.structure.domain.DomainProvider {
+ SortedSet<String> getDomainNames(String)
+ SortedSet<String> getRepresentativeDomains()
}
class org.biojava.nbio.structure.io.mmcif.model.EntityPolySeq {
~ String entity_id
~ String num
~ String mon_id
~ String hetero
+ String getEntity_id()
+ void setEntity_id(String)
+ String getNum()
+ void setNum(String)
+ String getMon_id()
+ void setMon_id(String)
+ String getHetero()
+ void setHetero(String)
}
class org.biojava.nbio.structure.contact.Pair {
- {static} long serialVersionUID
- T first
- T second
+ T getFirst()
+ T getSecond()
+ int hashCode()
+ boolean equals(Object)
+ String toString()
}
class org.biojava.nbio.structure.symmetry.core.RotationSolver {
- QuatSymmetrySubunits subunits
- QuatSymmetryParameters parameters
- double distanceThreshold
- DistanceBox<Integer> box
- Vector3d centroid
- Matrix4d centroidInverse
- Point3d[] originalCoords
- Point3d[] transformedCoords
- Map<List<Integer>,Rotation> evaluatedPermutations
- RotationGroup rotations
+ RotationGroup getSymmetryOperations()
- void solve()
- boolean completeRotationGroup(Rotation)
- void addRotation(Rotation)
- Rotation superimposePermutation(List<Integer>)
- List<Double> getAngles()
- boolean isSpherical()
- Rotation isValidPermutation(List<Integer>)
- boolean isAllowedPermutation(List<Integer>)
- void combineWithTranslation(Matrix4d)
- {static} Rotation createSymmetryOperation(List<Integer>,Matrix4d,AxisAngle4d,int,QuatSymmetryScores)
- void setupDistanceBox()
- double calcDistanceThreshold()
- List<Integer> getPermutation()
- void initialize()
}
class org.biojava.nbio.structure.align.ce.GuiWrapper {
~ {static} String guiPackage
~ {static} String strucAlignmentDisplay
~ {static} String displayAFP
~ {static} String alignmentGUI
~ {static} String strucAligJmol
~ {static} String abstractAligJmol
~ {static} String scaleMatrixPanel
+ {static} boolean isGuiModuleInstalled()
+ {static} Object display(AFPChain,Atom[],Atom[])
+ {static} void showAlignmentImage(AFPChain,Atom[],Atom[],Object)
+ {static} void showStructure(Structure)
+ {static} void showAlignmentGUI()
+ {static} Structure getAlignedStructure(Atom[],Atom[])
+ {static} JPanel getScaleableMatrixPanel(Matrix)
+ {static} Atom[] getAtomArray(Atom[],List<Group>,List<Group>)
}
class org.biojava.nbio.structure.io.mmcif.chem.MetalBondDistance {
- String atomType1
- String atomType2
- float lowerLimit
- float upperLimit
+ String getAtomType1()
+ void setAtomType1(String)
+ String getAtomType2()
+ void setAtomType2(String)
+ float getLowerLimit()
+ void setLowerLimit(float)
+ float getUpperLimit()
+ void setUpperLimit(float)
+ String toString()
}
class org.biojava.nbio.structure.AminoAcidImpl {
- {static} long serialVersionUID
+ {static} GroupType type
- Character amino_char
- String recordType
+ GroupType getType()
+ Atom getN()
+ Atom getCA()
+ Atom getC()
+ Atom getO()
+ Atom getCB()
+ Character getAminoType()
+ void setAminoType(Character)
+ void setRecordType(String)
+ String getRecordType()
+ String toString()
+ void setPDBName(String)
+ Object clone()
}
class org.biojava.nbio.structure.domain.pdp.CutSites {
~ int ncuts
~ int[] cut_sites
+ String toString()
+ int getNcuts()
+ void setNcuts(int)
+ int[] getCut_sites()
+ void setCut_sites(int[])
}
class org.biojava.nbio.structure.math.SymbolTable {
- {static} long serialVersionUID
- TreeMap<Key,Value> st
+ void put(Key,Value)
+ Value get(Key)
+ Value delete(Key)
+ boolean contains(Key)
+ int size()
+ Iterator<Key> iterator()
+ Iterable<Key> keys()
+ Key min()
+ Key max()
+ Key ceil(Key)
+ Key floor(Key)
}
class org.biojava.nbio.structure.io.mmcif.model.StructAsym {
~ String id
~ String pdbx_blank_PDB_chainid_flag
~ String pdbx_modified
~ String entity_id
~ String details
+ String getId()
+ void setId(String)
+ String getPdbx_blank_PDB_chainid_flag()
+ void setPdbx_blank_PDB_chainid_flag(String)
+ String getPdbx_modified()
+ void setPdbx_modified(String)
+ String getEntity_id()
+ void setEntity_id(String)
+ String getDetails()
+ void setDetails(String)
}
class org.biojava.nbio.structure.symmetry.core.RotationGroup {
- List<Rotation> rotations
- int principalAxisIndex
- int higherOrderRotationAxis
- int twoFoldsPerpendicular
- int highestOrder
- String pointGroup
- double symmetryDeviation
- boolean complete
- boolean modified
+ int getOrder()
+ Rotation getRotation(int)
+ void addRotation(Rotation)
+ void setC1(int)
+ void removeRotation(int)
+ void complete()
+ String getPointGroup()
+ QuatSymmetryScores getScores()
+ void setSymmetryDeviation(double)
+ boolean isComplete()
+ String toString()
- double averageScores(double[])
- double minScores(double[])
- double maxScores(double[])
- void findHighestOrderAxis()
- void setEAxis()
- void findHigherOrderAxes()
- void calcAxesDirections()
- void findTwoFoldsPerpendicular()
+ int getHigherOrderRotationAxis()
+ int getTwoFoldsPerpendicular()
+ int getPrincipalAxisIndex()
- void calcPointGroup()
+ void sortByFoldDecending()
+ Iterator<Rotation> iterator()
}
class org.biojava.nbio.structure.cluster.Subunit {
- String name
- Structure structure
- StructureIdentifier identifier
- Atom[] reprAtoms
- ProteinSequence sequence
+ Atom[] getRepresentativeAtoms()
+ int size()
+ String getProteinSequenceString()
+ ProteinSequence getProteinSequence()
+ String getName()
+ void setName(String)
+ Structure getStructure()
+ StructureIdentifier getIdentifier()
+ String toString()
}
class org.biojava.nbio.structure.ResidueRange {
- String chainName
- ResidueNumber end
- ResidueNumber start
+ {static} Pattern RANGE_REGEX
+ {static} Pattern CHAIN_REGEX
+ {static} ResidueRange parse(String)
+ {static} List<ResidueRange> parseMultiple(String)
+ boolean equals(Object)
+ String getChainName()
+ ResidueNumber getEnd()
+ ResidueNumber getStart()
+ int hashCode()
+ String toString()
+ ResidueNumber getResidue(int,AtomPositionMap)
+ boolean contains(ResidueNumber,AtomPositionMap)
+ Iterator<ResidueNumber> iterator(AtomPositionMap)
+ {static} Iterator<ResidueNumber> multiIterator(AtomPositionMap,ResidueRange)
+ {static} Iterator<ResidueNumber> multiIterator(AtomPositionMap,List<? extends ResidueRange>)
+ {static} List<ResidueRange> parseMultiple(List<String>)
+ {static} List<String> toStrings(List<? extends ResidueRange>)
+ {static} String toString(List<? extends ResidueRange>)
}
class org.biojava.nbio.structure.cath.CathNode {
+ {static} long serialVersionUID
~ String nodeId
~ String parentId
~ String representative
~ String description
~ CathCategory category
+ String getNodeId()
+ void setNodeId(String)
+ String getParentId()
+ void setParentId(String)
+ String getRepresentative()
+ void setRepresentative(String)
+ String getDescription()
+ void setDescription(String)
+ CathCategory getCategory()
+ String toString()
}
class org.biojava.nbio.structure.symmetry.internal.SequenceFunctionOrderDetector {
- int maxSymmetry
- float minimumMetricChange
+ int calculateOrder(AFPChain,Atom[])
+ String toString()
}
class org.biojava.nbio.structure.align.StrucAligParameters {
~ int initialK
~ String[] usedAtomNames
~ int seedFragmentLength
~ float seedRmsdCutoff
~ int fragmentLength
~ int diagonalDistance
~ int diagonalDistance2
~ boolean reduceInitialFragments
~ float fragmentMiniDistance
~ float fragCompat
~ int maxrefine
~ boolean joinPlo
~ boolean joinFast
~ boolean doAngleCheck
~ boolean doDistanceCheck
~ boolean doDensityCheck
~ boolean doRMSCheck
~ float densityCutoff
~ int angleDiff
~ double joinRMSCutoff
~ float create_co
~ int maxIter
~ float gapOpen
~ float gapExtension
~ int permutationSize
~ float evalCutoff
+ {static} StrucAligParameters getDefaultParameters()
- void setDefault()
+ String toString()
+ {static} StrucAligParameters getDBSearchParameters()
+ float getDensityCutoff()
+ void setDensityCutoff(float)
+ int getInitialK()
+ void setInitialK(int)
+ int getSeedFragmentLength()
+ boolean isJoinFast()
+ void setJoinFast(boolean)
+ boolean isJoinPlo()
+ void setJoinPlo(boolean)
+ void setSeedFragmentLength(int)
+ float getSeedRmsdCutoff()
+ void setSeedRmsdCutoff(float)
+ boolean isDoAngleCheck()
+ void setDoAngleCheck(boolean)
+ boolean isDoDensityCheck()
+ void setDoDensityCheck(boolean)
+ boolean isDoDistanceCheck()
+ void setDoDistanceCheck(boolean)
+ boolean isDoRMSCheck()
+ void setDoRMSCheck(boolean)
+ double getJoinRMSCutoff()
+ void setJoinRMSCutoff(double)
+ float getEvalCutoff()
+ void setEvalCutoff(float)
+ int getPermutationSize()
+ void setPermutationSize(int)
+ float getGapExtension()
+ void setGapExtension(float)
+ float getGapOpen()
+ void setGapOpen(float)
+ int getMaxIter()
+ void setMaxIter(int)
+ float getCreate_co()
+ void setCreate_co(float)
+ boolean reduceInitialFragments()
+ void setReduceInitialFragments(boolean)
+ int getAngleDiff()
+ void setAngleDiff(int)
+ float getFragCompat()
+ void setFragCompat(float)
+ int getMaxrefine()
+ void setMaxrefine(int)
+ String[] getUsedAtomNames()
+ void setUsedAtomNames(String[])
+ int getFragmentLength()
+ void setFragmentLength(int)
+ int getDiagonalDistance()
+ void setDiagonalDistance(int)
+ int getDiagonalDistance2()
+ void setDiagonalDistance2(int)
+ float getFragmentMiniDistance()
+ void setFragmentMiniDistance(float)
}
interface org.biojava.nbio.structure.io.StructureIOFile {
+ void addExtension(String)
+ List<String> getExtensions()
+ Structure getStructure(String)
+ Structure getStructure(File)
}
class org.biojava.nbio.structure.symmetry.geometry.DistanceBox {
- Map<Long,List<T>> map
- Map<Long,List<T>> layerMap
- boolean modified
- double inverseBinWidth
- {static} long[] offset
- List<T> tempBox
+ void addPoint(Point3d,T)
+ List<T> getNeighborsWithCache(Point3d)
+ List<T> getNeighbors(Point3d)
+ List<T> getIntersection(DistanceBox<T>)
- List<T> getBoxTwo(long)
- boolean contains(long)
}
class org.biojava.nbio.structure.symmetry.internal.CeSymm {
+ {static} String version
+ {static} String algorithmName
- {static} Logger logger
- {static} boolean multiPass
- {static} Matrix align(AFPChain,Atom[],Atom[],CESymmParameters,Matrix,CECalculator,int)
# {static} CeSymmResult align(Atom[],CESymmParameters)
+ {static} CeSymmResult analyze(Atom[])
+ {static} CeSymmResult analyze(Atom[],CESymmParameters)
+ {static} CeSymmResult analyzeLevel(Atom[],CESymmParameters)
}
class org.biojava.nbio.structure.io.mmcif.model.PdbxChemCompDescriptor {
~ String comp_id
~ String type
~ String program
~ String program_version
~ String identifier
+ String getComp_id()
+ void setComp_id(String)
+ String getType()
+ void setType(String)
+ String getProgram()
+ void setProgram(String)
+ String getProgram_version()
+ void setProgram_version(String)
+ String getIdentifier()
+ void setIdentifier(String)
}
interface org.biojava.nbio.structure.Chain {
~ Object clone()
~ void addGroup(Group)
~ String getId()
~ void setId(String)
~ void setName(String)
~ String getName()
~ Group getAtomGroup(int)
~ Group getSeqResGroup(int)
~ List<Group> getAtomGroups()
~ void setAtomGroups(List<Group>)
~ List<Group> getAtomGroups(GroupType)
~ Group getGroupByPDB(ResidueNumber)
~ Group[] getGroupsByPDB(ResidueNumber,ResidueNumber)
~ Group[] getGroupsByPDB(ResidueNumber,ResidueNumber,boolean)
~ int getAtomLength()
~ int getSeqResLength()
~ void setEntityInfo(EntityInfo)
~ EntityInfo getEntityInfo()
~ void setChainID(String)
~ String getChainID()
~ String getInternalChainID()
~ void setInternalChainID(String)
~ String toString()
~ Sequence<?> getBJSequence()
~ String getAtomSequence()
~ String getSeqResSequence()
~ void setSwissprotId(String)
~ String getSwissprotId()
~ List<Group> getSeqResGroups(GroupType)
~ List<Group> getSeqResGroups()
~ void setSeqResGroups(List<Group>)
~ void setParent(Structure)
~ void setStructure(Structure)
~ Structure getParent()
~ Structure getStructure()
~ List<Group> getAtomLigands()
~ String toPDB()
~ String toMMCIF()
~ void setSeqMisMatches(List<SeqMisMatch>)
~ List<SeqMisMatch> getSeqMisMatches()
~ EntityType getEntityType()
+ boolean isWaterOnly()
+ boolean isPureNonPolymer()
+ GroupType getPredominantGroupType()
+ boolean isProtein()
+ boolean isNucleicAcid()
}
class org.biojava.nbio.structure.align.util.ConfigurationException {
- {static} long serialVersionUID
}
class org.biojava.nbio.structure.io.mmcif.model.Cell {
~ String entry_id
~ String length_a
~ String length_b
~ String length_c
~ String angle_alpha
~ String angle_beta
~ String angle_gamma
~ String Z_PDB
~ String pdbx_unique_axis
~ String length_a_esd
~ String length_b_esd
~ String length_c_esd
~ String angle_alpha_esd
~ String angle_beta_esd
~ String angle_gamma_esd
~ String volume
+ String getEntry_id()
+ void setEntry_id(String)
+ String getLength_a()
+ void setLength_a(String)
+ String getLength_b()
+ void setLength_b(String)
+ String getLength_c()
+ void setLength_c(String)
+ String getAngle_alpha()
+ void setAngle_alpha(String)
+ String getAngle_beta()
+ void setAngle_beta(String)
+ String getAngle_gamma()
+ void setAngle_gamma(String)
+ String getZ_PDB()
+ void setZ_PDB(String)
+ String getPdbx_unique_axis()
+ void setPdbx_unique_axis(String)
+ String getLength_a_esd()
+ void setLength_a_esd(String)
+ String getLength_b_esd()
+ void setLength_b_esd(String)
+ String getLength_c_esd()
+ void setLength_c_esd(String)
+ String getAngle_alpha_esd()
+ void setAngle_alpha_esd(String)
+ String getAngle_beta_esd()
+ void setAngle_beta_esd(String)
+ String getAngle_gamma_esd()
+ void setAngle_gamma_esd(String)
+ String getVolume()
+ void setVolume(String)
}
class org.biojava.nbio.structure.io.mmcif.AllChemCompProvider {
- {static} Logger logger
+ {static} String COMPONENTS_FILE_LOCATION
- {static} String path
- {static} String serverName
~ {static} ChemicalComponentDictionary dict
~ {static} AtomicBoolean loading
~ {static} AtomicBoolean isInitialized
- {static} void initPath()
- {static} void initServerName()
- void ensureFileExists()
+ {static} void downloadFile()
- {static} void downloadFileFromRemote(URL,File)
- {static} String getLocalFileName()
- void loadAllChemComps()
+ ChemComp getChemComp(String)
+ void run()
}
class org.biojava.nbio.structure.align.quaternary.QsAlign {
- {static} Logger logger
+ {static} QsAlignResult align(Structure,Structure,SubunitClustererParameters,QsAlignParameters)
+ {static} QsAlignResult align(List<Subunit>,List<Subunit>,SubunitClustererParameters,QsAlignParameters)
- {static} Pair<Atom[]> getAlignedAtomsForClusterSubunitMap(List<SubunitCluster>,Map<Integer,Map<Integer,Integer>>)
- {static} Matrix4d getTransformForClusterSubunitMap(List<SubunitCluster>,Map<Integer,Map<Integer,Integer>>)
}
class org.biojava.nbio.structure.contact.Grid {
- {static} int SCALE
- GridCell[][][] cells
- double cutoff
- int cellSize
- Point3d[] iAtoms
- Point3d[] jAtoms
- Atom[] iAtomObjects
- Atom[] jAtomObjects
- int[] bounds
- BoundingBox ibounds
- BoundingBox jbounds
- boolean noOverlap
- int getFloor(double)
- int xintgrid2xgridindex(int)
- int yintgrid2ygridindex(int)
- int zintgrid2zgridindex(int)
+ void addAtoms(Atom[],Atom[])
+ void addAtoms(Atom[],BoundingBox,Atom[],BoundingBox)
+ void addAtoms(Atom[])
+ void addAtoms(Atom[],BoundingBox)
+ void addCoords(Point3d[],Point3d[])
+ void addCoords(Point3d[],BoundingBox,Point3d[],BoundingBox)
+ void addCoords(Point3d[])
+ void addCoords(Point3d[],BoundingBox)
- void fillGrid()
- void findFullGridIntBounds()
- int[] getIntBounds(BoundingBox)
+ AtomContactSet getAtomContacts()
+ AtomContactSet getContacts()
+ List<Contact> getIndicesContacts()
+ boolean hasAnyContact(Point3d[])
+ boolean hasAnyContact(Collection<Point3d>)
+ double getCutoff()
+ boolean isNoOverlap()
# Point3d[] getIAtoms()
# Point3d[] getJAtoms()
}
class org.biojava.nbio.structure.align.multiple.MultipleAlignmentEnsembleImpl {
- {static} long serialVersionUID
- String algorithmName
- String version
- Long ioTime
- Long calculationTime
- List<StructureIdentifier> structureIdentifiers
- List<Atom[]> atomArrays
- List<Matrix> distanceMatrix
- List<MultipleAlignment> multipleAlignments
+ MultipleAlignmentEnsembleImpl clone()
+ String getAlgorithmName()
+ void setAlgorithmName(String)
+ String getVersion()
+ void setVersion(String)
+ Long getIoTime()
+ void setIoTime(Long)
+ Long getCalculationTime()
+ void setCalculationTime(Long)
+ List<StructureIdentifier> getStructureIdentifiers()
+ void setStructureIdentifiers(List<StructureIdentifier>)
+ List<Atom[]> getAtomArrays()
+ void setAtomArrays(List<Atom[]>)
+ void updateAtomArrays()
+ List<Matrix> getDistanceMatrix()
+ void updateDistanceMatrix()
+ List<MultipleAlignment> getMultipleAlignments()
+ MultipleAlignment getMultipleAlignment(int)
+ void setMultipleAlignments(List<MultipleAlignment>)
+ void addMultipleAlignment(MultipleAlignment)
+ int size()
+ void clear()
}
class org.biojava.nbio.structure.BondImpl {
- {static} long serialVersionUID
- Atom atomA
- Atom atomB
- int bondOrder
- void addSelfToAtoms()
+ Atom getAtomA()
+ Atom getAtomB()
+ Atom getOther(Atom)
+ int getBondOrder()
+ double getLength()
+ String toString()
}
class org.biojava.nbio.structure.secstruc.SecStrucTools {
+ {static} List<SecStrucInfo> getSecStrucInfo(Structure)
+ {static} void assignSecStruc(Structure,List<SecStrucInfo>)
+ {static} List<SecStrucElement> getSecStrucElements(Structure)
+ {static} List<SecStrucElement> getSecStrucElements(List<Group>)
}
class org.biojava.nbio.structure.align.fatcat.FatCatRigid {
+ {static} String algorithmName
~ FatCatParameters params
+ AFPChain align(Atom[],Atom[])
+ AFPChain align(Atom[],Atom[],Object)
+ String getAlgorithmName()
+ ConfigStrucAligParams getParameters()
+ String getVersion()
+ void setParameters(ConfigStrucAligParams)
}
class org.biojava.nbio.structure.io.FileParsingParameters {
- {static} long serialVersionUID
- boolean parseSecStruc
- boolean alignSeqRes
- boolean parseCAOnly
- boolean headerOnly
+ {static} int ATOM_CA_THRESHOLD
- int atomCaThreshold
- boolean parseBioAssembly
- boolean createAtomBonds
- boolean createAtomCharges
+ {static} int MAX_ATOMS
~ int maxAtoms
~ String[] fullAtomNames
+ void setDefault()
+ boolean isParseSecStruc()
+ void setParseSecStruc(boolean)
+ boolean isHeaderOnly()
+ void setHeaderOnly(boolean)
+ boolean isParseCAOnly()
+ void setParseCAOnly(boolean)
+ boolean isAlignSeqRes()
+ void setAlignSeqRes(boolean)
+ String[] getAcceptedAtomNames()
+ void setAcceptedAtomNames(String[])
+ int getMaxAtoms()
+ void setMaxAtoms(int)
+ int getAtomCaThreshold()
+ void setAtomCaThreshold(int)
+ boolean isParseBioAssembly()
+ void setParseBioAssembly(boolean)
+ boolean shouldCreateAtomBonds()
+ void setCreateAtomBonds(boolean)
+ boolean shouldCreateAtomCharges()
+ void setCreateAtomCharges(boolean)
}
class org.biojava.nbio.structure.domain.pdp.SegmentComparator {
- {static} long serialVersionUID
+ int compare(Segment,Segment)
}
class org.biojava.nbio.structure.symmetry.internal.SymmOptimizer {
- {static} Logger logger
- Random rnd
- int Rmin
- int Lmin
- int maxIter
- double C
- {static} double Gopen
- {static} double Gextend
- double dCutoff
- MultipleAlignment msa
- SymmetryAxes axes
- Atom[] atoms
- int order
- int length
- int repeatCore
- List<List<Integer>> block
- List<Integer> freePool
- double mcScore
- {static} boolean history
- {static} int saveStep
- {static} String pathToHistory
- List<Long> timeHistory
- List<Integer> lengthHistory
- List<Double> rmsdHistory
- List<Double> tmScoreHistory
- List<Double> mcScoreHistory
- void initialize()
+ MultipleAlignment optimize()
- void updateMultipleAlignment()
- boolean checkGaps()
- boolean insertGap()
- boolean shiftRow()
- boolean expandBlock()
- boolean shrinkBlock()
- double probabilityFunction(double,int,int)
- void saveHistory(String)
}
class org.biojava.nbio.structure.symmetry.internal.CeSymmIterative {
- {static} Logger logger
- CESymmParameters params
- Graph<Integer,DefaultEdge> alignGraph
- List<CeSymmResult> levels
+ CeSymmResult execute(Atom[])
- void iterate(Atom[])
- CeSymmResult reconstructSymmResult(Atom[])
- SymmetryAxes recoverAxes(CeSymmResult)
- {static} int countHelixStrandSSE(Atom[])
}
class org.biojava.nbio.structure.align.multiple.util.MultipleAlignmentScorer {
+ {static} String PROBABILITY
+ {static} String CE_SCORE
+ {static} String RMSD
+ {static} String AVGTM_SCORE
+ {static} String MC_SCORE
+ {static} String REF_RMSD
+ {static} String REFTM_SCORE
+ {static} void calculateScores(MultipleAlignment)
+ {static} double getRMSD(MultipleAlignment)
+ {static} double getRMSD(List<Atom[]>)
+ {static} double getRefRMSD(MultipleAlignment,int)
+ {static} double getRefRMSD(List<Atom[]>,int)
+ {static} double getAvgTMScore(MultipleAlignment)
+ {static} double getAvgTMScore(List<Atom[]>,List<Integer>)
+ {static} double getRefTMScore(MultipleAlignment,int)
+ {static} double getRefTMScore(List<Atom[]>,List<Integer>,int)
+ {static} double getMCScore(MultipleAlignment,double,double,double)
- {static} double getMCScore(List<Atom[]>,double,double,double,double)
}
class org.biojava.nbio.structure.symmetry.geometry.Permute {
- List<Point3i> triples
+ int size()
+ Point3i get(int)
}
class org.biojava.nbio.structure.symmetry.geometry.SphereSampler {
- {static} List<Quat4d> orientations
- {static} double[][] cubeSyms
- {static} double delta
- {static} double sigma
- {static} int ntot
- {static} int ncell
- {static} int nent
- {static} int[] k
- {static} int[] l
- {static} int[] m
- {static} int[] mult
+ {static} int getSphereCount()
+ {static} Quat4d getQuat4d(int)
+ {static} void getAxisAngle(int,AxisAngle4f)
+ {static} void getAxisAngle(int,AxisAngle4d)
- {static} double pind(double,double,double)
}
class org.biojava.nbio.structure.jama.SingularValueDecomposition {
~ {static} long serialVersionUID
- double[][] U
- double[] s
- int m
+ Matrix getU()
+ Matrix getV()
+ double[] getSingularValues()
+ Matrix getS()
+ double norm2()
+ double cond()
+ int rank()
}
class org.biojava.nbio.structure.PassthroughIdentifier {
- {static} long serialVersionUID
- String identifier
+ String getIdentifier()
+ SubstructureIdentifier toCanonical()
+ Structure reduce(Structure)
+ Structure loadStructure(AtomCache)
}
class org.biojava.nbio.structure.io.mmcif.model.PdbxAuditRevisionHistory {
- String ordinal
- String data_content_type
- String major_revision
- String minor_revision
- String revision_date
+ String getOrdinal()
+ void setOrdinal(String)
+ String getData_content_type()
+ void setData_content_type(String)
+ String getMajor_revision()
+ void setMajor_revision(String)
+ String getMinor_revision()
+ void setMinor_revision(String)
+ String getRevision_date()
+ void setRevision_date(String)
}
class org.biojava.nbio.structure.symmetry.core.Helix {
- QuatSymmetryScores scores
- List<Integer> permutation
- List<List<Integer>> repeatUnits
- Matrix4d transformation
- double rise
- int nStart
- int fold
- int contacts
+ QuatSymmetryScores getScores()
+ void setScores(QuatSymmetryScores)
+ List<Integer> getPermutation()
+ void setPermutation(List<Integer>)
+ List<List<Integer>> getRepeatUnits()
+ void setRepeatUnits(List<List<Integer>>)
+ Matrix4d getTransformation()
+ void setTransformation(Matrix4d)
+ double getRise()
+ void setRise(double)
+ double getAngle()
+ AxisAngle4d getAxisAngle()
+ int getnStart()
+ void setnStart(int)
+ int getFold()
+ void setFold(int)
+ int getContacts()
+ void setContacts(int)
+ String toString()
+ List<List<Integer>> getLayerLines()
- {static} void createLineSegments(List<Integer>,List<List<Integer>>)
- {static} void joinLineSegments(List<List<Integer>>)
- {static} void trimEmptyLineSegments(List<List<Integer>>)
}
class org.biojava.nbio.structure.secstruc.SecStrucCalc {
- {static} boolean DSSP_HELICES
- {static} Logger logger
+ {static} double MINDIST
+ {static} double CA_MIN_DIST
+ {static} double MAX_PEPTIDE_BOND_LENGTH
+ {static} int HBONDLOWENERGY
+ {static} double HBONDHIGHENERGY
+ {static} double Q
- SecStrucGroup[] groups
- List<Ladder> ladders
- List<BetaBridge> bridges
- Atom[] atoms
- AtomContactSet contactSet
- Map<ResidueNumber,Integer> indResMap
+ List<SecStrucState> calculate(Structure,boolean)
- void initContactSet()
- void detectStrands()
- void createLadders()
- void updateSheets()
- void connectLadders()
- boolean hasBulge(Ladder,Ladder)
- void registerBridge(int,int,BridgeType)
- boolean shouldExtendLadder(Ladder,BetaBridge)
- void findBridges()
- void detectBends()
- void calculateDihedralAngles()
+ String toString()
+ String printDSSP()
+ String printHelixSummary()
+ String printFASTA()
+ int hashCode()
+ boolean equals(Object)
- {static} SecStrucGroup[] initGroupArray(Structure,int)
- void calculateHAtoms()
- void calculateHBonds()
- void checkAddHBond(int,int)
- {static} double calculateHBondEnergy(SecStrucGroup,SecStrucGroup)
- void trackHBondEnergy(int,int,double)
- void calculateTurns()
- boolean isBonded(int,int)
- {static} Atom calc_H(Atom,Atom,Atom)
- {static} Atom calcSimple_H(Atom,Atom,Atom)
- void buildHelices()
- void checkSetTurns()
- void checkSetHelix(int,SecStrucType)
- void setSecStrucType(int,SecStrucType)
- SecStrucState getSecStrucState(int)
}
interface org.biojava.nbio.structure.align.ce.MatrixListener {
+ double[][] matrixInOptimizer(double[][])
+ boolean[][] initializeBreakFlag(boolean[][])
}
class org.biojava.nbio.structure.JournalArticle {
- {static} long serialVersionUID
- List<Author> authorList
- List<Author> editorList
- String title
- String ref
- String journalName
- String volume
- String startPage
- int publicationDate
- String publisher
- String refn
- String pmid
- String doi
- boolean published
+ List<Author> getAuthorList()
+ void setAuthorList(List<Author>)
+ List<Author> getEditorList()
+ void setEditorList(List<Author>)
+ String getDoi()
+ void setDoi(String)
+ void setIsPublished(Boolean)
+ String getPmid()
+ void setPmid(String)
+ String getRef()
+ void setRef(String)
+ String getRefn()
+ void setRefn(String)
+ String getTitle()
+ void setTitle(String)
+ String getJournalName()
+ void setJournalName(String)
+ int getPublicationDate()
+ void setPublicationDate(int)
+ boolean isPublished()
+ void setPublished(boolean)
+ String getPublisher()
+ void setPublisher(String)
+ String getStartPage()
+ void setStartPage(String)
+ String getVolume()
+ void setVolume(String)
+ String toString()
}
class org.biojava.nbio.structure.xtal.io.SpaceGroupMapElements {
+ Integer key
+ SpaceGroup value
}
class org.biojava.nbio.structure.align.helper.GapArray {
+ int index
+ int value
+ int getIndex()
+ void setIndex(int)
+ int getValue()
+ void setValue(int)
}
class org.biojava.nbio.structure.align.ce.CeCalculatorEnhanced {
# {static} boolean isPrint
- {static} boolean showAlignmentSteps
- {static} boolean debug
~ int[] f1
~ int[] f2
~ double[][] dist1
~ double[][] dist2
# double[][] mat
# int[] bestTrace1
# int[] bestTrace2
# int[][] bestTraces1
# int[][] bestTraces2
# int nBestTrace
# int nBestTraces
~ double[] d_
# int[] bestTracesN
# double bestTraceScore
# int nTrace
# double[] bestTracesScores
# int[] trace1
# int[] trace2
# {static} double zThr
~ long timeStart
~ long timeEnd
- int nAtom
- int[] align_se1
- int[] align_se2
- int alignmentPositionOrLength
- int[] bestTraceLen
- Matrix r
- Atom t
# int nTraces
- double z
- int[] traceIndexContainer
# CeParameters params
# {static} int nIter
- {static} boolean distAll
~ List<MatrixListener> matrixListeners
+ {static} boolean GLOBAL_ALIGN1
+ {static} boolean GLOBAL_ALIGN2
- {static} double[] scoreAv8
- {static} double[] scoreSd8
- {static} double[] gapsAv8
- {static} double[] gapsSd8
- {static} double[] scoreAv6
- {static} double[] scoreSd6
- {static} double[] gapsAv6
- {static} double[] gapsSd6
- {static} double[] tableZtoP
- {static} double[] tablePtoZ
+ AFPChain extractFragments(AFPChain,Atom[],Atom[])
- double getDistanceWithSidechain(Atom,Atom)
- double[][] initIntraDistmatrix(Atom[],int)
+ double[][] initSumOfDistances(int,int,int,int,Atom[],Atom[])
+ void traceFragmentMatrix(AFPChain,Atom[],Atom[])
# double getScore2(int,int,double[][],int,int[],int,int,double,double)
# int doIter0(int,double,double)
# double getScoreFromDistanceMatrices(int,int,int)
+ void nextStep(AFPChain,Atom[],Atom[])
- void checkBestTraces(AFPChain,Atom[],Atom[])
- void setStrBuf(Atom[],int,Atom[],int)
- double getRMSDForBestTrace(int,Atom[],Atom[],int[],int[][],int[],int,Atom[],Atom[])
- void checkPrintRmsdNew(int,int,Atom[],Atom[])
- {static} char getOneLetter(Group)
- int optimizeSuperposition(AFPChain,int,int,int,double,Atom[],Atom[],int,Atom[],Atom[])
+ {static} double[][] updateMatrixWithSequenceConservation(double[][],Atom[],Atom[],CeParameters)
- double[][] notifyMatrixListener(double[][])
- boolean[][] notifyBreakFlagListener(boolean[][])
+ void addMatrixListener(MatrixListener)
- double dpAlign(int,int,double,double,boolean,boolean)
- String getTraceBack(int[][],int[][],int,int)
- void rot_mol(Atom[],Atom[],int,Matrix,Atom)
+ double calc_rmsd(Atom[],Atom[],int,boolean,boolean)
- Atom[] getAtoms(Atom[],int,boolean)
- void noBestTrace()
- double zToP(double)
- double pToZ(double)
- double zByZ(double,double)
# double zStrAlign(int,int,double,int)
~ double zScore(int,int,double)
~ double zGaps(int,int,int)
+ void convertAfpChain(AFPChain,Atom[],Atom[])
+ int getnAtom()
+ void setnAtom(int)
+ int getLcmp()
+ void setLcmp(int)
+ int[] getAlign_se1()
+ void setAlign_se1(int[])
+ int[] getAlign_se2()
+ void setAlign_se2(int[])
+ double[][] getMatMatrix()
+ void setMatMatrix(double[][])
+ Matrix getRotationMatrix()
+ Atom getShift()
+ double[][] getDist1()
+ void setDist1(double[][])
+ double[][] getDist2()
+ void setDist2(double[][])
}
class org.biojava.nbio.structure.symmetry.utils.PowerSet {
+ Set<Set<T>> powerSet(Set<T>)
}
class org.biojava.nbio.structure.io.cif.CifFileSupplierImpl {
+ CifFile get(Structure)
- {static} List<WrappedAtom> collectWrappedAtoms(Structure)
- {static} Collector<WrappedAtom,?,Category> toAtomSite()
}
class org.biojava.nbio.structure.io.cif.CifFileSupplierImpl.WrappedAtom {
- Chain chain
- int model
- String chainName
- String chainId
- Atom atom
- int atomId
~ Chain getChain()
~ int getModel()
~ String getChainName()
~ String getChainId()
~ Atom getAtom()
~ int getAtomId()
}
class org.biojava.nbio.structure.io.cif.CifFileSupplierImpl.AtomSiteCollector {
- MmCifCategoryBuilder.AtomSiteBuilder atomSiteBuilder
- StrColumnBuilder<MmCifCategoryBuilder.AtomSiteBuilder,MmCifBlockBuilder,MmCifFileBuilder> groupPDB
- IntColumnBuilder<MmCifCategoryBuilder.AtomSiteBuilder,MmCifBlockBuilder,MmCifFileBuilder> id
- StrColumnBuilder<MmCifCategoryBuilder.AtomSiteBuilder,MmCifBlockBuilder,MmCifFileBuilder> typeSymbol
- StrColumnBuilder<MmCifCategoryBuilder.AtomSiteBuilder,MmCifBlockBuilder,MmCifFileBuilder> labelAtomId
- StrColumnBuilder<MmCifCategoryBuilder.AtomSiteBuilder,MmCifBlockBuilder,MmCifFileBuilder> labelAltId
- StrColumnBuilder<MmCifCategoryBuilder.AtomSiteBuilder,MmCifBlockBuilder,MmCifFileBuilder> labelCompId
- StrColumnBuilder<MmCifCategoryBuilder.AtomSiteBuilder,MmCifBlockBuilder,MmCifFileBuilder> labelAsymId
- StrColumnBuilder<MmCifCategoryBuilder.AtomSiteBuilder,MmCifBlockBuilder,MmCifFileBuilder> labelEntityId
- IntColumnBuilder<MmCifCategoryBuilder.AtomSiteBuilder,MmCifBlockBuilder,MmCifFileBuilder> labelSeqId
- StrColumnBuilder<MmCifCategoryBuilder.AtomSiteBuilder,MmCifBlockBuilder,MmCifFileBuilder> pdbxPDBInsCode
- FloatColumnBuilder<MmCifCategoryBuilder.AtomSiteBuilder,MmCifBlockBuilder,MmCifFileBuilder> cartnX
- FloatColumnBuilder<MmCifCategoryBuilder.AtomSiteBuilder,MmCifBlockBuilder,MmCifFileBuilder> cartnY
- FloatColumnBuilder<MmCifCategoryBuilder.AtomSiteBuilder,MmCifBlockBuilder,MmCifFileBuilder> cartnZ
- FloatColumnBuilder<MmCifCategoryBuilder.AtomSiteBuilder,MmCifBlockBuilder,MmCifFileBuilder> occupancy
- FloatColumnBuilder<MmCifCategoryBuilder.AtomSiteBuilder,MmCifBlockBuilder,MmCifFileBuilder> bIsoOrEquiv
- IntColumnBuilder<MmCifCategoryBuilder.AtomSiteBuilder,MmCifBlockBuilder,MmCifFileBuilder> authSeqId
- StrColumnBuilder<MmCifCategoryBuilder.AtomSiteBuilder,MmCifBlockBuilder,MmCifFileBuilder> authCompId
- StrColumnBuilder<MmCifCategoryBuilder.AtomSiteBuilder,MmCifBlockBuilder,MmCifFileBuilder> authAsymId
- StrColumnBuilder<MmCifCategoryBuilder.AtomSiteBuilder,MmCifBlockBuilder,MmCifFileBuilder> authAtomId
- IntColumnBuilder<MmCifCategoryBuilder.AtomSiteBuilder,MmCifBlockBuilder,MmCifFileBuilder> pdbxPDBModelNum
+ void accept(WrappedAtom)
~ AtomSiteCollector combine(AtomSiteCollector)
~ Category get()
}
class org.biojava.nbio.structure.io.mmtf.MmtfSummaryDataBean {
- Map<String,Integer> chainIdToIndexMap
- List<Chain> allChains
- List<Atom> allAtoms
- int numBonds
+ List<Chain> getAllChains()
+ void setAllChains(List<Chain>)
+ List<Atom> getAllAtoms()
+ void setAllAtoms(List<Atom>)
+ int getNumBonds()
+ void setNumBonds(int)
+ Map<String,Integer> getChainIdToIndexMap()
+ void setChainIdToIndexMap(Map<String,Integer>)
}
class org.biojava.nbio.structure.io.PDBFileParser {
- {static} Logger logger
- {static} String NEWLINE
- String pdbId
- Structure structure
- List<List<Chain>> allModels
- List<Chain> currentModel
- Chain currentChain
- Group currentGroup
- List<Chain> seqResChains
- boolean isLegacyFormat
- boolean blankChainIdsPresent
- PDBBioAssemblyParser bioAssemblyParser
- PDBHeader pdbHeader
- PDBCrystallographicInfo crystallographicInfo
- JournalArticle journalArticle
- List<Map<String,Integer>> connects
- List<Map<String,String>> helixList
- List<Map<String,String>> strandList
- List<Map<String,String>> turnList
- int lengthCheck
- boolean isLastCompndLine
- boolean isLastSourceLine
- EntityInfo current_compound
- List<EntityInfo> entities
- HashMap<Integer,List<String>> compoundMolIds2chainIds
- List<String> compndLines
- List<String> sourceLines
- List<String> journalLines
- List<DBRef> dbrefs
- Map<String,Site> siteMap
- Map<String,List<ResidueNumber>> siteToResidueMap
- List<SSBondImpl> ssbonds
- List<LinkRecord> linkRecords
- Matrix4d currentNcsOp
- List<Matrix4d> ncsOperators
- int prevMolId
- String previousContinuationField
- String continuationField
- String continuationString
- DateFormat dateFormat
- float rfreeStandardLine
- float rfreeNoCutoffLine
- {static} List<String> compndFieldValues
- {static} List<String> ignoreCompndFieldValues
- {static} List<String> sourceFieldValues
- int atomCount
- int atomCAThreshold
- int loadMaxAtoms
- boolean atomOverflow
- boolean parseCAonly
- FileParsingParameters params
- boolean startOfMolecule
- boolean startOfModel
~ Site site
- Group getNewGroup(String,Character,String)
- void pdb_HEADER_Handler(String)
- void pdb_AUTHOR_Handler(String)
- void pdb_HELIX_Handler(String)
- void pdb_SHEET_Handler(String)
- void pdb_TURN_Handler(String)
- void pdb_REVDAT_Handler(String)
- void pdb_SEQRES_Handler(String)
- void pdb_TITLE_Handler(String)
- void pdb_JRNL_Handler(String)
- void pdb_COMPND_Handler(String)
- void compndValueSetter(String,String)
- void pdb_SOURCE_Handler(String)
- void sourceValueSetter(String,String)
- void pdb_REMARK_Handler(String)
- void pdb_EXPDTA_Handler(String)
- void pdb_CRYST1_Handler(String)
- void pdb_MTRIXn_Handler(String)
- void pdb_ATOM_Handler(String)
- Group getCorrectAltLocGroup(Character,String,Character,String)
- void switchCAOnly()
- Integer conect_helper(String,int,int)
- void pdb_CONECT_Handler(String)
- void pdb_MODEL_Handler(String)
- void pdb_TER_Handler()
- void pdb_DBREF_Handler(String)
- void pdb_SSBOND_Handler(String)
- void pdb_LINK_Handler(String)
- void pdb_SITE_Handler(String)
- void pdb_REMARK_800_Handler(String)
- int intFromString(String)
- {static} Chain isKnownChain(String,List<Chain>)
- BufferedReader getBufferedReader(InputStream)
+ Structure parsePDBFile(InputStream)
+ Structure parsePDBFile(BufferedReader)
- void addCharges()
- void makeCompounds(List<String>,List<String>)
- void formBonds()
- void triggerEndFileChecks()
- void setSecStruc()
- void setSecElement(List<Map<String,String>>,String,SecStrucType)
- {static} List<List<Chain>> findChains(String,List<List<Chain>>)
- {static} List<List<Chain>> splitNonPolyChain(Chain)
- void assignAsymIds(List<List<Chain>>,List<List<Chain>>,List<List<Chain>>)
- String getNextAsymId(String)
- char getNextChar(char)
- void assignChainsAndEntities()
- void linkSitesToGroups()
- void buildjournalArticle()
- List<Author> authorBuilder(String)
+ void setFileParsingParameters(FileParsingParameters)
+ FileParsingParameters getFileParsingParameters()
}
class org.biojava.nbio.structure.io.PDBFileParser.JournalParser {
- String journalName
- String volume
- String startPage
- int publicationDate
- String getJournalName()
- int getPublicationDate()
- String getStartPage()
- String getVolume()
}
class org.biojava.nbio.structure.align.util.AFPAlignmentDisplay {
- {static} Logger logger
- {static} int[][] aaMatrix
- {static} Character[] aa1
- {static} List<Character> aa1List
+ {static} Matrix getRotMax(AFPChain,Atom[],Atom[])
+ {static} Atom getTranslation(AFPChain,Atom[],Atom[])
+ {static} Atom[] getAlignedAtoms1(AFPChain,Atom[])
+ {static} Atom[] getAlignedAtoms2(AFPChain,Atom[])
+ {static} void getAlign(AFPChain,Atom[],Atom[])
+ {static} void getAlign(AFPChain,Atom[],Atom[],boolean)
- {static} char getOneLetter(Group)
+ {static} int aaScore(char,char)
+ {static} Map<String,Double> calcIdSimilarity(char[],char[],int)
+ {static} Structure createArtificalStructure(AFPChain,Atom[],Atom[])
+ {static} int getBlockNrForAlignPos(AFPChain,int)
}
class org.biojava.nbio.structure.domain.pdp.ClusterDomains {
- {static} boolean verbose
- {static} int ndom
+ {static} List<Domain> cluster(List<Domain>,PDPDistanceMatrix)
- {static} long getTotalContacts(List<Domain>,PDPDistanceMatrix,Domain,Domain)
- {static} List<Domain> combine(List<Domain>,int,int,double)
- {static} long calc_S(int,int,int,int,PDPDistanceMatrix)
- {static} void listdomains(List<Domain>)
}
class org.biojava.nbio.structure.io.BondMaker {
- {static} Logger logger
+ {static} Set<String> BOND_TYPES_TO_PARSE
- {static} double MAX_PEPTIDE_BOND_LENGTH
- {static} double MAX_NUCLEOTIDE_BOND_LENGTH
- Structure structure
- FileParsingParameters params
+ void makeBonds()
- void formPeptideBonds()
- void formNucleotideBonds()
- void formIntraResidueBonds()
- void formBondAltlocAware(Group,String,Group,String,double,int)
- List<Atom> getAtoms(Group,String)
- void trimBondLists()
+ void formDisulfideBonds(List<SSBondImpl>)
- void formDisulfideBond(SSBondImpl)
+ void formLinkRecordBond(LinkRecord)
+ void formBondsFromStructConn(List<StructConn>)
- Map<Integer,Atom> getAtomFromRecord(String,String,String,String,String,String)
}
class org.biojava.nbio.structure.quaternary.BioAssemblyInfo {
- {static} long serialVersionUID
- int id
- List<BiologicalAssemblyTransformation> transforms
- int macromolecularSize
+ int getId()
+ void setId(int)
+ List<BiologicalAssemblyTransformation> getTransforms()
+ void setTransforms(List<BiologicalAssemblyTransformation>)
+ int getMacromolecularSize()
+ void setMacromolecularSize(int)
+ String toString()
}
class org.biojava.nbio.structure.basepairs.BasePairParameters {
- {static} long serialVersionUID
- {static} Logger log
+ {static} String[] STANDARD_BASES
# {static} String[] BASE_LIST_DNA
# {static} String[] BASE_LIST_RNA
# {static} Map<String,Integer> BASE_MAP
# {static} Map<Integer,List<String>> RING_MAP
# Structure structure
# boolean canonical
# boolean useRNA
# boolean nonredundant
# double[] pairParameters
# String pairSequence
# double[][] pairingParameters
# double[][] stepParameters
# List<String> pairingNames
# List<Matrix4d> referenceFrames
+ BasePairParameters analyze()
+ int getLength()
+ double[][] getPairingParameters()
+ double[][] getStepParameters()
+ String getPairSequence()
+ List<String> getPairingNames()
+ List<Matrix4d> getReferenceFrames()
- void checkArgument(int)
+ Double getBuckle(int)
+ Double getPropeller(int)
+ Double getOpening(int)
+ Double getShear(int)
+ Double getStretch(int)
+ Double getStagger(int)
+ Double getTilt(int)
+ Double getRoll(int)
+ Double getTwist(int)
+ Double getShift(int)
+ Double getSlide(int)
+ Double getRise(int)
+ List<Chain> getNucleicChains(boolean)
+ List<Pair<Group>> findPairs(List<Chain>)
+ Matrix4d basePairReferenceFrame(Pair<Group>)
+ String toString()
+ {static} double[] calculateTp(Matrix4d)
# {static} char complementBase(char,boolean)
- {static} String complement(String,boolean)
- {static} double[] cross(double[],double[])
- {static} double[] removeComponent(double[],double[])
- {static} String longestCommonSubstring(String,String)
# {static} boolean match(char,char,boolean)
}
class org.biojava.nbio.structure.align.fatcat.calc.StructureAlignmentOptimizer {
~ int pro1Len
~ int pro2Len
~ int maxLen
~ Atom[] cod1
~ Atom[] cod2
~ int[][] equSet
~ int equLen
~ int equLen0
~ double[][] sij
~ int maxKeepStep
~ int keepStep
~ double Dc
~ double rmsdCut
~ double increase
~ double stopLenPer
~ double stopRmsdPer
~ double stopRmsd
~ double gapIni
~ double gapExt
~ double rmsd
- {static} boolean debug
+ void runOptimization(int)
- void setParameters()
- void superimposeBySet()
- void optimize(int)
- void calMatrix()
- boolean defineEquPos(int,int[][])
+ double optimizeResult(int[],int,int[][])
}
interface org.biojava.nbio.structure.symmetry.internal.OrderDetector {
+ int calculateOrder(AFPChain,Atom[])
}
class org.biojava.nbio.structure.contact.GroupContact {
- {static} long serialVersionUID
- Pair<Group> pair
- List<AtomContact> atomContacts
+ void addAtomContact(AtomContact)
+ Pair<Group> getPair()
+ void setPair(Pair<Group>)
+ double getMinDistance()
+ int getNumAtomContacts()
+ List<AtomContact> getAtomContacts()
+ List<AtomContact> getContactsWithinDistance(double)
+ String toString()
}
interface org.biojava.nbio.structure.symmetry.geometry.Polyhedron {
+ Point3d[] getVertices()
+ List<int[]> getLineLoops()
+ double getCirumscribedRadius()
+ int getViewCount()
+ String getViewName(int)
+ Matrix3d getViewMatrix(int)
}
class org.biojava.nbio.structure.align.ce.CeMain {
+ {static} String algorithmName
+ {static} String version
# CeParameters params
# CECalculator calculator
- Atom[] ca2clone
+ {static} void main(String[])
+ AFPChain align(Atom[],Atom[],Object)
+ AFPChain align(Atom[],Atom[])
+ String getAlgorithmName()
+ ConfigStrucAligParams getParameters()
+ void setParameters(ConfigStrucAligParams)
+ String getVersion()
+ CECalculator getCECalculator()
}
interface org.biojava.nbio.structure.align.multiple.MultipleAlignment {
+ MultipleAlignment clone()
+ MultipleAlignmentEnsemble getEnsemble()
+ void setEnsemble(MultipleAlignmentEnsemble)
+ List<BlockSet> getBlockSets()
+ BlockSet getBlockSet(int)
+ void setBlockSets(List<BlockSet>)
+ List<Block> getBlocks()
+ Block getBlock(int)
+ List<Atom[]> getAtomArrays()
+ StructureIdentifier getStructureIdentifier(int)
+ int size()
+ int length()
+ int getCoreLength()
+ List<Integer> getAlignResCounts()
+ List<Double> getCoverages()
+ void clear()
+ String toString()
}
class org.biojava.nbio.structure.align.multiple.BlockImpl {
- {static} long serialVersionUID
- BlockSet parent
- List<List<Integer>> alignRes
- int coreLength
- List<Integer> alignResCounts
+ Block clone()
+ void clear()
+ String toString()
+ void setBlockSet(BlockSet)
+ BlockSet getBlockSet()
+ List<List<Integer>> getAlignRes()
+ void setAlignRes(List<List<Integer>>)
+ int length()
+ int size()
+ int getCoreLength()
# void updateCoreLength()
+ int getStartIndex(int)
+ int getStartResidue(int)
+ int getFinalIndex(int)
+ int getFinalResidue(int)
+ List<Integer> getAlignResCounts()
}
class org.biojava.nbio.structure.align.ce.OptimalCECPParameters {
# Boolean tryAllCPs
# Integer cpPoint
+ String toString()
+ void reset()
+ List<String> getUserConfigHelp()
+ List<String> getUserConfigParameters()
+ List<String> getUserConfigParameterNames()
+ List<Class> getUserConfigTypes()
+ Boolean isTryAllCPs()
+ void setTryAllCPs(Boolean)
+ Integer getCPPoint()
+ void setCPPoint(Integer)
}
class org.biojava.nbio.structure.symmetry.core.SystematicSolver {
- QuatSymmetrySubunits subunits
- QuatSymmetryParameters parameters
- Point3d[] originalCoords
- Point3d[] transformedCoords
- RotationGroup rotations
- Vector3d centroid
- Matrix4d centroidInverse
- Set<List<Integer>> hashCodes
+ RotationGroup getSymmetryOperations()
- void solve()
- void combineWithTranslation(Matrix4d)
- Rotation createSymmetryOperation(List<Integer>,Matrix4d,AxisAngle4d,int,QuatSymmetryScores)
- void completeRotationGroup()
- boolean isValidPermutation(List<Integer>)
- boolean isAllowedPermuation(List<Integer>)
- boolean evaluatePermutation(List<Integer>)
- void initialize()
}
class org.biojava.nbio.structure.io.sifts.SiftsMappingProvider {
- {static} Logger logger
- {static} String EBI_SIFTS_FILE_LOCATION
- {static} String fileLoc
+ {static} void setFileLocation(String)
+ {static} List<SiftsEntity> getSiftsMapping(String)
}
class org.biojava.nbio.structure.AtomImpl {
- {static} long serialVersionUID
+ {static} int BONDS_INITIAL_CAPACITY
- String name
- Element element
- Point3d coords
- int pdbserial
- short charge
- float occupancy
- float tempfactor
- char altLoc
- Group parent
- List<Bond> bonds
+ void setName(String)
+ String getName()
+ void setPDBserial(int)
+ int getPDBserial()
+ void setCoords(double[])
+ double[] getCoords()
+ Point3d getCoordsAsPoint3d()
+ void setX(double)
+ void setY(double)
+ void setZ(double)
+ double getX()
+ double getY()
+ double getZ()
+ void setAltLoc(Character)
+ Character getAltLoc()
+ String toString()
+ void setOccupancy(float)
+ float getOccupancy()
+ void setTempFactor(float)
+ float getTempFactor()
+ Object clone()
+ void setGroup(Group)
+ Group getGroup()
+ Element getElement()
+ void setElement(Element)
+ String toPDB()
+ void toPDB(StringBuffer)
+ List<Bond> getBonds()
+ boolean hasBond(Atom)
+ void setBonds(List<Bond>)
+ void addBond(Bond)
+ short getCharge()
+ void setCharge(short)
}
class org.biojava.nbio.structure.symmetry.axis.HelixAxisAligner {
- {static} Logger logger
- {static} Vector3d Y_AXIS
- {static} Vector3d Z_AXIS
- QuatSymmetrySubunits subunits
- HelixLayers helixLayers
- Matrix4d transformationMatrix
- Matrix4d reverseTransformationMatrix
- Vector3d referenceVector
- Vector3d principalRotationVector
- Vector3d[] principalAxesOfInertia
- List<List<Integer>> alignedOrbits
- Vector3d minBoundary
- Vector3d maxBoundary
- double xzRadiusMax
~ boolean modified
+ String getSymmetry()
+ Matrix4d getTransformation()
+ Matrix3d getRotationMatrix()
+ Matrix4d getReverseTransformation()
+ Vector3d getPrincipalRotationAxis()
+ Vector3d getRotationReferenceAxis()
+ Vector3d[] getPrincipalAxesOfInertia()
+ Vector3d getDimension()
+ double getRadius()
+ Matrix4d getGeometicCenterTransformation()
+ Point3d getGeometricCenter()
+ Point3d getCentroid()
+ QuatSymmetrySubunits getSubunits()
+ HelixLayers getHelixLayers()
+ List<List<Integer>> getOrbits()
- void run()
+ Point3d calcCenterOfRotation()
- List<Integer> getLongestLayerLine()
- Point3d getMidPoint(Point3d,Point3d,Point3d)
- Matrix4d reorientHelix(int)
- void calcAlignedOrbits()
- void calcTransformation()
- void calcReverseTransformation()
- void calcTransformationBySymmetryAxes()
- Matrix4d alignAxes(Vector3d[],Vector3d[])
- void calcPrincipalAxes()
- void calcBoundaries()
- void calcZDirection()
- double[] getSubunitZDepth()
- List<List<Integer>> calcOrbits()
- void calcPrincipalRotationVector()
- void calcReferenceVector()
- Vector3d orthogonalize(Vector3d,Vector3d)
- Vector3d getReferenceAxisCylic()
- {static} Matrix4d flipX()
- {static} Matrix4d flipY()
- {static} Matrix4d flipZ()
}
class org.biojava.nbio.structure.symmetry.utils.PermutationGenerator {
- int[] a
- BigInteger numLeft
- BigInteger total
+ void reset()
+ BigInteger getNumLeft()
+ BigInteger getTotal()
+ boolean hasMore()
- {static} BigInteger getFactorial(int)
+ int[] getNext()
}
class org.biojava.nbio.structure.ecod.EcodDomain {
- {static} long serialVersionUID
- Long uid
- String domainId
- Boolean manual
- Integer xGroup
- Integer hGroup
- Integer tGroup
- Integer fGroup
- String pdbId
- String chainId
- String range
- String seqIdRange
- String architectureName
- String xGroupName
- String hGroupName
- String tGroupName
- String fGroupName
- Long assemblyId
- Set<String> ligands
# Object clone()
+ Long getUid()
+ void setUid(Long)
+ String getDomainId()
+ void setDomainId(String)
+ Boolean getManual()
+ void setManual(Boolean)
+ Integer getXGroup()
+ void setXGroup(Integer)
+ Integer getHGroup()
+ void setHGroup(Integer)
+ Integer getTGroup()
+ void setTGroup(Integer)
+ Integer getFGroup()
+ void setFGroup(Integer)
+ String getPdbId()
+ void setPdbId(String)
+ String getChainId()
+ void setChainId(String)
+ String getRange()
+ void setRange(String)
+ String getSeqIdRange()
+ void setSeqIdRange(String)
+ String getArchitectureName()
+ void setArchitectureName(String)
+ String getXGroupName()
+ void setXGroupName(String)
+ String getHGroupName()
+ void setHGroupName(String)
+ String getTGroupName()
+ void setGroupName(String)
+ String getFGroupName()
+ void setFGroupName(String)
+ Long getAssemblyId()
+ void setAssemblyId(Long)
+ Set<String> getLigands()
+ void setLigands(Set<String>)
+ String toString()
+ int hashCode()
+ boolean equals(Object)
+ String getIdentifier()
+ List<ResidueRange> getResidueRanges()
+ SubstructureIdentifier toCanonical()
+ Structure reduce(Structure)
+ Structure loadStructure(AtomCache)
}
class org.biojava.nbio.structure.contact.ResidueIdentifier {
- {static} long serialVersionUID
- {static} Logger logger
- int seqResIndex
+ int getSeqResIndex()
+ void setSeqResIndex(int)
+ int hashCode()
+ boolean equals(Object)
+ String toString()
}
class org.biojava.nbio.structure.Model {
- {static} long serialVersionUID
- {static} Logger logger
- List<Chain> polyChains
- List<Chain> nonPolyChains
- List<Chain> waterChains
+ List<Chain> getPolyChains()
+ List<Chain> getNonPolyChains()
+ List<Chain> getWaterChains()
+ List<Chain> getChains()
+ void setChains(List<Chain>)
+ void addChain(Chain)
+ int size()
+ String toString()
}
class org.biojava.nbio.structure.SubstructureIdentifier {
- {static} long serialVersionUID
- {static} Logger logger
- String pdbId
- List<ResidueRange> ranges
+ String toString()
+ String getIdentifier()
+ String getPdbId()
+ List<ResidueRange> getResidueRanges()
+ SubstructureIdentifier toCanonical()
+ Structure reduce(Structure)
+ Structure loadStructure(AtomCache)
# {static} void copyLigandsByProximity(Structure,Structure)
# {static} void copyLigandsByProximity(Structure,Structure,double,int,int)
}
class org.biojava.nbio.structure.align.util.AlignmentTools {
- {static} Logger logger
+ {static} boolean debug
+ {static} boolean isSequentialAlignment(AFPChain,boolean)
+ {static} Map<Integer,Integer> alignmentAsMap(AFPChain)
+ {static} Map<T,T> applyAlignment(Map<T,T>,int)
+ {static} Map<S,T> applyAlignment(Map<S,T>,Map<T,S>,int)
+ {static} int getSymmetryOrder(Map<Integer,Integer>,int,float)
+ {static} int getSymmetryOrder(Map<Integer,Integer>,Map<Integer,Integer>,int,float)
+ {static} int getSymmetryOrder(AFPChain,int,float)
+ {static} Map<Integer,Integer> guessSequentialAlignment(Map<Integer,Integer>,boolean)
+ {static} List<List<List<Integer>>> getOptAlnAsList(AFPChain)
+ {static} AFPChain createAFPChain(Atom[],Atom[],ResidueNumber[],ResidueNumber[])
+ {static} AFPChain splitBlocksByTopology(AFPChain,Atom[],Atom[])
+ {static} AFPChain replaceOptAln(int[][][],AFPChain,Atom[],Atom[])
+ {static} AFPChain replaceOptAln(AFPChain,Atom[],Atom[],Map<Integer,Integer>)
+ {static} AFPChain replaceOptAln(AFPChain,Atom[],Atom[],int,int[],int[][][])
+ {static} void updateSuperposition(AFPChain,Atom[],Atom[])
+ {static} Object resizeArray(Object,int)
+ {static} String toConciseAlignmentString(Map<S,T>,Map<T,S>)
+ {static} String toConciseAlignmentString(Map<T,T>)
+ {static} Map<Integer,Integer> fromConciseAlignmentString(String)
+ {static} int[] calculateBlockGap(int[][][])
+ {static} void alignmentToSIF(Writer,AFPChain,Atom[],Atom[],String,String)
+ {static} List<Chain> getAlignedModel(Atom[])
+ {static} Structure getAlignedStructure(Atom[],Atom[])
+ {static} Group[] prepareGroupsForDisplay(AFPChain,Atom[],Atom[])
+ {static} void shiftCA2(AFPChain,Atom[],Matrix,Atom,Group[])
+ {static} void fillAlignedAtomArrays(AFPChain,Atom[],Atom[],Atom[],Atom[])
+ {static} AFPChain deleteHighestDistanceColumn(AFPChain,Atom[],Atom[])
+ {static} AFPChain deleteColumn(AFPChain,Atom[],Atom[],int,int)
}
class org.biojava.nbio.structure.align.util.AlignmentTools.IdentityMap {
+ K get(Object)
+ Set<java.util.Map.Entry<K,K>> entrySet()
+ boolean containsKey(Object)
}
class org.biojava.nbio.structure.io.sifts.SiftsChainEntry {
- String chainId
- String pdbEnd
- String pdbId
- String pdbStart
- String seqresEnd
- String seqresStart
- String uniprotEnd
- String uniProtId
- String uniprotStart
+ boolean equals(Object)
+ String getChainId()
+ String getPdbEnd()
+ String getPdbId()
+ String getPdbStart()
+ String getSeqresEnd()
+ String getSeqresStart()
+ String getUniprotEnd()
+ String getUniProtId()
+ String getUniprotStart()
+ int hashCode()
+ String toString()
}
interface org.biojava.nbio.structure.geometry.SuperPosition {
+ Matrix4d superpose(Point3d[],Point3d[])
+ Matrix4d superposeAndTransform(Point3d[],Point3d[])
+ double getRmsd(Point3d[],Point3d[])
}
class org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssembly {
- {static} long serialVersionUID
~ String id
~ String details
~ String method_details
~ String oligomeric_details
~ String oligomeric_count
+ String getId()
+ void setId(String)
+ String getDetails()
+ void setDetails(String)
+ String getMethod_details()
+ void setMethod_details(String)
+ String getOligomeric_details()
+ void setOligomeric_details(String)
+ String getOligomeric_count()
+ void setOligomeric_count(String)
+ String toString()
}
class org.biojava.nbio.structure.io.mmcif.model.StructRefSeqDif {
~ String align_id
~ String pdbx_pdb_id_code
~ String mon_id
~ String pdbx_pdb_strand_id
~ Integer seq_num
~ String pdbx_pdb_ins_code
~ String pdbx_seq_db_name
~ String pdbx_seq_db_accession_code
~ String db_mon_id
~ String pdbx_seq_db_seq_num
~ String details
~ String pdbx_auth_seq_num
~ Integer pdbx_ordinal
+ String getAlign_id()
+ void setAlign_id(String)
+ String getPdbx_pdb_id_code()
+ void setPdbx_pdb_id_code(String)
+ String getMon_id()
+ void setMon_id(String)
+ String getPdbx_pdb_strand_id()
+ void setPdbx_pdb_strand_id(String)
+ Integer getSeq_num()
+ void setSeq_num(Integer)
+ String getPdbx_pdb_ins_code()
+ void setPdbx_pdb_ins_code(String)
+ String getPdbx_seq_db_name()
+ void setPdbx_seq_db_name(String)
+ String getPdbx_seq_db_accession_code()
+ void setPdbx_seq_db_accession_code(String)
+ String getDb_mon_id()
+ void setDb_mon_id(String)
+ String getPdbx_seq_db_seq_num()
+ void setPdbx_seq_db_seq_num(String)
+ String getDetails()
+ void setDetails(String)
+ String getPdbx_auth_seq_num()
+ void setPdbx_auth_seq_num(String)
+ Integer getPdbx_ordinal()
+ void setPdbx_ordinal(Integer)
}
class org.biojava.nbio.structure.domain.SerializableCache {
- {static} Logger logger
# String cacheFileName
# Map<K,V> serializedCache
+ boolean isCacheEnabled()
+ void cache(K,V)
+ V get(K)
+ void disableCache()
+ void enableCache()
+ Map<K,V> reloadFromFile()
- File getCacheFile()
+ void flushCache()
}
class org.biojava.nbio.structure.domain.pdp.Domain {
- {static} long serialVersionUID
~ String id
~ int size
~ int nseg
~ double score
~ List<Segment> segments
+ String getId()
+ void setId(String)
+ String toString()
+ List<Segment> getSegments()
+ Segment getSegmentAtPos(int)
+ int compareTo(Domain)
+ int getSize()
+ void setSize(int)
+ int getNseg()
+ void setNseg(int)
+ double getScore()
+ void setScore(double)
+ void setSegments(List<Segment>)
}
class org.biojava.nbio.structure.io.mmcif.MetalBondConsumer {
~ Map<String,List<MetalBondDistance>> definitions
+ void documentStart()
+ void documentEnd()
+ void newAtomSite(AtomSite)
+ void newEntity(Entity)
+ void newEntityPoly(EntityPoly)
+ void newEntityPolySeq(EntityPolySeq)
+ void newStructAsym(StructAsym)
+ void setStruct(Struct)
+ void newDatabasePDBrev(DatabasePDBrev)
+ void newDatabasePDBrevRecord(DatabasePdbrevRecord)
+ void newDatabasePDBremark(DatabasePDBremark)
+ void newExptl(Exptl)
+ void newCell(Cell)
+ void newSymmetry(Symmetry)
+ void newStructNcsOper(StructNcsOper)
+ void newAtomSites(AtomSites)
+ void newStructRef(StructRef)
+ void newStructRefSeq(StructRefSeq)
+ void newStructRefSeqDif(StructRefSeqDif)
+ void newStructSite(StructSite)
+ void newStructSiteGen(StructSiteGen)
+ void newPdbxPolySeqScheme(PdbxPolySeqScheme)
+ void newPdbxNonPolyScheme(PdbxNonPolyScheme)
+ void newPdbxEntityNonPoly(PdbxEntityNonPoly)
+ void newStructKeywords(StructKeywords)
+ void newRefine(Refine)
+ void newChemComp(ChemComp)
+ void newChemCompDescriptor(ChemCompDescriptor)
+ void newPdbxStructOperList(PdbxStructOperList)
+ void newPdbxStrucAssembly(PdbxStructAssembly)
+ void newPdbxStrucAssemblyGen(PdbxStructAssemblyGen)
+ void newChemCompAtom(ChemCompAtom)
+ void newPdbxChemCompIndentifier(PdbxChemCompIdentifier)
+ void newChemCompBond(ChemCompBond)
+ void newPdbxChemCompDescriptor(PdbxChemCompDescriptor)
+ void newEntitySrcGen(EntitySrcGen)
+ void newEntitySrcNat(EntitySrcNat)
+ void newEntitySrcSyn(EntitySrcSyn)
+ void newStructConn(StructConn)
+ void newAuditAuthor(AuditAuthor)
+ void newGenericData(String,List<String>,List<String>)
+ void setFileParsingParameters(FileParsingParameters)
+ FileParsingParameters getFileParsingParameters()
+ Map<String,List<MetalBondDistance>> getDefinitions()
+ void newPdbxAuditRevisionHistory(PdbxAuditRevisionHistory)
+ void newPdbxDatabaseStatus(PdbxDatabaseStatus)
}
class org.biojava.nbio.structure.io.MMTFFileReader {
+ {static} String[] MMTF_SPLIT_DIR
+ {static} String[] MMTF_OBSOLETE_DIR
+ {static} void main(String[])
+ Structure getStructure(InputStream)
# String getFilename(String)
# String[] getSplitDirPath()
# String[] getObsoleteDirPath()
}
class org.biojava.nbio.structure.symmetry.core.QuatSymmetryParameters {
- {static} long serialVersionUID
- double rmsdThreshold
- double angleThreshold
- double helixRmsdThreshold
- double helixRmsdToRiseRatio
- double minimumHelixRise
- double minimumHelixAngle
- int maximumLocalCombinations
- double localTimeLimit
- double localTimeStart
- boolean onTheFly
+ double getRmsdThreshold()
+ void setRmsdThreshold(double)
+ double getAngleThreshold()
+ void setAngleThreshold(double)
+ double getHelixRmsdThreshold()
+ void setHelixRmsdThreshold(double)
+ double getHelixRmsdToRiseRatio()
+ void setHelixRmsdToRiseRatio(double)
+ double getMinimumHelixRise()
+ void setMinimumHelixRise(double)
+ double getMinimumHelixAngle()
+ void setMinimumHelixAngle(double)
+ int getMaximumLocalCombinations()
+ void setMaximumLocalCombinations(int)
+ double getLocalTimeLimit()
+ void setLocalTimeLimit(double)
+ double getLocalTimeStart()
+ void useLocalTimeLimit(double)
+ boolean isLocalLimitsExceeded(Set<?>)
+ boolean isLocalLimitsExceeded()
+ boolean isOnTheFly()
+ void setOnTheFly(boolean)
+ String toString()
}
class org.biojava.nbio.structure.io.mmcif.model.StructNcsOper {
- String id
- String code
- String details
- String matrix11
- String matrix12
- String matrix13
- String matrix21
- String matrix22
- String matrix23
- String matrix31
- String matrix32
- String matrix33
- String vector1
- String vector2
- String vector3
+ String getId()
+ void setId(String)
+ String getCode()
+ void setCode(String)
+ String getDetails()
+ void setDetails(String)
+ String getMatrix11()
+ void setMatrix11(String)
+ String getMatrix12()
+ void setMatrix12(String)
+ String getMatrix13()
+ void setMatrix13(String)
+ String getMatrix21()
+ void setMatrix21(String)
+ String getMatrix22()
+ void setMatrix22(String)
+ String getMatrix23()
+ void setMatrix23(String)
+ String getMatrix31()
+ void setMatrix31(String)
+ String getMatrix32()
+ void setMatrix32(String)
+ String getMatrix33()
+ void setMatrix33(String)
+ String getVector1()
+ void setVector1(String)
+ String getVector2()
+ void setVector2(String)
+ String getVector3()
+ void setVector3(String)
}
class org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder {
- {static} Logger logger
+ {static} String SYM_CHAIN_ID_SEPARATOR
+ {static} String COMPOSED_OPERATOR_SEPARATOR
- OperatorResolver operatorResolver
- Map<String,Matrix4d> allTransformations
- List<String> modelIndex
+ Structure rebuildQuaternaryStructure(Structure,List<BiologicalAssemblyTransformation>,boolean,boolean)
- void orderTransformationsByChainId(Structure,List<BiologicalAssemblyTransformation>)
- List<String> getChainIds(Structure)
- void addChainMultiModel(Structure,Chain,String)
- void addChainFlattened(Structure,Chain,String)
+ ArrayList<BiologicalAssemblyTransformation> getBioUnitTransformationList(PdbxStructAssembly,List<PdbxStructAssemblyGen>,List<PdbxStructOperList>)
- ArrayList<BiologicalAssemblyTransformation> getBioUnitTransformationsListBinaryOperators(String,List<PdbxStructAssemblyGen>)
- ArrayList<BiologicalAssemblyTransformation> getBioUnitTransformationsListUnaryOperators(String,List<PdbxStructAssemblyGen>)
- void init()
}
class org.biojava.nbio.structure.contact.AtomContact {
- {static} long serialVersionUID
- Pair<Atom> pair
- double distance
+ Pair<Atom> getPair()
+ void setPair(Pair<Atom>)
+ double getDistance()
+ void setDistance(double)
}
class org.biojava.nbio.structure.align.pairwise.AligNPE {
+ {static} Alignable align_NPE(Matrix,StrucAligParameters)
}
class org.biojava.nbio.structure.geometry.SuperPositions {
- {static} SuperPositionAbstract superposer
+ {static} Matrix4d superpose(Point3d[],Point3d[])
+ {static} Matrix4d superposeAtOrigin(Point3d[],Point3d[])
+ {static} Matrix4d superposeAndTransform(Point3d[],Point3d[])
+ {static} Matrix4d superposeAndTransformAtOrigin(Point3d[],Point3d[])
+ {static} double getRmsd(Point3d[],Point3d[])
+ {static} double getRmsdAtOrigin(Point3d[],Point3d[])
+ {static} void setDefaultSuperPosition(SuperPositionAbstract)
}
class org.biojava.nbio.structure.basepairs.MismatchedBasePairParameters {
- {static} long serialVersionUID
+ {static} double DEFAULT_MAX_STAGGER
+ {static} double DEFAULT_MAX_PROPELLER
+ {static} double DEFAULT_MAX_SHEAR
+ {static} double DEFAULT_MAX_STRETCH
- double maxStagger
+ List<Pair<Group>> findPairs(List<Chain>)
+ double getMaxStagger()
+ void setMaxStagger(double)
+ double getMaxShear()
+ void setMaxShear(double)
+ double getMaxStretch()
+ void setMaxStretch(double)
+ double getMaxPropeller()
+ void setMaxPropeller(double)
}
class org.biojava.nbio.structure.align.AFPTwister {
- {static} Logger logger
+ {static} Group[] twistPDB(AFPChain,Atom[],Atom[])
+ {static} Group[] twistOptimized(AFPChain,Atom[],Atom[])
- {static} void transformOrigPDB(int,int[],int[],Atom[],Atom[],AFPChain,int)
- {static} Atom[] getAtoms(Atom[],int[],int,boolean)
- {static} void cloneAtomRange(Atom[],Atom[],int,int)
- {static} double calCaRmsd(Atom[],Atom[],int,int[],int[])
+ {static} int afp2Res(AFPChain,int,int[],int)
}
class org.biojava.nbio.structure.io.mmcif.model.DatabasePdbrevRecord {
- {static} long serialVersionUID
~ String rev_num
~ String type
~ String details
+ String getRev_num()
+ void setRev_num(String)
+ String getType()
+ void setType(String)
+ String getDetails()
+ void setDetails(String)
+ String toString()
}
class org.biojava.nbio.structure.symmetry.core.QuatSuperpositionScorer {
+ {static} QuatSymmetryScores calcScores(QuatSymmetrySubunits,Matrix4d,List<Integer>)
- {static} void calcIntrasubunitScores(QuatSymmetrySubunits,Matrix4d,List<Integer>,QuatSymmetryScores)
}
class org.biojava.nbio.structure.io.SSBondImpl {
- {static} long serialVersionUID
- int serNum
- String chainID1
- String chainID2
- String resnum1
- String resnum2
- String insCode1
- String insCode2
+ String toPDB()
+ void toPDB(StringBuffer)
+ String getInsCode1()
+ void setInsCode1(String)
+ String getInsCode2()
+ void setInsCode2(String)
+ int getSerNum()
+ void setSerNum(int)
+ SSBondImpl clone()
+ String getChainID1()
+ void setChainID1(String)
+ String getChainID2()
+ void setChainID2(String)
+ String getResnum1()
+ void setResnum1(String)
+ String getResnum2()
+ void setResnum2(String)
+ String toString()
+ int hashCode()
+ boolean equals(Object)
+ {static} List<SSBondImpl> getSsBondListFromBondList(List<Bond>)
+ {static} SSBondImpl toSsBond(Bond)
}
class org.biojava.nbio.structure.symmetry.internal.GraphComponentRefiner {
+ MultipleAlignment refine(AFPChain,Atom[],int)
}
class org.biojava.nbio.structure.align.multiple.mc.MultipleMcMain {
- {static} Logger logger
+ {static} String version
+ {static} String algorithmName
- MultipleMcParameters params
- MultipleAlignmentEnsemble ensemble
- StructureAlignment pairwise
- int reference
- MultipleAlignment generateSeed(List<Atom[]>)
- {static} int chooseReferenceRMSD(List<List<AFPChain>>)
- {static} MultipleAlignment combineReferenceAlignments(List<AFPChain>,List<Atom[]>,int,boolean)
+ MultipleAlignment align(List<Atom[]>,Object)
+ MultipleAlignment align(List<Atom[]>)
+ ConfigStrucAligParams getParameters()
+ void setParameters(ConfigStrucAligParams)
+ String getAlgorithmName()
+ String getVersion()
}
class org.biojava.nbio.structure.geometry.MomentsOfInertia {
- List<Point3d> points
- List<Double> masses
- boolean modified
- double[] principalMomentsOfInertia
- Vector3d[] principalAxes
- Matrix3d orientation
+ void addPoint(Point3d,double)
+ Point3d getCenterOfMass()
+ double[] getPrincipalMomentsOfInertia()
+ Vector3d[] getPrincipalAxes()
+ Matrix3d getOrientationMatrix()
+ double[] getElipsisRadii()
+ double getRadiusOfGyration()
+ SymmetryClass getSymmetryClass(double)
+ double symmetryCoefficient()
+ double getAsymmetryParameter(double)
+ double[][] getInertiaTensor()
- void diagonalizeTensor()
}
abstract class org.biojava.nbio.structure.symmetry.axis.AxisAligner {
+ {static} AxisAligner getInstance(QuatSymmetryResults)
+ {abstract}String getSymmetry()
+ {abstract}Matrix4d getTransformation()
+ {abstract}Matrix3d getRotationMatrix()
+ {abstract}Matrix4d getReverseTransformation()
+ {abstract}Vector3d getPrincipalRotationAxis()
+ {abstract}Vector3d getRotationReferenceAxis()
+ {abstract}Vector3d[] getPrincipalAxesOfInertia()
+ {abstract}Vector3d getDimension()
+ {abstract}double getRadius()
+ {abstract}Matrix4d getGeometicCenterTransformation()
+ {abstract}Point3d getGeometricCenter()
+ {abstract}Point3d getCentroid()
+ {abstract}QuatSymmetrySubunits getSubunits()
+ {abstract}List<List<Integer>> getOrbits()
}
class org.biojava.nbio.structure.io.mmcif.model.StructSiteGen {
~ String id
~ String site_id
~ String auth_asym_id
~ String auth_atom_id
~ String auth_comp_id
~ String auth_seq_id
~ String label_alt_id
~ String label_asym_id
~ String label_atom_id
~ String label_comp_id
~ String label_seq_id
~ String details
~ String pdbx_auth_ins_code
~ String pdbx_num_res
~ String symmetry
+ String getId()
+ void setId(String)
+ String getSite_id()
+ void setSite_id(String)
+ String getAuth_asym_id()
+ void setAuth_asym_id(String)
+ String getAuth_atom_id()
+ void setAuth_atom_id(String)
+ String getAuth_comp_id()
+ void setAuth_comp_id(String)
+ String getAuth_seq_id()
+ void setAuth_seq_id(String)
+ String getLabel_alt_id()
+ void setLabel_alt_id(String)
+ String getLabel_asym_id()
+ void setLabel_asym_id(String)
+ String getLabel_atom_id()
+ void setLabel_atom_id(String)
+ String getLabel_comp_id()
+ void setLabel_comp_id(String)
+ String getLabel_seq_id()
+ void setLabel_seq_id(String)
+ String getDetails()
+ void setDetails(String)
+ String getPdbx_auth_ins_code()
+ void setPdbx_auth_ins_code(String)
+ String getPdbx_num_res()
+ void setPdbx_num_res(String)
+ String getSymmetry()
+ void setSymmetry(String)
}
class org.biojava.nbio.structure.secstruc.Ladder {
- {static} long serialVersionUID
~ int from
~ int to
~ int lfrom
~ int lto
~ BridgeType btype
~ int connectedTo
~ int connectedFrom
+ int getFrom()
+ int getTo()
+ int getLfrom()
+ int getLto()
+ BridgeType getBtype()
+ int getConnectedTo()
+ int getConnectedFrom()
}
class org.biojava.nbio.structure.io.mmcif.model.ChemCompDescriptor {
- {static} long serialVersionUID
~ String comp_id
~ String type
~ String program
~ String program_version
~ String descriptor
+ String getComp_id()
+ void setComp_id(String)
+ String getType()
+ void setType(String)
+ String getProgram()
+ void setProgram(String)
+ String getProgram_version()
+ void setProgram_version(String)
+ String getDescriptor()
+ void setDescriptor(String)
+ int hashCode()
+ boolean equals(Object)
+ String toString()
}
class org.biojava.nbio.structure.PDBHeader {
- {static} long serialVersionUID
- {static} Logger logger
- String title
- String description
- String idCode
- String classification
- Date depDate
- Date relDate
- Date modDate
- Set<ExperimentalTechnique> techniques
- PDBCrystallographicInfo crystallographicInfo
- float resolution
- float rFree
- float rWork
- JournalArticle journalArticle
- String authors
+ {static} float DEFAULT_RESOLUTION
+ {static} float DEFAULT_RFREE
- Long id
+ {static} String newline
- DateFormat dateFormat
- Map<Integer,BioAssemblyInfo> bioAssemblies
~ List<DatabasePdbrevRecord> revisionRecords
+ String toString()
+ String toPDB()
+ void toPDB(StringBuffer)
- void printResolution(StringBuffer)
- void printExpdata(StringBuffer)
- void printAuthors(StringBuffer)
- void printMultiLine(StringBuffer,String,String,char)
- void fillLine(StringBuffer,int)
- void printHeader(StringBuffer)
- void printTitle(StringBuffer)
+ Long getId()
- void setId(Long)
+ boolean equals(PDBHeader)
+ String getIdCode()
+ void setIdCode(String)
+ String getClassification()
+ void setClassification(String)
+ Date getDepDate()
+ void setDepDate(Date)
+ Set<ExperimentalTechnique> getExperimentalTechniques()
+ boolean setExperimentalTechnique(String)
+ PDBCrystallographicInfo getCrystallographicInfo()
+ void setCrystallographicInfo(PDBCrystallographicInfo)
+ float getResolution()
+ void setResolution(float)
+ float getRfree()
+ void setRfree(float)
+ Date getModDate()
+ void setModDate(Date)
+ Date getRelDate()
+ void setRelDate(Date)
+ String getTitle()
+ void setTitle(String)
+ String getDescription()
+ void setDescription(String)
+ String getAuthors()
+ void setAuthors(String)
+ boolean hasJournalArticle()
+ JournalArticle getJournalArticle()
+ void setJournalArticle(JournalArticle)
+ Map<Integer,BioAssemblyInfo> getBioAssemblies()
+ void setBioAssemblies(Map<Integer,BioAssemblyInfo>)
+ int getNrBioAssemblies()
+ List<DatabasePdbrevRecord> getRevisionRecords()
+ void setRevisionRecords(List<DatabasePdbrevRecord>)
+ float getRwork()
+ void setRwork(float)
}
class org.biojava.nbio.structure.ResidueRangeAndLength {
- {static} Logger logger
- int length
+ Iterator<ResidueNumber> iterator(AtomPositionMap)
+ {static} int calcLength(List<ResidueRangeAndLength>)
+ {static} ResidueRangeAndLength parse(String,AtomPositionMap)
+ {static} List<ResidueRangeAndLength> parseMultiple(List<String>,AtomPositionMap)
+ {static} List<ResidueRangeAndLength> parseMultiple(String,AtomPositionMap)
+ int getLength()
+ boolean equals(Object)
+ int hashCode()
}
class org.biojava.nbio.structure.io.mmcif.model.PdbxChemCompIdentifier {
~ String comp_id
~ String type
~ String program
~ String program_version
~ String identifier
+ String getComp_id()
+ void setComp_id(String)
+ String getType()
+ void setType(String)
+ String getProgram()
+ void setProgram(String)
+ String getProgram_version()
+ void setProgram_version(String)
+ String getIdentifier()
+ void setIdentifier(String)
}
class org.biojava.nbio.structure.Calc {
- {static} Logger logger
+ {static} double getDistance(Atom,Atom)
+ {static} double getDistanceFast(Atom,Atom)
+ {static} Atom invert(Atom)
+ {static} Atom add(Atom,Atom)
+ {static} Atom subtract(Atom,Atom)
+ {static} Atom vectorProduct(Atom,Atom)
+ {static} double scalarProduct(Atom,Atom)
+ {static} double amount(Atom)
+ {static} double angle(Atom,Atom)
+ {static} Atom unitVector(Atom)
+ {static} double torsionAngle(Atom,Atom,Atom,Atom)
+ {static} double getPhi(AminoAcid,AminoAcid)
+ {static} double getPsi(AminoAcid,AminoAcid)
+ {static} boolean isConnected(AminoAcid,AminoAcid)
+ {static} void rotate(Atom,double[][])
+ {static} void rotate(Structure,double[][])
+ {static} void rotate(Group,double[][])
+ {static} void rotate(Atom,Matrix)
+ {static} void rotate(Group,Matrix)
+ {static} void rotate(Structure,Matrix)
+ {static} void transform(Atom[],Matrix4d)
+ {static} void transform(Atom,Matrix4d)
+ {static} void transform(Group,Matrix4d)
+ {static} void transform(Structure,Matrix4d)
+ {static} void transform(Chain,Matrix4d)
+ {static} void translate(Atom,Vector3d)
+ {static} void translate(Group,Vector3d)
+ {static} void translate(Chain,Vector3d)
+ {static} void translate(Structure,Vector3d)
+ {static} void plus(Structure,Matrix)
+ {static} void shift(Structure,Atom)
+ {static} void shift(Atom,Atom)
+ {static} void shift(Group,Atom)
+ {static} Atom getCentroid(Atom[])
+ {static} Atom centerOfMass(Atom[])
+ {static} Atom scaleEquals(Atom,double)
+ {static} Atom scale(Atom,double)
+ {static} Atom scaleAdd(double,Atom,Atom)
+ {static} Atom getCenterVector(Atom[])
+ {static} Atom getCenterVector(Atom[],Atom)
+ {static} Atom[] centerAtoms(Atom[])
+ {static} Atom[] centerAtoms(Atom[],Atom)
+ {static} Atom createVirtualCBAtom(AminoAcid)
+ {static} double[] getZYZEuler(Matrix)
+ {static} double[] getXYZEuler(Matrix)
+ {static} Matrix matrixFromEuler(double,double,double)
+ {static} double calcRotationAngleInDegrees(Atom,Atom)
+ {static} void main(String[])
+ {static} void rotate(Atom[],Matrix)
+ {static} void shift(Atom[],Atom)
+ {static} Matrix4d getTransformation(Matrix,Atom)
+ {static} Atom getTranslationVector(Matrix4d)
+ {static} Point3d[] atomsToPoints(Atom[])
+ {static} List<Point3d> atomsToPoints(Collection<Atom>)
+ {static} double rmsd(Atom[],Atom[])
+ {static} double getTMScore(Atom[],Atom[],int,int)
+ {static} double getTMScore(Atom[],Atom[],int,int,boolean)
}
class org.biojava.nbio.structure.domain.LocalProteinDomainParser {
+ {static} List<Domain> suggestDomains(Structure)
+ {static} List<Domain> suggestDomains(Atom[])
}
class org.biojava.nbio.structure.align.xml.MultipleAlignmentXMLParser {
+ {static} List<MultipleAlignmentEnsemble> parseXMLfile(String)
+ {static} MultipleAlignmentEnsemble parseEnsemble(Node)
+ {static} MultipleAlignment parseMultipleAlignment(Node,MultipleAlignmentEnsemble)
+ {static} BlockSet parseBlockSet(Node,MultipleAlignment)
+ {static} Block parseBlock(Node,BlockSet)
+ {static} Matrix4d parseMatrix4d(Node)
+ {static} void parseScoresCache(Node,ScoresCache)
+ {static} void parseHeader(Node,MultipleAlignmentEnsemble)
+ {static} void parseStructures(Node,MultipleAlignmentEnsemble)
}
class org.biojava.nbio.structure.PDBCrystallographicInfo {
- {static} long serialVersionUID
- CrystalCell cell
- SpaceGroup sg
- Matrix4d[] ncsOperators
- boolean nonStandardSg
- boolean nonStandardCoordFrameConvention
+ float getA()
+ float getB()
+ float getC()
+ float getAlpha()
+ float getBeta()
+ float getGamma()
+ CrystalCell getCrystalCell()
+ void setCrystalCell(CrystalCell)
+ SpaceGroup getSpaceGroup()
+ void setSpaceGroup(SpaceGroup)
+ Matrix4d[] getTransformationsOrthonormal()
+ Matrix4d[] getNcsOperators()
+ void setNcsOperators(Matrix4d[])
+ boolean isNonStandardSg()
+ void setNonStandardSg(boolean)
+ boolean isNonStandardCoordFrameConvention()
+ void setNonStandardCoordFrameConvention(boolean)
+ String toString()
}
class org.biojava.nbio.structure.io.CifFileReader {
+ {static} String[] CIF_SPLIT_DIR
+ {static} String[] CIF_OBSOLETE_DIR
+ Structure getStructure(InputStream)
# String getFilename(String)
# String[] getSplitDirPath()
# String[] getObsoleteDirPath()
}
class org.biojava.nbio.structure.align.ce.CECPParameters {
+ {static} int DEFAULT_MIN_CP_LENGTH
# DuplicationHint duplicationHint
# Integer minCPLength
+ String toString()
+ void reset()
+ List<String> getUserConfigHelp()
+ List<String> getUserConfigParameters()
+ List<String> getUserConfigParameterNames()
+ List<Class> getUserConfigTypes()
+ DuplicationHint getDuplicationHint()
+ void setDuplicationHint(DuplicationHint)
+ Integer getMinCPLength()
+ void setMinCPLength(Integer)
}
interface org.biojava.nbio.structure.scop.ScopDatabase {
+ {abstract}List<ScopDescription> getByCategory(ScopCategory)
+ {abstract}List<ScopDescription> filterByClassificationId(String)
+ {abstract}List<ScopNode> getTree(ScopDomain)
+ {abstract}List<ScopDomain> filterByDomainName(String)
+ {abstract}List<ScopDescription> filterByDescription(String)
+ {abstract}ScopDescription getScopDescriptionBySunid(int)
+ {abstract}List<ScopDomain> getDomainsForPDB(String)
+ {abstract}ScopDomain getDomainByScopID(String)
+ {abstract}ScopNode getScopNode(int)
+ {abstract}String getScopVersion()
+ {abstract}void setScopVersion(String)
+ {abstract}List<ScopDomain> getScopDomainsBySunid(Integer)
+ {abstract}List<String> getComments(int)
}
class org.biojava.nbio.structure.io.FastaStructureParser {
- FastaReader<ProteinSequence,AminoAcidCompound> reader
- AtomCache cache
- String[] accessions
- ProteinSequence[] sequences
- Structure[] structures
- ResidueNumber[][] residues
+ void process()
+ ProteinSequence[] getSequences()
+ Structure[] getStructures()
+ ResidueNumber[][] getResidues()
+ String[] getAccessions()
}
class org.biojava.nbio.structure.scop.Astral {
- {static} Map<String,SoftReference<Astral>> instances
- {static} Logger logger
- Set<String> names
- LinkedHashMap<Integer,String> failedLines
+ {static} Set<String> getRepresentatives(AstralSet)
+ {static} Set<String> getRepresentatives(String)
+ Set<String> getNames()
+ LinkedHashMap<Integer,String> getFailedLines()
- void init(Reader)
}
class org.biojava.nbio.structure.basepairs.TertiaryBasePairParameters {
- {static} long serialVersionUID
+ {static} double DEFAULT_MAX_STAGGER
+ {static} double DEFAULT_MAX_PROPELLER
- double maxStagger
+ List<Pair<Group>> findPairs(List<Chain>)
+ double getMaxStagger()
+ void setMaxStagger(double)
+ double getMaxPropeller()
+ void setMaxPropeller(double)
}
class org.biojava.nbio.structure.StructureIO {
- {static} AtomCache cache
- {static} String FILE_SEPARATOR
+ {static} Structure getStructure(String)
- {static} void checkInitAtomCache()
+ {static} void setAtomCache(AtomCache)
+ {static} AtomCache getAtomCache()
+ {static} Structure getBiologicalAssembly(String,boolean)
+ {static} Structure getBiologicalAssembly(String)
+ {static} Structure getBiologicalAssembly(String,int,boolean)
+ {static} Structure getBiologicalAssembly(String,int)
+ {static} List<Structure> getBiologicalAssemblies(String,boolean)
+ {static} List<Structure> getBiologicalAssemblies(String)
+ {static} void setPdbPath(String)
+ {static} StructureFiletype guessFiletype(String)
}
class org.biojava.nbio.structure.align.helper.AlignUtils {
- {static} Logger logger
+ {static} Atom[] getFragmentFromIdxList(Atom[],int[])
+ {static} Atom[] getFragment(Atom[],int,int)
+ {static} Atom[] getFragmentNoClone(Atom[],int,int)
+ {static} Atom getCenter(Atom[],int,int)
+ {static} double[] getDiagonalAtK(Atom[],int)
+ {static} double rms_dk_diag(double[],double[],int,int,int,int)
+ {static} Matrix getDistanceMatrix(Atom[],Atom[])
}
class org.biojava.nbio.structure.io.mmcif.model.PdbxEntityNonPoly {
~ String entity_id
~ String name
~ String comp_id
+ String getEntity_id()
+ void setEntity_id(String)
+ String getName()
+ void setName(String)
+ String getComp_id()
+ void setComp_id(String)
}
class org.biojava.nbio.structure.align.ce.CeSideChainUserArgumentProcessor {
+ StructureAlignment getAlgorithm()
+ Object getParameters()
+ String getDbSearchLegend()
}
class org.biojava.nbio.structure.quaternary.BioAssemblyTools {
+ {static} boolean isUnaryExpression(String)
+ {static} List<String> parseUnaryOperatorExpression(String)
- {static} List<String> parseSubExpression(String)
- {static} List<String> expandRange(String)
+ {static} List<OrderedPair<String>> parseBinaryOperatorExpression(String)
+ {static} double[][] getBiologicalMoleculeBounds(Structure,List<BiologicalAssemblyTransformation>)
+ {static} double[][] getAtomCoordinateBounds(Structure)
+ {static} double getMaximumExtend(Structure)
+ {static} double getBiologicalMoleculeMaximumExtend(Structure,List<BiologicalAssemblyTransformation>)
+ {static} double[] getBiologicalMoleculeCentroid(Structure,List<BiologicalAssemblyTransformation>)
+ {static} Structure getReducedStructure(Structure)
}
interface org.biojava.nbio.structure.io.mmcif.MMcifParser {
+ void addMMcifConsumer(MMcifConsumer)
+ void clearConsumers()
+ void removeMMcifConsumer(MMcifConsumer)
+ void parse(BufferedReader)
+ void parse(InputStream)
}
interface org.biojava.nbio.structure.io.cif.CifFileConsumer {
~ void prepare()
~ void consumeAtomSite(AtomSite)
~ void consumeAtomSites(AtomSites)
~ void consumeAuditAuthor(AuditAuthor)
~ void consumeCell(Cell)
~ void consumeChemComp(ChemComp)
~ void consumeChemCompBond(ChemCompBond)
~ void consumeDatabasePDBremark(DatabasePDBRemark)
~ void consumeDatabasePDBrev(DatabasePDBRev)
~ void consumeDatabasePDBrevRecord(DatabasePDBRevRecord)
~ void consumeEntity(Entity)
~ void consumeEntityPoly(EntityPoly)
~ void consumeEntitySrcGen(EntitySrcGen)
~ void consumeEntitySrcNat(EntitySrcNat)
~ void consumeEntitySrcSyn(PdbxEntitySrcSyn)
~ void consumeEntityPolySeq(EntityPolySeq)
~ void consumeExptl(Exptl)
~ void consumePdbxAuditRevisionHistory(PdbxAuditRevisionHistory)
~ void consumePdbxChemCompIdentifier(PdbxChemCompIdentifier)
~ void consumePdbxDatabaseStatus(PdbxDatabaseStatus)
~ void consumePdbxEntityBranchDescriptor(PdbxEntityBranchDescriptor)
~ void consumePdbxMolecule(PdbxMolecule)
~ void consumePdbxMoleculeFeatures(PdbxMoleculeFeatures)
~ void consumePdbxNonpolyScheme(PdbxNonpolyScheme)
~ void consumePdbxReferenceEntityLink(PdbxReferenceEntityLink)
~ void consumePdbxReferenceEntityList(PdbxReferenceEntityList)
~ void consumePdbxReferenceEntityPolyLink(PdbxReferenceEntityPolyLink)
~ void consumePdbxStructAssembly(PdbxStructAssembly)
~ void consumePdbxStructAssemblyGen(PdbxStructAssemblyGen)
~ void consumePdbxStructModResidue(PdbxStructModResidue)
~ void consumePdbxStructOperList(PdbxStructOperList)
~ void consumeRefine(Refine)
~ void consumeStruct(Struct)
~ void consumeStructAsym(StructAsym)
~ void consumeStructConf(StructConf)
~ void consumeStructConn(StructConn)
~ void consumeStructConnType(StructConnType)
~ void consumeStructKeywords(StructKeywords)
~ void consumeStructNcsOper(StructNcsOper)
~ void consumeStructRef(StructRef)
~ void consumeStructRefSeq(StructRefSeq)
~ void consumeStructRefSeqDif(StructRefSeqDif)
~ void consumeStructSheetRange(StructSheetRange)
~ void consumeStructSite(StructSite)
~ void consumeStructSiteGen(StructSiteGen)
~ void consumeSymmetry(Symmetry)
~ void finish()
~ S getContainer()
}
class org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider {
- {static} Logger logger
+ {static} String CHEM_COMP_CACHE_DIRECTORY
+ {static} String DEFAULT_SERVER_URL
+ {static} String serverBaseUrl
+ {static} boolean useDefaultUrlLayout
- {static} File path
- {static} String NEWLINE
~ {static} AtomicBoolean loading
~ {static} List<String> protectedIDs
- {static} ChemCompProvider fallback
~ boolean downloadAll
+ {static} File getPath()
+ void checkDoFirstInstall()
- void split()
- void writeID(String,String)
+ ChemComp getChemComp(String)
+ {static} String getLocalFileName(String)
- {static} boolean fileExists(String)
- {static} boolean downloadChemCompRecord(String)
- void downloadAllDefinitions()
+ boolean isDownloadAll()
+ void setDownloadAll(boolean)
}
class org.biojava.nbio.structure.cluster.SubunitClustererParameters {
- {static} long serialVersionUID
- int minimumSequenceLength
- int absoluteMinimumSequenceLength
- double minimumSequenceLengthFraction
- boolean useGlobalMetrics
- double sequenceIdentityThreshold
- double sequenceCoverageThreshold
- boolean useEntityIdForSeqIdentityDetermination
- double rmsdThreshold
- double structureCoverageThreshold
- double tmThreshold
- SubunitClustererMethod clustererMethod
- String superpositionAlgorithm
- boolean optimizeAlignment
- boolean useSequenceCoverage
- boolean useRMSD
- boolean useStructureCoverage
- boolean useTMScore
- boolean internalSymmetry
- {static} double hcSequenceIdentityLocal
- {static} double hcSequenceCoverageLocal
- {static} double hcSequenceIdentityGlobal
+ int getMinimumSequenceLength()
+ void setMinimumSequenceLength(int)
+ int getAbsoluteMinimumSequenceLength()
+ void setAbsoluteMinimumSequenceLength(int)
+ double getMinimumSequenceLengthFraction()
+ void setMinimumSequenceLengthFraction(double)
+ double getSequenceIdentityThreshold()
+ void setSequenceIdentityThreshold(double)
+ double getSequenceCoverageThreshold()
+ void setSequenceCoverageThreshold(double)
+ double getRMSDThreshold()
+ void setRMSDThreshold(double)
+ double getTMThreshold()
+ void setTMThreshold(double)
+ double getStructureCoverageThreshold()
+ void setStructureCoverageThreshold(double)
+ SubunitClustererMethod getClustererMethod()
+ void setClustererMethod(SubunitClustererMethod)
+ boolean isInternalSymmetry()
+ void setInternalSymmetry(boolean)
+ String toString()
+ String getSuperpositionAlgorithm()
+ void setSuperpositionAlgorithm(String)
+ boolean isOptimizeAlignment()
+ void setOptimizeAlignment(boolean)
+ boolean isUseRMSD()
+ void setUseRMSD(boolean)
+ boolean isUseTMScore()
+ void setUseTMScore(boolean)
+ boolean isUseSequenceCoverage()
+ void setUseSequenceCoverage(boolean)
+ boolean isUseStructureCoverage()
+ void setUseStructureCoverage(boolean)
+ boolean isUseGlobalMetrics()
+ void setUseGlobalMetrics(boolean)
+ boolean isHighConfidenceScores(double,double)
+ boolean isUseEntityIdForSeqIdentityDetermination()
+ void setUseEntityIdForSeqIdentityDetermination(boolean)
}
class org.biojava.nbio.structure.align.helper.IndexPair {
- {static} long serialVersionUID
~ short row
~ short col
+ short getCol()
+ void setCol(short)
+ short getRow()
+ void setRow(short)
+ String toString()
}
class org.biojava.nbio.structure.cath.CathDomain {
+ {static} long serialVersionUID
~ String domainName
~ Integer classId
~ Integer architectureId
~ Integer topologyId
~ Integer homologyId
~ Integer sequenceFamilyId
~ Integer orthologousSequenceFamilyId
~ Integer likeSequenceFamilyId
~ Integer identicalSequenceFamilyId
~ Integer domainCounter
~ Integer length
~ Double resolution
~ String format
~ String version
~ Date date
~ String name
~ String source
~ String sequenceHeader
~ String sequence
~ List<CathSegment> segments
~ String comment
+ String getDomainName()
+ void setDomainName(String)
+ String getThePdbId()
+ String getPdbIdAndChain()
+ Integer getDomainId()
+ Integer getClassId()
+ void setClassId(Integer)
+ Integer getArchitectureId()
+ void setArchitectureId(Integer)
+ Integer getTopologyId()
+ void setTopologyId(Integer)
+ Integer getHomologyId()
+ void setHomologyId(Integer)
+ Integer getSequenceFamilyId()
+ void setSequenceFamilyId(Integer)
+ Integer getOrthologousSequenceFamilyId()
+ void setOrthologousSequenceFamilyId(Integer)
+ Integer getLikeSequenceFamilyId()
+ void setLikeSequenceFamilyId(Integer)
+ Integer getIdenticalSequenceFamilyId()
+ void setIdenticalSequenceFamilyId(Integer)
+ Integer getDomainCounter()
+ void setDomainCounter(Integer)
+ Integer getLength()
+ void setLength(Integer)
+ Double getResolution()
+ void setResolution(Double)
+ void setCATH(String)
+ String getCATH()
+ void setSOLID(String)
+ String getSOILD()
+ Integer getClassificationId(CathCategory)
+ String getFormat()
+ void setFormat(String)
+ String getVersion()
+ void setVersion(String)
+ Date getDate()
+ void setDate(Date)
+ String getName()
+ void setName(String)
+ String getSource()
+ void setSource(String)
+ String getSequenceHeader()
+ void setSequenceHeader(String)
+ String getSequence()
+ void setSequence(String)
+ List<CathSegment> getSegments()
+ void setSegments(List<CathSegment>)
+ String getComment()
+ void setComment(String)
+ String toString()
+ Set<String> getChains()
+ String getIdentifier()
+ SubstructureIdentifier toCanonical()
+ Structure reduce(Structure)
+ Structure loadStructure(AtomCache)
}
class org.biojava.nbio.structure.symmetry.internal.GraphComponentOrderDetector {
+ int calculateOrder(AFPChain,Atom[])
}
abstract class org.biojava.nbio.structure.io.mmcif.model.AbstractBean {
- {static} Logger logger
+ String toString()
}
class org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssemblyXMLContainer {
- List<PdbxStructAssembly> data
~ {static} JAXBContext jaxbContext
+ List<PdbxStructAssembly> getPdbxStructAssemblies()
+ void setPdbxStructAssemblies(List<PdbxStructAssembly>)
+ String toXML()
+ {static} PdbxStructAssemblyXMLContainer fromXML(String)
}
class org.biojava.nbio.structure.symmetry.internal.CeSymmResult {
- MultipleAlignment multipleAlignment
- AFPChain selfAlignment
- StructureIdentifier structureId
- Atom[] atoms
- CESymmParameters params
- SymmetryAxes axes
- String symmGroup
- int numRepeats
- boolean refined
+ boolean isSignificant()
+ List<StructureIdentifier> getRepeatsID()
+ String toString()
+ MultipleAlignment getMultipleAlignment()
+ void setMultipleAlignment(MultipleAlignment)
+ AFPChain getSelfAlignment()
+ void setSelfAlignment(AFPChain)
+ CESymmParameters getParams()
+ void setParams(CESymmParameters)
+ SymmetryAxes getAxes()
+ void setAxes(SymmetryAxes)
+ int getNumRepeats()
+ void setNumRepeats(int)
+ boolean isRefined()
+ void setRefined(boolean)
+ String getSymmGroup()
+ void setSymmGroup(String)
+ Atom[] getAtoms()
+ void setAtoms(Atom[])
+ int getSymmLevels()
+ StructureIdentifier getStructureId()
+ void setStructureId(StructureIdentifier)
+ String getReason()
}
class org.biojava.nbio.structure.align.ce.OptimalCECPMain {
- {static} boolean debug
+ {static} String algorithmName
+ {static} String version
# OptimalCECPParameters params
+ String getAlgorithmName()
+ String getVersion()
+ ConfigStrucAligParams getParameters()
+ void setParameters(ConfigStrucAligParams)
- {static} void permuteArray(T[],int)
+ AFPChain alignPermuted(Atom[],Atom[],Object,int)
- {static} void permuteAFPChain(AFPChain,int)
- {static} Matrix permuteMatrix(Matrix,int,int)
- {static} void permuteOptAln(AFPChain,int)
- {static} void assignOptAln(AFPChain,List<List<List<Integer>>>)
+ AFPChain align(Atom[],Atom[],Object)
+ AFPChain alignOptimal(Atom[],Atom[],Object,AFPChain[])
+ {static} void main(String[])
- {static} void displayAlignment(AFPChain,Atom[],Atom[])
}
class org.biojava.nbio.structure.align.pairwise.FragmentPair {
~ int length
~ int pos1
~ int pos2
~ int contacts
~ int cluster
~ double rms
~ int used
~ int covered
~ Matrix rot
~ Atom trans
~ Atom unitv
~ Atom center1
~ Atom center2
+ Object clone()
+ int getCluster()
+ void setCluster(int)
+ int getContacts()
+ void setContacts(int)
+ int getCovered()
+ void setCovered(int)
+ int getLength()
+ void setLength(int)
+ int getPos1()
+ void setPos1(int)
+ int getPos2()
+ void setPos2(int)
+ double getRms()
+ void setRms(double)
+ Matrix getRot()
+ void setRot(Matrix)
+ Atom getTrans()
+ void setTrans(Atom)
+ Atom getUnitv()
+ void setUnitv(Atom)
+ int getUsed()
+ void setUsed(int)
+ Atom getCenter1()
+ void setCenter1(Atom)
+ Atom getCenter2()
+ void setCenter2(Atom)
+ String toString()
}
class org.biojava.nbio.structure.io.PDBFileReader {
+ {static} String[] PDB_SPLIT_DIR
+ {static} String[] PDB_OBSOLETE_DIR
# String getFilename(String)
+ Structure getStructure(InputStream)
# String[] getSplitDirPath()
# String[] getObsoleteDirPath()
}
interface org.biojava.nbio.structure.Atom {
+ void setName(String)
+ String getName()
+ void setElement(Element)
+ Element getElement()
+ void setPDBserial(int)
+ int getPDBserial()
+ void setCoords(double[])
+ double[] getCoords()
+ Point3d getCoordsAsPoint3d()
+ void setX(double)
+ void setY(double)
+ void setZ(double)
+ double getX()
+ double getY()
+ double getZ()
+ void setAltLoc(Character)
+ Character getAltLoc()
+ void setOccupancy(float)
+ float getOccupancy()
+ void setTempFactor(float)
+ float getTempFactor()
+ Object clone()
+ void setGroup(Group)
+ Group getGroup()
+ void addBond(Bond)
+ List<Bond> getBonds()
+ void setBonds(List<Bond>)
+ boolean hasBond(Atom)
+ short getCharge()
+ void setCharge(short)
}
class org.biojava.nbio.structure.align.xml.RepresentativeXMLConverter {
+ {static} String toXML(SortedSet<String>)
+ {static} SortedSet<String> fromXML(String)
}
interface org.biojava.nbio.structure.ecod.EcodDatabase {
+ String getVersion()
+ EcodDomain getDomainsById(String)
+ List<EcodDomain> getDomainsForPdb(String)
+ List<EcodDomain> filterByHierarchy(String)
+ List<EcodDomain> getAllDomains()
}
class org.biojava.nbio.structure.align.fatcat.calc.FatCatAligner {
+ {static} boolean debug
+ {static} boolean printTimeStamps
~ AFPChain afpChain
~ Group[] twistedGroups
+ AFPChain getAfpChain()
+ Group[] getTwistedGroups()
+ void setTwistedGroups(Group[])
+ void align(Atom[],Atom[],boolean,FatCatParameters)
- {static} Group[] rChainAfp(FatCatParameters,AFPChain,Atom[],Atom[])
- {static} Group[] chainAfp(FatCatParameters,AFPChain,Atom[],Atom[])
}
interface org.biojava.nbio.structure.PDBRecord {
+ String toPDB()
+ void toPDB(StringBuffer)
}
class org.biojava.nbio.structure.align.fatcat.calc.AFPPostProcessor {
+ {static} boolean debug
+ {static} void postProcess(FatCatParameters,AFPChain,Atom[],Atom[])
- {static} void splitBlock(FatCatParameters,AFPChain,Atom[],Atom[])
- {static} void deleteBlock(FatCatParameters,AFPChain,Atom[],Atom[])
- {static} void mergeBlock(FatCatParameters,AFPChain,Atom[],Atom[])
- {static} double combineRmsd(int,int,AFPChain,Atom[],Atom[])
}
class org.biojava.nbio.structure.symmetry.geometry.Icosahedron {
- {static} int[] lineLoop1
- {static} int[] lineLoop2
- {static} int[] lineLoop3
- {static} int[] lineLoop4
- {static} int[] lineLoop5
- {static} int[] lineLoop6
- double circumscribedRadius
+ double getCirumscribedRadius()
+ void setCirumscribedRadius(double)
+ double getInscribedRadius()
+ void setInscribedRadius(double)
+ double getMidRadius()
+ void setMidRadius(double)
+ Point3d[] getVertices()
+ List<int[]> getLineLoops()
+ int getViewCount()
+ String getViewName(int)
+ Matrix3d getViewMatrix(int)
- {static} double getSideLengthFromInscribedRadius(double)
- {static} double getInscribedRadiusFromSideLength(double)
- {static} double getSideLengthFromMiddleRadius(double)
- {static} double getMiddleRadiusFromSideLength(double)
- {static} double getSideLengthFromCircumscribedRadius(double)
- {static} double getCircumscribedRadiusFromSideLength(double)
}
class org.biojava.nbio.structure.io.PDBParseException {
+ {static} long serialVersionUID
}
class org.biojava.nbio.structure.io.mmcif.model.DatabasePDBrev {
~ String date
~ String date_original
~ String status
~ String replaces
~ String mod_type
~ String num
+ String toString()
+ String getNum()
+ void setNum(String)
+ String getDate()
+ void setDate(String)
+ String getDate_original()
+ void setDate_original(String)
+ String getStatus()
+ void setStatus(String)
+ String getReplaces()
+ void setReplaces(String)
+ String getMod_type()
+ void setMod_type(String)
}
class org.biojava.nbio.structure.align.fatcat.calc.AFPOptimizer {
+ {static} boolean debug
+ {static} void optimizeAln(FatCatParameters,AFPChain,Atom[],Atom[])
+ {static} void blockInfo(AFPChain)
+ {static} void updateScore(FatCatParameters,AFPChain)
}
class org.biojava.nbio.structure.secstruc.BetaBridge {
- {static} long serialVersionUID
~ BridgeType type
~ int partner1
~ int partner2
+ int hashCode()
+ boolean equals(Object)
+ BridgeType getType()
+ int getPartner1()
+ int getPartner2()
}
class org.biojava.nbio.structure.align.multiple.util.MultipleAlignmentDisplay {
- {static} Logger logger
+ {static} List<Atom[]> getRotatedAtoms(MultipleAlignment)
}
class org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssemblyGenXMLContainer {
- List<PdbxStructAssemblyGen> data
~ {static} JAXBContext jaxbContext
+ List<PdbxStructAssemblyGen> getPdbxStructAssemblyGens()
+ void setPdbxStructAssemblies(List<PdbxStructAssemblyGen>)
+ String toXML()
+ {static} PdbxStructAssemblyGenXMLContainer fromXML(String)
}
class org.biojava.nbio.structure.align.client.StructureName {
- {static} long serialVersionUID
- {static} Logger logger
# String name
# String pdbId
# String chainName
- {static} Pattern cathPattern
- {static} Pattern scopPattern
- {static} Pattern ecodPattern
- Source mySource
- StructureIdentifier base
- void init()
- boolean initFromScop(String)
- boolean initFromCATH(String)
- boolean initFromECOD(String)
- boolean initFromBIO(String)
- boolean initFromPDB(String)
- boolean initFromURL(String)
- boolean initFromFile()
- {static} Set<String> getChainNames(SubstructureIdentifier)
+ String getPdbId()
+ String getChainId()
+ String getIdentifier()
+ String toString()
+ boolean isScopName()
+ boolean isCathID()
+ boolean isPdbId()
+ boolean isURL()
+ boolean isFile()
+ boolean isEcodDomain()
+ boolean isBioAssembly()
+ Source getSource()
+ StructureIdentifier getBaseIdentifier()
+ SubstructureIdentifier toCanonical()
+ Structure reduce(Structure)
+ Structure loadStructure(AtomCache)
+ int hashCode()
+ boolean equals(Object)
+ int compareTo(StructureName)
+ {static} ScopDomain guessScopDomain(String,ScopDatabase)
}
class org.biojava.nbio.structure.symmetry.core.C2RotationSolver {
- QuatSymmetrySubunits subunits
- QuatSymmetryParameters parameters
- Vector3d centroid
- Matrix4d centroidInverse
- RotationGroup rotations
+ RotationGroup getSymmetryOperations()
- void solve()
- void addEOperation()
- void combineWithTranslation(Matrix4d)
- Rotation createSymmetryOperation(List<Integer>,Matrix4d,AxisAngle4d,int,QuatSymmetryScores)
- void initialize()
}
class org.biojava.nbio.structure.align.model.AFPChain {
- {static} long serialVersionUID
+ {static} String newline
+ {static} String UNKNOWN_ALGORITHM
- String algorithmName
- String version
- String name1
- String name2
- long ioTime
- long calculationTime
- long id
- double alignScore
- double alignScoreUpdate
- int afpChainTwiNum
- double tmScore
- int minLen
- List<AFP> afpSet
- int[][] afpIndex
- int[][] afpAftIndex
- int[][] afpBefIndex
- Matrix disTable1
- Matrix disTable2
- int[] twi
- int afpChainLen
- int[] afpChainList
- double[] afpChainTwiBin
- double[] afpChainTwiList
- double chainRmsd
- int chainLen
- int blockNum
- int blockNumIni
- int blockNumClu
- int blockNumSpt
- double[] blockRmsd
- int[] block2Afp
- int[] blockSize
- double[] blockScore
- int[] blockGap
- int[] blockResSize
- int[][][] blockResList
- Matrix[] blockRotationMatrix
- Atom[] blockShiftVector
- int focusResn
- int[] focusRes1
- int[] focusRes2
- int focusAfpn
- int[] focusAfpList
- boolean shortAlign
- String[][][] pdbAln
- int[][][] optAln
- int[] optLen
- double[] optRmsd
- int optLength
- char[] alnsymb
- char[] alnseq1
- char[] alnseq2
- int alnLength
- int alnbeg1
- int alnbeg2
- int totalLenIni
- int totalLenOpt
- double totalRmsdIni
- double totalRmsdOpt
- int ca1Length
- int ca2Length
- int maxTra
- Double conn
- Double dvar
- double probability
- double identity
- double similarity
- double normAlignScore
- int myResultsEQR
- int myResultsSimilarity1
- int myResultsSimilarity2
- boolean sequentialAlignment
- Matrix distanceMatrix
- String description2
+ Object clone()
+ long getId()
+ void setId(long)
+ String toCE(Atom[],Atom[])
+ String toRotMat()
+ String toFatcat(Atom[],Atom[])
+ String toDBSearchResult()
# void calcSimilarity()
+ int getNrEQR()
+ int getCoverage1()
+ int getCoverage2()
+ String toString()
+ boolean isSignificantResult()
- void init()
- void invalidate()
+ String[][][] getPdbAln()
+ void setPdbAln(String[][][])
+ Double getConn()
+ void setConn(Double)
+ Double getDVar()
+ void setDVar(Double)
+ int getMaxTra()
+ void setMaxTra(int)
+ double getAlignScore()
+ void setAlignScore(double)
+ double getAlignScoreUpdate()
+ void setAlignScoreUpdate(double)
+ int getAfpChainTwiNum()
+ void setAfpChainTwiNum(int)
+ int getMinLen()
+ void setMinLen(int)
+ List<AFP> getAfpSet()
+ void setAfpSet(List<AFP>)
+ int[][] getAfpIndex()
+ void setAfpIndex(int[][])
+ int[][] getAfpAftIndex()
+ void setAfpAftIndex(int[][])
+ int[][] getAfpBefIndex()
+ void setAfpBefIndex(int[][])
+ Matrix getDisTable1()
+ void setDisTable1(Matrix)
+ Matrix getDisTable2()
+ void setDisTable2(Matrix)
+ int[] getTwi()
+ void setTwi(int[])
+ int getAfpChainLen()
+ void setAfpChainLen(int)
+ int[] getAfpChainList()
+ void setAfpChainList(int[])
+ double[] getAfpChainTwiBin()
+ void setAfpChainTwiBin(double[])
+ double[] getAfpChainTwiList()
+ void setAfpChainTwiList(double[])
+ double getChainRmsd()
+ void setChainRmsd(double)
+ int getChainLen()
+ void setChainLen(int)
+ int getMisLen()
+ void setMisLen(int)
+ int getGapLen()
+ void setGapLen(int)
+ int getBlockNum()
+ void setBlockNum(int)
+ int getBlockNumIni()
+ void setBlockNumIni(int)
+ int getBlockNumClu()
+ void setBlockNumClu(int)
+ int getBlockNumSpt()
+ void setBlockNumSpt(int)
+ double[] getBlockRmsd()
+ void setBlockRmsd(double[])
+ int[] getBlock2Afp()
+ void setBlock2Afp(int[])
+ int[] getBlockSize()
+ void setBlockSize(int[])
+ double[] getBlockScore()
+ void setBlockScore(double[])
+ int[] getBlockGap()
+ void setBlockGap(int[])
+ int[] getBlockResSize()
+ void setBlockResSize(int[])
+ int[][][] getBlockResList()
+ void setBlockResList(int[][][])
+ int getFocusResn()
+ void setFocusResn(int)
+ int[] getFocusRes1()
+ void setFocusRes1(int[])
+ int[] getFocusRes2()
+ void setFocusRes2(int[])
+ int getFocusAfpn()
+ void setFocusAfpn(int)
+ int[] getFocusAfpList()
+ void setFocusAfpList(int[])
+ boolean isShortAlign()
+ void setShortAlign(boolean)
+ int[][][] getOptAln()
+ void setOptAln(int[][][])
+ int[] getOptLen()
+ void setOptLen(int[])
+ double[] getOptRmsd()
+ void setOptRmsd(double[])
+ int getOptLength()
+ void setOptLength(int)
+ char[] getAlnsymb()
+ void setAlnsymb(char[])
+ char[] getAlnseq1()
+ void setAlnseq1(char[])
+ char[] getAlnseq2()
+ void setAlnseq2(char[])
+ int getAlnLength()
+ void setAlnLength(int)
+ int getAlnbeg1()
+ void setAlnbeg1(int)
+ int getAlnbeg2()
+ void setAlnbeg2(int)
+ int getTotalLenIni()
+ void setTotalLenIni(int)
+ int getTotalLenOpt()
+ void setTotalLenOpt(int)
+ double getTotalRmsdIni()
+ void setTotalRmsdIni(double)
+ double getTotalRmsdOpt()
+ void setTotalRmsdOpt(double)
+ String getName1()
+ void setName1(String)
+ String getName2()
+ void setName2(String)
+ long getCalculationTime()
+ void setCalculationTime(long)
+ int getCa1Length()
+ void setCa1Length(int)
+ int getCa2Length()
+ void setCa2Length(int)
+ long getIoTime()
+ void setIoTime(long)
+ double getProbability()
+ void setProbability(double)
+ double getIdentity()
+ void setIdentity(double)
+ double getSimilarity()
+ void setSimilarity(double)
+ double getNormAlignScore()
+ void setNormAlignScore(double)
+ Matrix[] getBlockRotationMatrix()
+ void setBlockRotationMatrix(Matrix[])
+ Atom[] getBlockShiftVector()
+ void setBlockShiftVector(Atom[])
+ String getAlgorithmName()
+ void setAlgorithmName(String)
+ String getVersion()
+ void setVersion(String)
+ boolean isSequentialAlignment()
+ void setSequentialAlignment(boolean)
+ Matrix getDistanceMatrix()
+ void setDistanceMatrix(Matrix)
+ void setTMScore(double)
+ double getTMScore()
+ String getDescription2()
+ void setDescription2(String)
+ int hashCode()
+ boolean equals(Object)
}
class org.biojava.nbio.structure.io.mmcif.model.EntitySrcNat {
~ String common_name
~ String details
~ String entity_id
~ String genus
~ String pdbx_atcc
~ String pdbx_cell
~ String pdbx_cell_line
~ String pdbx_cellular_location
~ String pdbx_fragment
~ String pdbx_ncbi_taxonomy_id
~ String pdbx_organ
~ String pdbx_organelle
~ String pdbx_organism_scientific
~ String pdbx_plasmid_details
~ String pdbx_plasmid_name
~ String pdbx_secretion
~ String pdbx_variant
~ String pdbx_src_id
~ String pdbx_alt_source_flag
~ String pdbx_beg_seq_num
~ String pdbx_end_seq_num
~ String pdbx_leaving_atom_flag
~ String species
~ String strain
~ String tissue
~ String tissue_fraction
+ String getCommon_name()
+ void setCommon_name(String)
+ String getDetails()
+ void setDetails(String)
+ String getEntity_id()
+ void setEntity_id(String)
+ String getGenus()
+ void setGenus(String)
+ String getPdbx_atcc()
+ void setPdbx_atcc(String)
+ String getPdbx_cell()
+ void setPdbx_cell(String)
+ String getPdbx_cell_line()
+ void setPdbx_cell_line(String)
+ String getPdbx_cellular_location()
+ void setPdbx_cellular_location(String)
+ String getPdbx_fragment()
+ void setPdbx_fragment(String)
+ String getPdbx_ncbi_taxonomy_id()
+ void setPdbx_ncbi_taxonomy_id(String)
+ String getPdbx_organ()
+ void setPdbx_organ(String)
+ String getPdbx_organelle()
+ void setPdbx_organelle(String)
+ String getPdbx_organism_scientific()
+ void setPdbx_organism_scientific(String)
+ String getPdbx_plasmid_details()
+ void setPdbx_plasmid_details(String)
+ String getPdbx_plasmid_name()
+ void setPdbx_plasmid_name(String)
+ String getPdbx_secretion()
+ void setPdbx_secretion(String)
+ String getPdbx_variant()
+ void setPdbx_variant(String)
+ String getSpecies()
+ void setSpecies(String)
+ String getStrain()
+ void setStrain(String)
+ String getTissue()
+ void setTissue(String)
+ String getTissue_fraction()
+ void setTissue_fraction(String)
+ String getPdbx_src_id()
+ void setPdbx_src_id(String)
+ String getPdbx_alt_source_flag()
+ void setPdbx_alt_source_flag(String)
+ String getPdbx_beg_seq_num()
+ void setPdbx_beg_seq_num(String)
+ String getPdbx_end_seq_num()
+ void setPdbx_end_seq_num(String)
+ String getPdbx_leaving_atom_flag()
+ void setPdbx_leaving_atom_flag(String)
}
class org.biojava.nbio.structure.SeqMisMatchImpl {
- {static} long serialVersionUID
~ Integer seqNum
~ String origGroup
~ String pdbGroup
~ String details
~ String uniProtId
~ String insCode
~ String pdbResNum
+ Integer getSeqNum()
+ void setSeqNum(Integer)
+ String getOrigGroup()
+ void setOrigGroup(String)
+ String getPdbGroup()
+ void setPdbGroup(String)
+ String getDetails()
+ void setDetails(String)
+ String getUniProtId()
+ void setUniProtId(String)
+ String getInsCode()
+ void setInsCode(String)
+ String getPdbResNum()
+ void setPdbResNum(String)
+ String toString()
}
class org.biojava.nbio.structure.align.quaternary.QsAlignResult {
- List<SubunitCluster> clusters
- List<Subunit> subunits1
- List<Subunit> subunits2
- Map<Integer,Integer> subunitMap
- MultipleAlignment alignment
- QsRelation relation
+ List<Subunit> getSubunits1()
+ List<Subunit> getSubunits2()
+ Map<Integer,Integer> getSubunitMap()
+ void setSubunitMap(Map<Integer,Integer>)
+ int length()
+ Matrix4d getTransform()
+ double getRmsd()
+ QsRelation getRelation()
+ void setRelation(QsRelation)
+ MultipleAlignment getAlignment()
+ void setAlignment(MultipleAlignment)
+ List<Subunit> getAlignedSubunits1()
+ List<Subunit> getAlignedSubunits2()
+ void setClusters(List<SubunitCluster>)
+ Atom[] getAlignedAtomsForSubunits1(int)
+ Atom[] getAlignedAtomsForSubunits2(int)
+ String toString()
}
class org.biojava.nbio.structure.jama.Maths {
+ {static} double hypot(double,double)
}
interface org.biojava.nbio.structure.AminoAcid {
+ {static} String ATOMRECORD
+ {static} String SEQRESRECORD
+ Atom getN()
+ Atom getCA()
+ Atom getC()
+ Atom getO()
+ Atom getCB()
+ Character getAminoType()
+ void setAminoType(Character)
+ void setRecordType(String)
+ String getRecordType()
}
class org.biojava.nbio.structure.io.mmcif.ChemicalComponentDictionary {
- Map<String,ChemComp> dictionary
- Map<String,String> replaces
- Map<String,String> isreplacedby
+ boolean isReplaced(ChemComp)
+ boolean isReplaced(String)
+ boolean isReplacer(ChemComp)
+ boolean isReplacer(String)
+ ChemComp getReplacer(ChemComp)
+ ChemComp getReplacer(String)
+ ChemComp getReplaced(ChemComp)
+ ChemComp getReplaced(String)
+ ChemComp getParent(ChemComp)
+ void addChemComp(ChemComp)
+ int size()
+ ChemComp getChemComp(String)
}
class org.biojava.nbio.structure.contact.AtomIdentifier {
- {static} long serialVersionUID
- int pdbSerial
- String chainId
+ int getPdbSerial()
+ void setPdbSerial(int)
+ String getChainId()
+ void setChainId(String)
+ int hashCode()
+ boolean equals(Object)
+ String toString()
}
class org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation {
- {static} long serialVersionUID
- String id
- String chainId
- Matrix4d transformation
+ void setId(String)
+ String getId()
+ void setChainId(String)
+ String getChainId()
+ void setTransformationMatrix(Matrix4d)
+ Matrix4d getTransformationMatrix()
+ void setRotationMatrix(double[][])
+ void setTranslation(double[])
+ void transformPoint(double[])
+ {static} BiologicalAssemblyTransformation combine(BiologicalAssemblyTransformation,BiologicalAssemblyTransformation)
+ boolean isIdentity()
+ String toXML()
+ void toXML(PrettyXMLWriter)
+ {static} BiologicalAssemblyTransformation fromXML(String)
+ {static} List<BiologicalAssemblyTransformation> fromMultiXML(String)
- {static} double[] getVectorFromXML(Node)
- {static} double[][] getMatrixFromXML(Node)
- {static} String getAttribute(Node,String)
+ String toString()
+ {static} String rotMatrixToString(Matrix4d)
+ {static} String translVecToString(Matrix4d)
+ int compareTo(BiologicalAssemblyTransformation)
}
class org.biojava.nbio.structure.jama.EigenvalueDecomposition {
- {static} long serialVersionUID
- int n
- boolean issymmetric
- double[] d
- double[][] V
- double[][] H
- double[] ort
- double cdivr
- void tred2()
- void tql2()
- void orthes()
- void cdiv(double,double,double,double)
- void hqr2()
+ Matrix getV()
+ double[] getRealEigenvalues()
+ double[] getImagEigenvalues()
+ Matrix getD()
}
class org.biojava.nbio.structure.io.mmcif.ChemCompConsumer {
- {static} Logger logger
~ ChemicalComponentDictionary dictionary
~ String latestChemCompId
+ void documentStart()
+ ChemicalComponentDictionary getDictionary()
+ void newChemComp(ChemComp)
+ void documentEnd()
+ void newAtomSite(AtomSite)
+ void newDatabasePDBremark(DatabasePDBremark)
+ void newDatabasePDBrev(DatabasePDBrev)
+ void newDatabasePDBrevRecord(DatabasePdbrevRecord)
+ void newEntity(Entity)
+ void newEntityPolySeq(EntityPolySeq)
+ void newExptl(Exptl)
+ void newCell(Cell)
+ void newSymmetry(Symmetry)
+ void newStructNcsOper(StructNcsOper)
+ void newAtomSites(AtomSites)
+ void newPdbxEntityNonPoly(PdbxEntityNonPoly)
+ void newPdbxNonPolyScheme(PdbxNonPolyScheme)
+ void newPdbxPolySeqScheme(PdbxPolySeqScheme)
+ void newRefine(Refine)
+ void newStructAsym(StructAsym)
+ void newStructKeywords(StructKeywords)
+ void newStructRef(StructRef)
+ void newStructRefSeq(StructRefSeq)
+ void newStructRefSeqDif(StructRefSeqDif)
+ void setStruct(Struct)
+ void newGenericData(String,List<String>,List<String>)
+ void newAuditAuthor(AuditAuthor)
+ FileParsingParameters getFileParsingParameters()
+ void setFileParsingParameters(FileParsingParameters)
+ void newChemCompDescriptor(ChemCompDescriptor)
+ void newPdbxStructOperList(PdbxStructOperList)
+ void newPdbxStrucAssembly(PdbxStructAssembly)
+ void newPdbxStrucAssemblyGen(PdbxStructAssemblyGen)
+ void newChemCompAtom(ChemCompAtom)
+ void newPdbxChemCompIndentifier(PdbxChemCompIdentifier)
+ void newChemCompBond(ChemCompBond)
+ void newPdbxChemCompDescriptor(PdbxChemCompDescriptor)
+ void newEntitySrcGen(EntitySrcGen)
+ void newEntitySrcNat(EntitySrcNat)
+ void newEntitySrcSyn(EntitySrcSyn)
+ void newStructConn(StructConn)
+ void newStructSiteGen(StructSiteGen)
+ void newStructSite(StructSite)
+ void newEntityPoly(EntityPoly)
+ void newPdbxAuditRevisionHistory(PdbxAuditRevisionHistory)
+ void newPdbxDatabaseStatus(PdbxDatabaseStatus)
}
class org.biojava.nbio.structure.align.util.UserConfiguration {
- {static} Logger logger
+ {static} String PDB_FORMAT
+ {static} String MMCIF_FORMAT
+ {static} String MMTF_FORMAT
+ {static} String TMP_DIR
+ {static} String PDB_DIR
+ {static} String PDB_CACHE_DIR
+ {static} String lineSplit
- String pdbFilePath
- String cacheFilePath
- FetchBehavior fetchBehavior
- ObsoleteBehavior obsoleteBehavior
- String fileFormat
- {static} AtomicBoolean warningShown
- String initPdbFilePath()
- String initCacheFilePath()
+ String getPdbFilePath()
+ void setPdbFilePath(String)
+ String getCacheFilePath()
+ void setCacheFilePath(String)
+ FetchBehavior getFetchBehavior()
+ void setFetchBehavior(FetchBehavior)
+ ObsoleteBehavior getObsoleteBehavior()
+ void setObsoleteBehavior(ObsoleteBehavior)
+ XMLWriter toXML(PrintWriter)
+ XMLWriter toXML(XMLWriter)
+ {static} UserConfiguration fromStartupParams(StartupParameters)
+ void setFileFormat(String)
+ String getFileFormat()
}
class org.biojava.nbio.structure.Author {
- {static} long serialVersionUID
- String surname
- String initials
+ String getInitials()
+ void setInitials(String)
+ String getSurname()
+ void setSurname(String)
+ boolean equals(Object)
+ int hashCode()
+ String toString()
}
class org.biojava.nbio.structure.asa.AsaCalculator {
- {static} Logger logger
+ {static} int DEFAULT_N_SPHERE_POINTS
+ {static} double DEFAULT_PROBE_SIZE
+ {static} int DEFAULT_NTHREADS
- {static} boolean DEFAULT_USE_SPATIAL_HASHING
+ {static} double TRIGONAL_CARBON_VDW
+ {static} double TETRAHEDRAL_CARBON_VDW
+ {static} double TRIGONAL_NITROGEN_VDW
+ {static} double TETRAHEDRAL_NITROGEN_VDW
+ {static} double SULFUR_VDW
+ {static} double OXIGEN_VDW
+ {static} double NUC_CARBON_VDW
+ {static} double NUC_NITROGEN_VDW
+ {static} double PHOSPHOROUS_VDW
- Point3d[] atomCoords
- Atom[] atoms
- double[] radii
- double probe
- int nThreads
- Point3d[] spherePoints
- double cons
- int[][] neighborIndices
- boolean useSpatialHashingForNeighbors
- void initSpherePoints(int)
+ GroupAsa[] getGroupAsas()
+ double[] calculateAsas()
~ void setUseSpatialHashingForNeighbors(boolean)
- Point3d[] generateSpherePoints(int)
~ int[][] findNeighborIndices()
~ int[][] findNeighborIndicesSpatialHashing()
~ Point3d[] getAtomCoords()
- List<Contact> calcContacts()
- double calcSingleAsa(int)
- {static} double getRadiusForAmino(AminoAcid,Atom)
- {static} double getRadiusForNucl(NucleotideImpl,Atom)
+ {static} double getRadius(Atom)
}
class org.biojava.nbio.structure.asa.AsaCalculator.AsaCalcWorker {
- int i
- double[] asas
+ void run()
}
class org.biojava.nbio.structure.ChainImpl {
- {static} Logger logger
- {static} long serialVersionUID
- {static} String DEFAULT_CHAIN_ID
- String swissprot_id
- String authId
- List<Group> groups
- List<Group> seqResGroups
- EntityInfo entity
- Structure parent
- Map<String,Integer> pdbResnumMap
- String asymId
- List<SeqMisMatch> seqMisMatches
+ String getId()
+ void setId(String)
+ String getName()
+ void setName(String)
+ void setParent(Structure)
+ void setStructure(Structure)
+ Structure getStructure()
+ Structure getParent()
+ Object clone()
+ void setEntityInfo(EntityInfo)
+ EntityInfo getEntityInfo()
+ void setSwissprotId(String)
+ String getSwissprotId()
+ void addGroup(Group)
+ Group getAtomGroup(int)
+ List<Group> getAtomGroups(GroupType)
+ List<Group> getAtomGroups()
+ void setAtomGroups(List<Group>)
+ Group[] getGroupsByPDB(ResidueNumber,ResidueNumber,boolean)
+ Group getGroupByPDB(ResidueNumber)
+ Group[] getGroupsByPDB(ResidueNumber,ResidueNumber)
+ int getSeqResLength()
+ void setChainID(String)
+ String getChainID()
+ String toString()
+ Sequence<?> getBJSequence()
+ String getAtomSequence()
+ String getSeqResSequence()
+ String getSeqResOneLetterSeq()
+ Group getSeqResGroup(int)
+ List<Group> getSeqResGroups(GroupType)
+ List<Group> getSeqResGroups()
+ void setSeqResGroups(List<Group>)
+ int getAtomLength()
+ List<Group> getAtomLigands()
+ String getInternalChainID()
+ void setInternalChainID(String)
+ String toPDB()
+ String toMMCIF()
+ void setSeqMisMatches(List<SeqMisMatch>)
+ List<SeqMisMatch> getSeqMisMatches()
+ EntityType getEntityType()
+ boolean isWaterOnly()
+ boolean isPureNonPolymer()
+ GroupType getPredominantGroupType()
+ boolean isProtein()
+ boolean isNucleicAcid()
}
class org.biojava.nbio.structure.io.mmcif.model.StructRef {
~ String id
~ String db_name
~ String db_code
~ String entity_id
~ String pdbx_db_accession
~ String pdbx_align_begin
~ String pdbx_seq_one_letter_code
~ String biol_id
+ String getBiol_id()
+ void setBiol_id(String)
+ String getId()
+ void setId(String)
+ String getDb_name()
+ void setDb_name(String)
+ String getDb_code()
+ void setDb_code(String)
+ String getEntity_id()
+ void setEntity_id(String)
+ String getPdbx_db_accession()
+ void setPdbx_db_accession(String)
+ String getPdbx_align_begin()
+ void setPdbx_align_begin(String)
+ String getPdbx_seq_one_letter_code()
+ void setPdbx_seq_one_letter_code(String)
}
class org.biojava.nbio.structure.io.mmcif.MMCIFFileTools {
- {static} Logger logger
- {static} String newline
+ {static} String MMCIF_MISSING_VALUE
+ {static} String MMCIF_DEFAULT_VALUE
+ {static} String toLoopMmCifHeaderString(String,String)
+ {static} String toMMCIF(String,Object)
+ {static} Field[] getFields(Class<?>)
+ {static} String[] getFieldNames(Field[])
+ {static} String toMMCIF(List<T>,Class<T>)
- {static} String toSingleLoopLineMmCifString(Object,Field[],int[])
- {static} String addMmCifQuoting(String)
+ {static} Symmetry convertSpaceGroupToSymmetry(SpaceGroup)
+ {static} Cell convertCrystalCellToCell(CrystalCell)
+ {static} AtomSite convertAtomToAtomSite(Atom,int,String,String)
+ {static} AtomSite convertAtomToAtomSite(Atom,int,String,String,int)
+ {static} List<AtomSite> convertGroupToAtomSites(Group,int,String,String)
+ {static} List<AtomSite> convertChainToAtomSites(Chain,int,String,String)
+ {static} List<AtomSite> convertStructureToAtomSites(Structure)
- {static} int[] getFieldSizes(List<T>,Field[])
- {static} int getMaxStringLength(String[])
}
class org.biojava.nbio.structure.io.SeqRes2AtomAligner {
- {static} Logger logger
- String alignmentString
+ String getAlignmentString()
+ {static} Chain getMatchingAtomRes(Chain,List<Chain>,boolean)
+ void align(Structure,List<Chain>)
+ void mapSeqresRecords(Chain,Chain)
- void alignNucleotideChains(Chain,Chain)
- List<Group> trySimpleMatch(List<Group>,List<Group>)
+ {static} String getFullAtomSequence(List<Group>,Map<Integer,Integer>,boolean)
- boolean alignNucleotideGroups(List<Group>,List<Group>)
- Sequence<NucleotideCompound> getNucleotideSequence(String)
- boolean alignProteinChains(List<Group>,List<Group>)
- boolean mapChains(List<Group>,List<Group>,SequencePair<ProteinSequence,AminoAcidCompound>,Map<Integer,Integer>,Map<Integer,Integer>)
- boolean mapDNAChains(List<Group>,List<Group>,SequencePair<Sequence<NucleotideCompound>,NucleotideCompound>,Map<Integer,Integer>,Map<Integer,Integer>)
+ {static} void storeUnAlignedSeqRes(Structure,List<Chain>,boolean)
}
class org.biojava.nbio.structure.BioAssemblyIdentifier {
- {static} long serialVersionUID
- String pdbCode
- int biolNr
+ {static} Pattern BIO_NAME_PATTERN
+ String getIdentifier()
+ String toString()
+ Structure loadStructure(AtomCache)
+ SubstructureIdentifier toCanonical()
+ Structure reduce(Structure)
}
class org.biojava.nbio.structure.align.CallableStructureAlignment {
- {static} Logger logger
- PdbPair pair
- AtomCache cache
- Atom[] ca1
- Atom[] ca2
- SynchronizedOutFile outFile
- File outFileDir
- String algorithmName
- ConfigStrucAligParams params
+ AFPChain call()
+ PdbPair getPair()
+ void setPair(PdbPair)
+ AtomCache getCache()
+ void setCache(AtomCache)
+ SynchronizedOutFile getOutFile()
+ void setOutFile(SynchronizedOutFile)
+ Atom[] getCa1()
+ void setCa1(Atom[])
- void writeXML(File,String,String,String)
+ void setOutputDir(File)
+ void setAlgorithmName(String)
+ void setParameters(ConfigStrucAligParams)
}
class org.biojava.nbio.structure.align.pairwise.AlternativeAlignment {
- {static} long serialVersionUID
- int[] idx1
- int[] idx2
- String[] pdbresnum1
- String[] pdbresnum2
- int nfrags
- Atom center
- Matrix rot
- Atom tr
- int gaps0
- int eqr0
- int rms0
- int joined
- int percId
- int cluster
- float score
- IndexPair[] aligpath
- int fromia
- Matrix currentRotMatrix
- Atom currentTranMatrix
- double rms
- Matrix distanceMatrix
+ {static} Logger logger
+ String toString()
+ int getCluster()
+ void setCluster(int)
+ double getRmsd()
+ void setRms(double)
+ float getScore()
+ void setScore(float)
+ int getGaps()
+ int getEqr()
+ int[] getIdx1()
+ int[] getIdx2()
+ int getPercId()
+ void setPercId(int)
+ void apairs_from_seed(int,int,int)
+ void apairs_from_idxlst(JointFragments)
+ int getAltAligNumber()
+ void setAltAligNumber(int)
- void rotateShiftAtoms(Atom[])
+ void finish(StrucAligParameters,Atom[],Atom[])
+ {static} Matrix getDistanceMatrix(Atom[],Atom[])
- Alignable getInitalStrCompAlignment(Atom[],Atom[],StrucAligParameters)
+ void refine(StrucAligParameters,Atom[],Atom[])
- void getPdbRegions(Atom[],Atom[])
+ String[] getPDBresnum1()
+ void setPDBresnum1(String[])
+ String[] getPDBresnum2()
+ void setPDBresnum2(String[])
- int count_gaps(int[],int[])
+ void calculateSuperpositionByIdx(Atom[],Atom[])
- void super_pos_alig(Atom[],Atom[],int[],int[],boolean)
+ Matrix getRotationMatrix()
+ Atom getShift()
+ void calcScores(Atom[],Atom[])
+ Structure getAlignedStructure(Structure,Structure)
+ String toPDB(Structure,Structure)
+ Matrix getDistanceMatrix()
+ void setDistanceMatrix(Matrix)
+ IndexPair[] getPath()
}
class org.biojava.nbio.structure.symmetry.geometry.Tetrahedron {
- {static} double TETRAHEDRAL_ANGLE
- {static} int[] lineLoop1
- {static} int[] lineLoop2
- double circumscribedRadius
+ double getCirumscribedRadius()
+ void setCirumscribedRadius(double)
+ double getInscribedRadius()
+ void setInscribedRadius(double)
+ double getMidRadius()
+ void setMidRadius(double)
+ Point3d[] getVertices()
+ List<int[]> getLineLoops()
+ int getViewCount()
+ String getViewName(int)
+ Matrix3d getViewMatrix(int)
- {static} double getSideLengthFromInscribedRadius(double)
- {static} double getInscribedRadiusFromSideLength(double)
- {static} double getSideLengthFromMiddleRadius(double)
- {static} double getMiddleRadiusFromSideLength(double)
- {static} double getSideLengthFromCircumscribedRadius(double)
- {static} double getCircumscribedRadiusFromSideLength(double)
}
class org.biojava.nbio.structure.align.multiple.util.ReferenceSuperimposer {
- int reference
+ void superimpose(MultipleAlignment)
}
class org.biojava.nbio.structure.io.cif.CifFileConverter {
+ {static} Structure fromPath(Path)
+ {static} Structure fromPath(Path,FileParsingParameters)
+ {static} Structure fromURL(URL)
- {static} Structure fromURL(URL,FileParsingParameters)
+ {static} Structure fromInputStream(InputStream)
+ {static} Structure fromInputStream(InputStream,FileParsingParameters)
+ {static} Structure fromCifFile(CifFile)
+ {static} Structure fromCifFile(CifFile,FileParsingParameters)
+ {static} void toTextFile(Structure,Path)
+ {static} void toBinaryFile(Structure,Path)
+ {static} byte[] toBinary(Structure)
+ {static} String toText(Structure)
+ {static} CifFile toCifFile(Structure)
}
class org.biojava.nbio.structure.cath.CathFactory {
+ {static} String VERSION_3_5_0
+ {static} String VERSION_4_0_0
+ {static} String VERSION_4_1_0
+ {static} String VERSION_4_2_0
+ {static} String LATEST_VERSION
+ {static} String DEFAULT_VERSION
- {static} CathDatabase cath
- {static} Map<String,CathDatabase> versions
+ {static} void setCath(CathDatabase)
+ {static} CathDatabase getCathDatabase()
+ {static} CathDatabase getCathDatabase(String)
}
class org.biojava.nbio.structure.align.pairwise.Gotoh {
+ {static} int ALIGFACTOR
~ Alignable a
~ int k
~ AligMatEl currentCell
~ GapArray currentGap
- void align()
- void setPath()
}
class org.biojava.nbio.structure.io.sifts.SiftsXMLParser {
- {static} Logger logger
~ Document dom
~ List<SiftsEntity> entities
~ {static} boolean debug
+ List<SiftsEntity> getEntities()
+ void parseXmlFile(InputStream)
- void parseDocument()
- SiftsEntity getSiftsEntity(Element)
- SiftsSegment getSiftsSegment(Element)
- SiftsResidue getResidue(Element)
- String getTextValue(Element,String)
- List<String> getTextValues(Element,String)
}
class org.biojava.nbio.structure.contact.InterfaceFinder {
+ {static} double DEFAULT_CONTACT_CUTOFF
- {static} CrystalTransform IDENTITY_TRANSFORM
- {static} boolean INCLUDE_HETATOMS
- Structure structure
- double cutoff
- BoundingBox[] boundingBoxes
+ void setCutoff(double)
+ StructureInterfaceList getAllInterfaces()
- void initBoundingBoxes()
- StructureInterface calcInterface(Chain,Chain)
}
class org.biojava.nbio.structure.align.util.AtomCache {
- {static} Logger logger
+ {static} boolean DEFAULT_BIOASSEMBLY_STYLE
+ {static} String BIOL_ASSEMBLY_IDENTIFIER
+ {static} String CHAIN_NR_SYMBOL
+ {static} String CHAIN_SPLIT_SYMBOL
+ {static} String UNDERSCORE
- {static} String FILE_SEPARATOR
# FileParsingParameters params
- FetchBehavior fetchBehavior
- ObsoleteBehavior obsoleteBehavior
- String cachePath
- Collection<String> currentlyLoading
- String path
- boolean useMmCif
- boolean useMmtf
+ Atom[] getAtoms(String)
+ Atom[] getAtoms(StructureIdentifier)
+ Atom[] getRepresentativeAtoms(String)
+ Atom[] getRepresentativeAtoms(StructureIdentifier)
+ Structure getBiologicalAssembly(String,int,boolean)
+ Structure getBiologicalAssembly(String,boolean)
+ List<Structure> getBiologicalAssemblies(String,boolean)
+ String getCachePath()
+ FileParsingParameters getFileParsingParams()
+ String getPath()
+ Structure getStructure(String)
+ Structure getStructure(StructureIdentifier)
+ Structure getStructureForDomain(ScopDomain)
+ Structure getStructureForDomain(ScopDomain,ScopDatabase)
+ Structure getStructureForDomain(ScopDomain,ScopDatabase,boolean)
+ Structure getStructureForDomain(String)
+ Structure getStructureForDomain(String,ScopDatabase)
+ void setCachePath(String)
+ void setFileParsingParams(FileParsingParameters)
+ void setObsoleteBehavior(ObsoleteBehavior)
+ ObsoleteBehavior getObsoleteBehavior()
+ FetchBehavior getFetchBehavior()
+ void setFetchBehavior(FetchBehavior)
+ void setPath(String)
+ boolean isUseMmCif()
+ void setUseMmCif(boolean)
+ void setUseMmtf(boolean)
+ boolean isUseMmtf()
- boolean checkLoading(String)
+ Structure getStructureForCathDomain(StructureName)
+ Structure getStructureForCathDomain(StructureName,CathDatabase)
# void flagLoading(String)
# void flagLoadingFinished(String)
+ Structure getStructureForPdbId(String)
- Structure loadStructureFromMmtfByPdbId(String)
# Structure loadStructureFromCifByPdbId(String)
# Structure loadStructureFromPdbByPdbId(String)
}
class org.biojava.nbio.structure.io.mmcif.model.AuditAuthor {
~ String name
~ String pdbx_ordinal
~ String address
+ String getName()
+ void setName(String)
+ String getPdbx_ordinal()
+ void setPdbx_ordinal(String)
+ String getAddress()
+ void setAddress(String)
}
class org.biojava.nbio.structure.asa.GroupAsa {
- {static} long serialVersionUID
- {static} HashMap<Character,Double> tripeptAsa
- Group g
- double asaU
- double asaC
- List<Double> atomAsaUs
- List<Double> atomAsaCs
- {static} HashMap<Character,Double> initTriPeptAsas()
- int getGroupNoHSize()
+ Group getGroup()
+ double getAsaU()
+ void setAsaU(double)
+ double getAsaC()
+ void setAsaC(double)
+ void addAtomAsaU(double)
+ void addAtomAsaC(double)
+ List<Double> getAtomAsaUs()
+ void setAtomAsaUs(List<Double>)
+ List<Double> getAtomAsaCs()
+ void setAtomAsaCs(List<Double>)
+ double getBsa()
+ double getBsaToAsaRatio()
+ double getRelativeAsaU()
+ double getRelativeAsaC()
+ Object clone()
}
class org.biojava.nbio.structure.scop.ScopDomain {
- {static} long serialVersionUID
~ String scopId
~ String pdbId
~ List<String> ranges
~ String classificationId
~ Integer sunid
~ int classId
~ int foldId
~ int superfamilyId
~ int familyId
~ int domainId
~ int speciesId
~ int px
+ String toString()
+ String getScopId()
+ void setScopId(String)
+ String getPdbId()
+ void setPdbId(String)
+ List<String> getRanges()
+ void setRanges(List<String>)
+ String getClassificationId()
+ void setClassificationId(String)
+ Integer getSunid()
+ void setSunid(Integer)
+ int getClassId()
+ void setClassId(int)
+ int getFoldId()
+ void setFoldId(int)
+ int getSuperfamilyId()
+ void setSuperfamilyId(int)
+ int getFamilyId()
+ void setFamilyId(int)
+ int getDomainId()
+ void setDomainId(int)
+ int getSpeciesId()
+ void setSpeciesId(int)
+ int getPx()
+ void setPx(int)
# Object clone()
+ Set<String> getChains()
+ String getIdentifier()
+ List<ResidueRange> getResidueRanges()
+ SubstructureIdentifier toCanonical()
+ Structure reduce(Structure)
+ Structure loadStructure(AtomCache)
}
class org.biojava.nbio.structure.ecod.EcodFactory {
- {static} Logger logger
+ {static} String DEFAULT_VERSION
- {static} Map<String,SoftReference<EcodDatabase>> versionedEcodDBs
- {static} String defaultVersion
+ {static} EcodDatabase getEcodDatabase()
+ {static} EcodDatabase getEcodDatabase(String)
- {static} void releaseReferences()
+ {static} void setEcodDatabase(String)
}
class org.biojava.nbio.structure.io.sifts.SiftsEntity {
- {static} long serialVersionUID
~ String type
~ String entityId
~ List<SiftsSegment> segments
+ void addSegment(SiftsSegment)
+ List<SiftsSegment> getSegments()
+ void setSegments(List<SiftsSegment>)
+ String getType()
+ void setType(String)
+ String getEntityId()
+ void setEntityId(String)
+ String toString()
+ int hashCode()
+ boolean equals(Object)
}
interface org.biojava.nbio.structure.align.multiple.util.MultipleSuperimposer {
+ void superimpose(MultipleAlignment)
}
class org.biojava.nbio.structure.secstruc.SecStrucElement {
- {static} long serialVersionUID
- SecStrucType type
- ResidueRangeAndLength range
- int index
+ SecStrucType getType()
+ int getIndex()
+ int getLength()
+ String getId()
+ ResidueRangeAndLength getRange()
+ String toString()
}
class org.biojava.nbio.structure.ResidueNumber {
- {static} long serialVersionUID
- String chainName
- Character insCode
- Integer seqNum
+ String getChainName()
+ void setChainName(String)
+ Character getInsCode()
+ void setInsCode(Character)
+ Integer getSeqNum()
+ void setSeqNum(Integer)
+ boolean equals(Object)
+ boolean equalsPositional(Object)
+ int hashCode()
+ String toString()
+ String toPDB()
+ {static} ResidueNumber fromString(String)
+ int compareTo(ResidueNumber)
+ int compareToPositional(ResidueNumber)
+ String printFull()
}
class org.biojava.nbio.structure.align.xml.MultipleAlignmentXMLConverter {
+ {static} void printXMLensemble(PrettyXMLWriter,MultipleAlignmentEnsemble)
+ {static} void printXMLalignment(PrettyXMLWriter,MultipleAlignment)
+ {static} void printXMLblockSet(PrettyXMLWriter,BlockSet)
+ {static} void printXMLblock(PrettyXMLWriter,Block)
+ {static} void printXMLmatrix4d(PrettyXMLWriter,Matrix4d)
+ {static} void printXMLscoresCache(PrettyXMLWriter,ScoresCache)
+ {static} void printXMLheader(PrettyXMLWriter,MultipleAlignmentEnsemble)
}
class org.biojava.nbio.structure.io.mmcif.model.DatabasePDBremark {
~ String id
~ String text
+ String getId()
+ void setId(String)
+ String getText()
+ void setText(String)
}
class org.biojava.nbio.structure.math.SparseSquareMatrix {
- {static} long serialVersionUID
- int N
- SparseVector[] rows
+ void put(int,int,double)
+ double get(int,int)
+ int nnz()
+ SparseVector times(SparseVector)
+ SparseSquareMatrix plus(SparseSquareMatrix)
+ String toString()
}
class org.biojava.nbio.structure.align.pairwise.AlignmentProgressListener {
~ String n1
~ String n2
~ int l1
~ int l2
~ Atom[] ca1
~ Atom[] ca2
+ void startingAlignment(String,Atom[],String,Atom[])
+ void calculatedFragmentPairs(List<FragmentPair>)
+ void jointFragments(JointFragments[])
}
class org.biojava.nbio.structure.xtal.CrystalTransform {
- {static} long serialVersionUID
+ {static} Matrix4d IDENTITY
- SpaceGroup sg
- int transformId
- Matrix4d matTransform
- Point3i crystalTranslation
+ Matrix4d getMatTransform()
+ void setMatTransform(Matrix4d)
+ Point3i getCrystalTranslation()
+ void translate(Point3i)
+ boolean isEquivalent(CrystalTransform)
+ boolean isPureCrystalTranslation()
+ boolean isIdentity()
+ boolean isPureTranslation()
+ boolean isFractionalTranslation()
+ boolean isRotation()
+ TransformType getTransformType()
+ Vector3d getTranslScrewComponent()
+ int getTransformId()
+ void setTransformId(int)
+ String toString()
+ String toXYZString()
- String formatCoef(double)
+ {static} Vector3d getTranslScrewComponent(Matrix4d)
}
class org.biojava.nbio.structure.io.mmcif.model.StructRefSeq {
~ String align_id
~ String ref_id
~ String pdbx_PDB_id_code
~ String pdbx_strand_id
~ String seq_align_beg
~ String pdbx_seq_align_beg_ins_code
~ String seq_align_end
~ String pdbx_seq_align_end_ins_code
~ String pdbx_db_accession
~ String db_align_beg
~ String pdbx_db_align_beg_ins_code
~ String db_align_end
~ String pdbx_db_align_end_ins_code
~ String pdbx_auth_seq_align_beg
~ String pdbx_auth_seq_align_end
~ String details
+ String getAlign_id()
+ void setAlign_id(String)
+ String getRef_id()
+ void setRef_id(String)
+ String getPdbx_PDB_id_code()
+ void setPdbx_PDB_id_code(String)
+ String getPdbx_strand_id()
+ void setPdbx_strand_id(String)
+ String getSeq_align_beg()
+ void setSeq_align_beg(String)
+ String getPdbx_seq_align_beg_ins_code()
+ void setPdbx_seq_align_beg_ins_code(String)
+ String getSeq_align_end()
+ void setSeq_align_end(String)
+ String getPdbx_seq_align_end_ins_code()
+ void setPdbx_seq_align_end_ins_code(String)
+ String getPdbx_db_accession()
+ void setPdbx_db_accession(String)
+ String getDb_align_beg()
+ void setDb_align_beg(String)
+ String getPdbx_db_align_beg_ins_code()
+ void setPdbx_db_align_beg_ins_code(String)
+ String getDb_align_end()
+ void setDb_align_end(String)
+ String getPdbx_db_align_end_ins_code()
+ void setPdbx_db_align_end_ins_code(String)
+ String getPdbx_auth_seq_align_beg()
+ void setPdbx_auth_seq_align_beg(String)
+ String getPdbx_auth_seq_align_end()
+ void setPdbx_auth_seq_align_end(String)
+ String getDetails()
+ void setDetails(String)
}
interface org.biojava.nbio.structure.align.multiple.BlockSet {
+ BlockSet clone()
+ MultipleAlignment getMultipleAlignment()
+ void setMultipleAlignment(MultipleAlignment)
+ List<Block> getBlocks()
+ void setBlocks(List<Block>)
+ List<Matrix4d> getTransformations()
+ void setTransformations(List<Matrix4d>)
+ int length()
+ int getCoreLength()
+ List<Integer> getAlignResCounts()
+ int size()
+ void clear()
}
class org.biojava.nbio.structure.align.fatcat.calc.AFPCalculator {
+ {static} boolean debug
+ {static} void extractAFPChains(FatCatParameters,AFPChain,Atom[],Atom[])
- {static} double getEnd2EndDistance(Atom[],Atom[],int,int,int,int)
- {static} boolean filterTerminal(Atom[],Atom[],int,int,int,int,int,int)
- {static} double getRmsd(Atom[],Atom[],int,int,int,Matrix,Atom)
- {static} Atom[] getFragment(Atom[],int,int,boolean)
- {static} double scoreAfp(AFP,double,double)
+ {static} void sortAfps(AFPChain,Atom[],Atom[])
}
class org.biojava.nbio.structure.symmetry.geometry.Octahedron {
- {static} double TETRAHEDRAL_ANGLE
- {static} int[] lineLoop1
- double cirumscribedRadius
+ double getCirumscribedRadius()
+ void setCirumscribedRadius(double)
+ double getInscribedRadius()
+ void setInscribedRadius(double)
+ double getMidRadius()
+ void setMidRadius(double)
+ Point3d[] getVertices()
+ List<int[]> getLineLoops()
+ Point3d getC4Axis(double)
+ Point3d getC3Axis(double)
+ Point3d getC2Axis(double)
+ int getViewCount()
+ String getViewName(int)
+ Matrix3d getViewMatrix(int)
- {static} double getSideLengthFromInscribedRadius(double)
- {static} double getInscribedRadiusFromSideLength(double)
- {static} double getSideLengthFromMiddleRadius(double)
- {static} double getMiddleRadiusFromSideLength(double)
- {static} double getSideLengthFromCircumscribedRadius(double)
- {static} double getCircumscribedRadiusFromSideLength(double)
}
class org.biojava.nbio.structure.symmetry.core.HelixExtender {
- QuatSymmetrySubunits subunits
- Helix helix
+ Point3d[] extendHelix(int)
}
class org.biojava.nbio.structure.io.mmcif.model.Exptl {
~ String entry_id
~ String method
~ String crystals_number
~ String absorpt_coefficient_mu
~ String absorpt_correction_T_max
~ String absorpt_correction_T_min
~ String absorpt_correction_type
~ String absorpt_process_details
~ String details
~ String method_details
+ String getEntry_id()
+ void setEntry_id(String)
+ String getMethod()
+ void setMethod(String)
+ String getCrystals_number()
+ void setCrystals_number(String)
+ String getAbsorpt_coefficient_mu()
+ void setAbsorpt_coefficient_mu(String)
+ String getAbsorpt_correction_T_max()
+ void setAbsorpt_correction_T_max(String)
+ String getAbsorpt_correction_T_min()
+ void setAbsorpt_correction_T_min(String)
+ String getAbsorpt_correction_type()
+ void setAbsorpt_correction_type(String)
+ String getAbsorpt_process_details()
+ void setAbsorpt_process_details(String)
+ String getDetails()
+ void setDetails(String)
+ String getMethod_details()
+ void setMethod_details(String)
}
class org.biojava.nbio.structure.symmetry.geometry.IcosahedralSampler {
- {static} Quat4d quat
- {static} double[][] orientations
+ {static} int getSphereCount()
+ {static} Quat4d getQuat4d(int)
+ {static} void getAxisAngle(int,AxisAngle4d)
}
class org.biojava.nbio.structure.math.SparseVector {
- {static} long serialVersionUID
- int N
- SymbolTable<Integer,Double> symbolTable
+ void put(int,double)
+ double get(int)
+ int nnz()
+ int size()
+ double dot(SparseVector)
+ double norm()
+ SparseVector scale(double)
+ SparseVector plus(SparseVector)
+ String toString()
}
class org.biojava.nbio.structure.symmetry.internal.ResidueGroup {
- List<Integer> residues
+ int order()
+ boolean isCompatible(ResidueGroup)
+ void combineWith(List<List<Integer>>)
}
class org.biojava.nbio.structure.contact.GridCell {
- Grid grid
- ArrayList<Integer> iIndices
- ArrayList<Integer> jIndices
+ void addIindex(int)
+ void addJindex(int)
+ int getNumIindices()
+ int getNumJindices()
+ List<Contact> getContactsWithinCell()
+ List<Contact> getContactsToOtherCell(GridCell)
+ boolean hasContactToAtom(Point3d[],Point3d[],Point3d,double)
+ String toString()
}
class org.biojava.nbio.structure.io.sifts.SiftsResidue {
- {static} long serialVersionUID
~ String pdbResNum
~ String pdbResName
~ String chainId
~ String uniProtResName
~ Integer uniProtPos
~ Integer naturalPos
~ String seqResName
~ String pdbId
~ String uniProtAccessionId
~ Boolean notObserved
+ String getPdbResNum()
+ void setPdbResNum(String)
+ String getPdbResName()
+ void setPdbResName(String)
+ String getChainId()
+ void setChainId(String)
+ String getUniProtResName()
+ void setUniProtResName(String)
+ Integer getUniProtPos()
+ void setUniProtPos(Integer)
+ void setPdbId(String)
+ String getPdbId()
+ void setUniProtAccessionId(String)
+ String getUniProtAccessionId()
+ Integer getNaturalPos()
+ void setNaturalPos(Integer)
+ Boolean getNotObserved()
+ void setNotObserved(Boolean)
+ String getSeqResName()
+ void setSeqResName(String)
+ String toString()
+ int hashCode()
+ boolean equals(Object)
}
class org.biojava.nbio.structure.symmetry.geometry.Prism {
- int n
- double circumscribedRadius
- double height
+ double getHeight()
+ void setHeight(double)
+ double getCirumscribedRadius()
+ void setCirumscribedRadius(double)
+ double getInscribedRadius()
+ void setInscribedRadius(double)
+ Point3d[] getVertices()
+ List<int[]> getLineLoops()
+ {static} Point3d[] getPolygonVertices(int,double,Point3d)
+ int getViewCount()
+ String getViewName(int)
+ Matrix3d getViewMatrix(int)
- {static} double getSideLengthFromInscribedRadius(double,int)
- {static} double getInscribedRadiusFromSideLength(double,int)
- {static} double getSideLengthFromCircumscribedRadius(double,int)
- {static} double getCircumscribedRadiusFromSideLength(double,int)
- {static} Matrix3d flipX()
}
class org.biojava.nbio.structure.align.xml.PdbPairXMLConverter {
+ {static} String DEFAULT_METHOD_NAME
+ {static} PdbPairsMessage convertXMLtoPairs(String)
+ {static} String convertPairsToXML(SortedSet<PdbPair>,String)
}
class org.biojava.nbio.structure.StructureImpl {
- {static} long serialVersionUID
- {static} Logger logger
- String pdb_id
- List<Model> models
- List<EntityInfo> entityInfos
- List<DBRef> dbrefs
- List<Bond> ssbonds
- List<Site> sites
- String name
- StructureIdentifier structureIdentifier
- PDBHeader pdbHeader
- Long id
- boolean biologicalAssembly
+ Long getId()
+ void setId(Long)
+ Structure clone()
+ Group findGroup(String,String,int)
+ Group findGroup(String,String)
+ Chain findChain(String,int)
+ Chain findChain(String)
+ void setPDBCode(String)
+ String getPDBCode()
+ void setName(String)
+ String getName()
+ StructureIdentifier getStructureIdentifier()
+ void setStructureIdentifier(StructureIdentifier)
+ void addChain(Chain)
+ void addChain(Chain,int)
+ Chain getChainByIndex(int)
+ Chain getChainByIndex(int,int)
+ void addModel(List<Chain>)
+ void setChains(List<Chain>)
+ void setModel(int,List<Chain>)
+ String toString()
+ int size()
+ int size(int)
+ int nrModels()
+ boolean isCrystallographic()
+ boolean isNmr()
+ List<Chain> getChains(int)
+ List<Chain> getChains()
+ List<Chain> getPolyChains()
+ List<Chain> getPolyChains(int)
+ List<Chain> getNonPolyChains()
+ List<Chain> getNonPolyChains(int)
+ List<Chain> getWaterChains()
+ List<Chain> getWaterChains(int)
+ void setChains(int,List<Chain>)
+ List<Chain> getModel(int)
+ Chain getChainByPDB(String,int)
+ Chain getChain(String,int)
+ Chain getChain(String)
+ Chain getChainByPDB(String)
+ Chain getPolyChain(String)
+ Chain getPolyChain(String,int)
+ Chain getNonPolyChain(String)
+ Chain getNonPolyChain(String,int)
+ Chain getPolyChainByPDB(String)
+ Chain getPolyChainByPDB(String,int)
+ List<Chain> getNonPolyChainsByPDB(String)
+ List<Chain> getNonPolyChainsByPDB(String,int)
+ Chain getWaterChain(String)
+ Chain getWaterChain(String,int)
+ Chain getWaterChainByPDB(String)
+ Chain getWaterChainByPDB(String,int)
+ String toPDB()
+ String toMMCIF()
+ boolean hasChain(String)
+ boolean hasNonPolyChain(String)
+ boolean hasPdbChain(String)
+ void setEntityInfos(List<EntityInfo>)
+ void addEntityInfo(EntityInfo)
+ List<EntityInfo> getEntityInfos()
+ EntityInfo getCompoundById(int)
+ EntityInfo getEntityById(int)
+ List<DBRef> getDBRefs()
+ void setDBRefs(List<DBRef>)
+ PDBHeader getPDBHeader()
+ void setPDBHeader(PDBHeader)
+ List<Bond> getSSBonds()
+ void setSSBonds(List<Bond>)
+ void addSSBond(Bond)
+ boolean hasJournalArticle()
+ JournalArticle getJournalArticle()
+ void setJournalArticle(JournalArticle)
+ List<Site> getSites()
+ void setSites(List<Site>)
+ void setBiologicalAssembly(boolean)
+ boolean isBiologicalAssembly()
+ void setCrystallographicInfo(PDBCrystallographicInfo)
+ PDBCrystallographicInfo getCrystallographicInfo()
+ String getIdentifier()
+ String getPdbId()
+ void resetModels()
+ List<ResidueRange> getResidueRanges()
+ List<String> getRanges()
- SubstructureIdentifier toCanonical()
}
class org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools {
- {static} Character UNKNOWN_ONE_LETTER_CODE
- {static} Character UNKNOWN_NUCLEOTIDE
- {static} Map<String,Character> AMINO_ACID_LOOKUP_3TO1
- {static} Map<Character,String> AMINO_ACID_LOOKUP_1TO3
- {static} Map<String,Character> DNA_LOOKUP_2TO1
- {static} Map<Character,String> DNA_LOOKUP_1TO2
+ {static} Character getAminoOneLetter(String)
+ {static} Character getDNAOneLetter(String)
+ {static} String getAminoThreeLetter(Character)
+ {static} String getDNATwoLetter(Character)
+ {static} boolean isStandardChemComp(ChemComp)
- {static} boolean performRNACheck(ChemComp)
- {static} boolean performDNACheck(ChemComp)
- {static} boolean performPeptideCheck(ChemComp,String)
+ {static} Character getOneLetterCode(ChemComp,ChemicalComponentDictionary)
}
class org.biojava.nbio.structure.StructureTools {
- {static} Logger logger
+ {static} String CA_ATOM_NAME
+ {static} String N_ATOM_NAME
+ {static} String C_ATOM_NAME
+ {static} String O_ATOM_NAME
+ {static} String CB_ATOM_NAME
+ {static} String C1_ATOM_NAME
+ {static} String C2_ATOM_NAME
+ {static} String C3_ATOM_NAME
+ {static} String C4_ATOM_NAME
+ {static} String O2_ATOM_NAME
+ {static} String O3_ATOM_NAME
+ {static} String O4_ATOM_NAME
+ {static} String O5_ATOM_NAME
+ {static} String OP1_ATOM_NAME
+ {static} String OP2_ATOM_NAME
+ {static} String P_ATOM_NAME
+ {static} String NUCLEOTIDE_REPRESENTATIVE
+ {static} char UNKNOWN_GROUP_LABEL
+ {static} double RATIO_RESIDUES_TO_TOTAL
+ {static} double DEFAULT_LIGAND_PROXIMITY_CUTOFF
- {static} Map<String,Character> nucleotides30
- {static} Map<String,Character> nucleotides23
- {static} Map<String,Character> aminoAcids
- {static} Set<Element> hBondDonorAcceptors
+ {static} int getNrAtoms(Structure)
+ {static} int getNrGroups(Structure)
+ {static} Atom[] getAtomArray(Structure,String[])
+ {static} Atom[] getAtomArrayAllModels(Structure,String[])
+ {static} Atom[] getAllAtomArray(Structure)
+ {static} Atom[] getAllAtomArray(Structure,int)
+ {static} Atom[] getAllAtomArray(Chain)
+ {static} List<Group> getUnalignedGroups(Atom[])
+ {static} List<Group> getLigandsByProximity(Collection<Group>,Atom[],double)
+ {static} Chain addGroupToStructure(Structure,Group,int,Chain,boolean)
+ {static} void addGroupsToStructure(Structure,Collection<Group>,int,boolean)
+ {static} Set<Group> getAllGroupsFromSubset(Atom[])
+ {static} Set<Group> getAllGroupsFromSubset(Atom[],GroupType)
+ {static} Atom[] getAllNonHAtomArray(Structure,boolean)
+ {static} Atom[] getAllNonHAtomArray(Structure,boolean,int)
- {static} Atom[] getAllNonHAtomArray(Structure,boolean,AtomIterator)
+ {static} Atom[] getAllNonHAtomArray(Chain,boolean)
+ {static} Point3d[] getAllNonHCoordsArray(Chain,boolean)
- {static} void extractAtoms(String[],List<Chain>,List<Atom>)
+ {static} Atom[] getAtomArray(Chain,String[])
+ {static} Atom[] getAtomCAArray(Chain)
+ {static} Atom[] getRepresentativeAtomArray(Chain)
+ {static} Atom[] cloneAtomArray(Atom[])
+ {static} Group[] cloneGroups(Atom[])
+ {static} Atom[] duplicateCA2(Atom[])
+ {static} Atom[] getAtomCAArray(Structure)
+ {static} Atom[] getRepresentativeAtomArray(Structure)
+ {static} Atom[] getBackboneAtomArray(Structure)
+ {static} Character get1LetterCodeAmino(String)
+ {static} Character get1LetterCode(String)
+ {static} boolean isNucleotide(String)
+ {static} Structure getReducedStructure(Structure,String)
+ {static} String convertAtomsToSeq(Atom[])
+ {static} Group getGroupByPDBResidueNumber(Structure,ResidueNumber)
+ {static} AtomContactSet getAtomsInContact(Chain,String[],double)
+ {static} AtomContactSet getAtomsInContact(Chain,double)
+ {static} AtomContactSet getAtomsCAInContact(Chain,double)
+ {static} AtomContactSet getRepresentativeAtomsInContact(Chain,double)
+ {static} AtomContactSet getAtomsInContact(Chain,Chain,String[],double,boolean)
+ {static} AtomContactSet getAtomsInContact(Chain,Chain,double,boolean)
+ {static} Map<Group,Double> getGroupDistancesWithinShell(Structure,Atom,Set<ResidueNumber>,double,boolean,boolean)
+ {static} Set<Group> getGroupsWithinShell(Structure,Atom,Set<ResidueNumber>,double,boolean)
+ {static} Set<Group> getGroupsWithinShell(Structure,Group,double,boolean)
+ {static} Structure removeModels(Structure)
+ {static} List<Group> filterLigands(List<Group>)
+ {static} Structure getStructure(String)
+ {static} Structure getStructure(String,PDBFileParser,AtomCache)
+ {static} boolean isProtein(Chain)
+ {static} boolean isNucleicAcid(Chain)
+ {static} GroupType getPredominantGroupType(Chain)
+ {static} boolean isChainWaterOnly(Chain)
+ {static} boolean isChainPureNonPolymer(Chain)
+ {static} void cleanUpAltLocs(Structure)
+ {static} boolean hasNonDeuteratedEquiv(Atom,Group)
+ {static} boolean hasDeuteratedEquiv(Atom,Group)
- {static} String replaceFirstChar(String,char,char)
+ {static} void reduceToRepresentativeAtoms(Structure)
}
class org.biojava.nbio.structure.symmetry.utils.BlastClustReader {
- {static} long serialVersionUID
- {static} Logger logger
- int sequenceIdentity
- List<List<String>> clusters
- {static} String coreUrl
- {static} List<Integer> seqIdentities
+ List<List<String>> getPdbChainIdClusters()
+ Map<String,String> getRepresentatives(String)
+ String getRepresentativeChain(String,String)
+ int indexOf(String,String)
+ List<List<String>> getPdbChainIdClusters(String)
+ List<List<String>> getChainIdsInEntry(String)
- void loadClusters(int)
}
class org.biojava.nbio.structure.geometry.SuperPositionSVD {
+ Matrix4d superpose(Point3d[],Point3d[])
+ double getRmsd(Point3d[],Point3d[])
}
interface org.biojava.nbio.structure.Structure {
~ Structure clone()
~ String toString()
~ void setPDBCode(String)
~ String getPDBCode()
~ void setName(String)
~ String getName()
~ StructureIdentifier getStructureIdentifier()
~ void setStructureIdentifier(StructureIdentifier)
~ int size()
~ int size(int)
~ int nrModels()
~ boolean isNmr()
~ boolean isCrystallographic()
~ void addModel(List<Chain>)
~ void setModel(int,List<Chain>)
~ List<Chain> getModel(int)
~ List<Chain> getChains()
~ void setChains(List<Chain>)
~ List<Chain> getChains(int)
~ void setChains(int,List<Chain>)
~ List<Chain> getPolyChains()
~ List<Chain> getPolyChains(int)
~ List<Chain> getNonPolyChains()
~ List<Chain> getNonPolyChains(int)
~ List<Chain> getWaterChains()
~ List<Chain> getWaterChains(int)
~ void addChain(Chain)
~ void addChain(Chain,int)
~ Chain getChainByIndex(int)
~ Chain getChainByIndex(int,int)
~ Chain findChain(String)
~ Chain findChain(String,int)
~ boolean hasChain(String)
~ boolean hasNonPolyChain(String)
~ boolean hasPdbChain(String)
~ Group findGroup(String,String)
~ Group findGroup(String,String,int)
~ Chain getChainByPDB(String)
~ Chain getChainByPDB(String,int)
~ Chain getChain(String)
~ Chain getChain(String,int)
~ Chain getPolyChain(String)
~ Chain getPolyChain(String,int)
~ Chain getPolyChainByPDB(String)
~ Chain getPolyChainByPDB(String,int)
~ Chain getNonPolyChain(String)
~ Chain getNonPolyChain(String,int)
~ List<Chain> getNonPolyChainsByPDB(String)
~ List<Chain> getNonPolyChainsByPDB(String,int)
~ Chain getWaterChain(String)
~ Chain getWaterChain(String,int)
~ Chain getWaterChainByPDB(String)
~ Chain getWaterChainByPDB(String,int)
~ String toPDB()
~ String toMMCIF()
~ void setEntityInfos(List<EntityInfo>)
~ List<EntityInfo> getEntityInfos()
~ void addEntityInfo(EntityInfo)
~ void setDBRefs(List<DBRef>)
~ List<DBRef> getDBRefs()
~ EntityInfo getCompoundById(int)
~ EntityInfo getEntityById(int)
~ PDBHeader getPDBHeader()
~ boolean hasJournalArticle()
~ JournalArticle getJournalArticle()
~ void setJournalArticle(JournalArticle)
~ List<Bond> getSSBonds()
~ void setSSBonds(List<Bond>)
~ void addSSBond(Bond)
~ void setPDBHeader(PDBHeader)
~ Long getId()
~ void setId(Long)
~ void setSites(List<Site>)
~ List<Site> getSites()
~ void setBiologicalAssembly(boolean)
~ boolean isBiologicalAssembly()
~ void setCrystallographicInfo(PDBCrystallographicInfo)
~ PDBCrystallographicInfo getCrystallographicInfo()
~ void resetModels()
~ String getPdbId()
~ List<? extends ResidueRange> getResidueRanges()
~ List<String> getRanges()
~ String getIdentifier()
}
class org.biojava.nbio.structure.align.multiple.util.CoreSuperimposer {
- int reference
+ void superimpose(MultipleAlignment)
}
class org.biojava.nbio.structure.contact.Contact {
- {static} long serialVersionUID
- int i
- int j
- double distance
+ Pair<Integer> getIndexPair()
+ int getI()
+ int getJ()
+ double getDistance()
}
class org.biojava.nbio.structure.align.util.URLConnectionTools {
+ {static} int DEFAULT_CONNECTION_TIMEOUT
+ {static} URLConnection openURLConnection(URL,int)
+ {static} URLConnection openURLConnection(URL)
+ {static} InputStream getInputStream(URL,int)
+ {static} InputStream getInputStream(URL)
+ {static} InputStream getInputStream(URL,boolean,int)
+ {static} InputStream doPOST(URL,String)
+ {static} InputStream doPOST(URL,String,int)
}
class org.biojava.nbio.structure.symmetry.core.HelixLayers {
- List<Helix> helices
- double symmetryDeviation
+ int size()
+ void addHelix(Helix)
+ Helix getHelix(int)
+ Helix getByLowestAngle()
+ Helix getByLargestContacts()
+ Helix getByLargestContactsNotLowestAngle()
+ QuatSymmetryScores getScores()
+ void setSymmetryDeviation(double)
- double averageScores(double[])
- double minScores(double[])
- double maxScores(double[])
+ void clear()
+ String toString()
}
class org.biojava.nbio.structure.Site {
- {static} long serialVersionUID
- {static} String lineEnd
- String siteID
- List<Group> groups
- String evCode
- String description
+ String toString()
+ String toPDB()
+ void toPDB(StringBuffer)
+ void remark800toPDB(StringBuffer)
+ String remark800toPDB()
+ void setSiteID(String)
+ String getSiteID()
+ List<Group> getGroups()
+ void setGroups(List<Group>)
+ String getDescription()
+ void setDescription(String)
+ String getEvCode()
+ void setEvCode(String)
+ boolean equals(Object)
+ int hashCode()
+ int compareTo(Site)
}
class org.biojava.nbio.structure.contact.StructureInterface {
- {static} long serialVersionUID
- {static} Logger logger
- {static} double SELF_SCORE_FOR_ISOLOGOUS
- int id
- double totalArea
- AtomContactSet contacts
- GroupContactSet groupContacts
- Pair<Atom[]> molecules
- Pair<String> moleculeIds
- Pair<CrystalTransform> transforms
- Map<ResidueNumber,GroupAsa> groupAsas1
- Map<ResidueNumber,GroupAsa> groupAsas2
- StructureInterfaceCluster cluster
+ int getId()
+ void setId(int)
+ Pair<String> getCrystalIds()
+ double getTotalArea()
+ void setTotalArea(double)
+ AtomContactSet getContacts()
+ void setContacts(AtomContactSet)
+ Pair<Atom[]> getMolecules()
+ void setMolecules(Pair<Atom[]>)
+ Pair<String> getMoleculeIds()
+ void setMoleculeIds(Pair<String>)
+ Pair<CrystalTransform> getTransforms()
+ void setTransforms(Pair<CrystalTransform>)
~ void setAsas(double[],double[],int,int,int)
# Atom[] getFirstAtomsForAsa(int)
# Atom[] getSecondAtomsForAsa(int)
# Atom[] getAtomsForAsa(int)
- {static} Atom[] getAllNonHAtomArray(Atom[],int)
- {static} int getSizeNoH(Group)
- {static} boolean isInChain(Group)
+ boolean isSymRelated()
+ boolean isInfinite()
+ boolean isHomomeric()
+ Map<ResidueNumber,GroupAsa> getFirstGroupAsas()
+ GroupAsa getFirstGroupAsa(ResidueNumber)
+ void setFirstGroupAsa(GroupAsa)
~ void setFirstGroupAsas(Map<ResidueNumber,GroupAsa>)
~ void setSecondGroupAsas(Map<ResidueNumber,GroupAsa>)
+ Map<ResidueNumber,GroupAsa> getSecondGroupAsas()
+ void setSecondGroupAsa(GroupAsa)
+ GroupAsa getSecondGroupAsa(ResidueNumber)
+ Pair<List<Group>> getCoreResidues(double,double)
+ Pair<List<Group>> getRimResidues(double,double)
+ Pair<List<Group>> getInterfacingResidues(double)
+ Pair<List<Group>> getSurfaceResidues(double)
+ StructureInterfaceCluster getCluster()
+ void setCluster(StructureInterfaceCluster)
+ double getContactOverlapScore(StructureInterface,boolean)
+ GroupContactSet getGroupContacts()
+ boolean isIsologous()
+ Pair<Chain> getParentChains()
+ Pair<EntityInfo> getParentCompounds()
- Structure getParentStructure()
+ String toPDB()
+ String toMMCIF()
+ int compareTo(StructureInterface)
+ String toString()
}
interface org.biojava.nbio.structure.io.mmcif.ChemCompProvider {
~ ChemComp getChemComp(String)
}
class org.biojava.nbio.structure.xtal.CrystalCell {
- {static} long serialVersionUID
+ {static} double MIN_VALID_CELL_SIZE
- double a
- double b
- double c
- double alpha
- double beta
- double gamma
- double alphaRad
- double betaRad
- double gammaRad
- double volume
- double maxDimension
- Matrix3d M
- Matrix3d Minv
- Matrix3d Mtransp
- Matrix3d MtranspInv
+ double getA()
+ void setA(double)
+ double getB()
+ void setB(double)
+ double getC()
+ void setC(double)
+ double getAlpha()
+ void setAlpha(double)
+ double getBeta()
+ void setBeta(double)
+ double getGamma()
+ void setGamma(double)
+ double getVolume()
+ Point3i getCellIndices(Tuple3d)
+ void transfToOriginCell(Tuple3d)
+ void transfToOriginCell(Tuple3d[],Tuple3d)
+ Matrix4d[] transfToOriginCellOrthonormal(Matrix4d[],Tuple3d)
+ Matrix4d[] transfToOriginCellCrystal(Matrix4d[],Tuple3d)
+ Matrix4d transfToOrthonormal(Matrix4d)
+ void transfToOrthonormal(Tuple3d)
+ Matrix4d transfToCrystal(Matrix4d)
+ void transfToCrystal(Tuple3d)
- Matrix3d getMInv()
- double getAstar()
- double getBstar()
- double getCstar()
- double getCosAlphaStar()
- double getCosBetaStar()
- double getCosGammaStar()
- double getSinAlphaStar()
- double getSinBetaStar()
- double getSinGammaStar()
- Matrix3d getM()
+ Matrix3d getMTranspose()
- Matrix3d getMTransposeInv()
+ double getMaxDimension()
+ boolean checkScaleMatrixConsistency(Matrix4d)
+ boolean checkScaleMatrix(Matrix4d)
- boolean deltaComp(double,double)
+ boolean isCellReasonable()
+ String toString()
}
class org.biojava.nbio.structure.symmetry.core.QuatSymmetryScores {
- double minRmsd
- double maxRmsd
- double rmsd
- double minTm
- double maxTm
- double tm
- double rmsdCenters
- double rmsdIntra
- double tmIntra
- double symDeviation
+ double getMinRmsd()
+ void setMinRmsd(double)
+ double getMaxRmsd()
+ void setMaxRmsd(double)
+ double getRmsd()
+ void setRmsd(double)
+ double getMinTm()
+ void setMinTm(double)
+ double getMaxTm()
+ void setMaxTm(double)
+ double getTm()
+ void setTm(double)
+ double getRmsdCenters()
+ void setRmsdCenters(double)
+ double getRmsdIntra()
+ void setRmsdIntra(double)
+ double getTmIntra()
+ void setTmIntra(double)
+ double getSymDeviation()
+ void setSymDeviation(double)
+ String toString()
}
class org.biojava.nbio.structure.io.FileConvert {
- {static} Logger logger
- Structure structure
- boolean printConnections
+ {static} DecimalFormat d3
+ {static} DecimalFormat d2
- {static} String newline
+ boolean doPrintConnections()
+ void setPrintConnections(boolean)
- String printPDBConnections()
+ String toPDB()
- {static} void toPDB(Group,StringBuffer)
+ {static} String toPDB(Atom)
+ {static} String toPDB(Atom,String)
+ {static} String toPDB(Chain)
+ {static} String toPDB(Group)
+ {static} void toPDB(Atom,StringBuffer,String)
+ {static} void toPDB(Atom,StringBuffer)
- {static} boolean hasInsertionCode(String)
+ void toDASStructure(XMLWriter)
- {static} String formatAtomName(Atom)
+ String toMMCIF()
+ {static} String toMMCIF(Chain,String,String,boolean)
+ {static} String toMMCIF(Chain,boolean)
+ {static} String getAtomSiteHeader()
}
class org.biojava.nbio.structure.symmetry.misc.ProteinComplexSignature {
- BlastClustReader blastClust
- String pdbId
- List<String> chainIds
- List<ChainSignature> chainSignatures
+ String getComplexSignature()
+ String getCompositionId(String)
+ String getComplexStoichiometry()
+ int getSubunitTypeCount()
- List<ChainSignature> getChainSignatures()
}
class org.biojava.nbio.structure.align.seq.SmithWatermanUserArgumentProcessor {
+ StructureAlignment getAlgorithm()
+ Object getParameters()
+ String getDbSearchLegend()
# StartupParameters getStartupParametersInstance()
}
class org.biojava.nbio.structure.align.seq.SmithWatermanUserArgumentProcessor.SmithWatermanStartupParams {
- short gapOpen
- short gapExtend
- double maxRmsd
- int minLen
+ short getGapOpen()
+ void setGapOpen(short)
+ short getGapExtend()
+ void setGapExtend(short)
+ double getMaxRmsd()
+ void setMaxRmsd(double)
+ int getMinLen()
+ void setMinLen(int)
+ String toString()
}
class org.biojava.nbio.structure.domain.pdp.Segment {
- {static} long serialVersionUID
- Integer from
- Integer to
~ double score
+ String toString()
+ Integer getFrom()
+ void setFrom(Integer)
+ Integer getTo()
+ void setTo(Integer)
+ double getScore()
+ void setScore(double)
+ int compareTo(Segment)
}
class org.biojava.nbio.structure.contact.StructureInterfaceList {
- {static} Logger logger
+ {static} double DEFAULT_MINIMUM_INTERFACE_AREA
+ {static} int DEFAULT_ASA_SPHERE_POINTS
+ {static} int DEFAULT_MIN_COFACTOR_SIZE
+ {static} double DEFAULT_CONTACT_OVERLAP_SCORE_CLUSTER_CUTOFF
- {static} long serialVersionUID
- List<StructureInterface> list
- List<StructureInterfaceCluster> clusters
- List<StructureInterfaceCluster> clustersNcs
- Map<String,String> chainOrigNamesMap
+ void add(StructureInterface)
+ int size()
+ List<StructureInterface> getList()
+ StructureInterface get(int)
+ void calcAsas()
+ void calcAsas(int,int,int)
- boolean areMolecIdsSameOrder(String,String)
+ void sort()
+ List<StructureInterfaceCluster> getClustersNcs()
+ void addNcsEquivalent(StructureInterface,StructureInterface)
+ void setChainOrigNamesMap(Map<String,String>)
+ void removeInterfacesBelowArea()
+ void removeInterfacesBelowArea(double)
+ List<StructureInterfaceCluster> getClusters()
+ List<StructureInterfaceCluster> getClusters(double)
+ Iterator<StructureInterface> iterator()
+ String toString()
+ {static} StructureInterfaceList calculateInterfaces(Structure)
}
class org.biojava.nbio.structure.secstruc.SecStrucGroup {
- {static} long serialVersionUID
- Atom N
- Atom CA
- Atom C
- Atom O
- Atom H
- Group original
+ String toString()
+ Group getOriginal()
+ void setOriginal(Group)
+ Atom getC()
+ void setC(Atom)
+ Atom getCA()
+ void setCA(Atom)
+ Atom getH()
+ void setH(Atom)
+ Atom getN()
+ void setN(Atom)
+ Atom getO()
+ void setO(Atom)
}
abstract class org.biojava.nbio.structure.align.ce.AbstractUserArgumentProcessor {
+ {static} String newline
# StartupParameters params
+ {static} List<String> mandatoryArgs
# {abstract}StartupParameters getStartupParametersInstance()
+ {abstract}StructureAlignment getAlgorithm()
+ {abstract}Object getParameters()
+ {abstract}String getDbSearchLegend()
+ void process(String[])
+ {static} void printAboutMe()
- void runAlignPairs(AtomCache,String,String)
- void runPairwise()
- void checkWriteFile(AFPChain,Atom[],Atom[],boolean)
- String getAutoFileName(AFPChain)
- Structure getStructure(AtomCache,String,String)
- Structure fixStructureName(Structure,String)
+ String getDbSearchResult(AFPChain)
+ String printHelp()
}
class org.biojava.nbio.structure.secstruc.SecStrucInfo {
- {static} long serialVersionUID
+ {static} String PDB_AUTHOR_ASSIGNMENT
+ {static} String DSSP_ASSIGNMENT
+ {static} String BIOJAVA_ASSIGNMENT
# SecStrucType type
# String assignment
# Group parent
+ SecStrucType getType()
+ void setType(SecStrucType)
+ String getAssignment()
+ Group getGroup()
+ String toString()
+ int hashCode()
+ boolean equals(Object)
}
class org.biojava.nbio.structure.xtal.io.TreeMapSpaceGroupWrapper {
- {static} long serialVersionUID
- TreeMap<Integer,SpaceGroup> data
+ TreeMap<Integer,SpaceGroup> getData()
+ void setData(TreeMap<Integer,SpaceGroup>)
+ String toXML()
+ {static} TreeMapSpaceGroupWrapper fromXML(String)
}
class org.biojava.nbio.structure.align.fatcat.calc.FCAlignHelper {
~ int M
~ int N
~ double g
~ double h
~ double m
~ double[][] sij
~ char[][] trace
~ char[][] etrace
~ char[][] dtrace
~ int B1
~ int B2
~ int E1
~ int E2
~ double alignScore
~ double identity
~ double similarity
~ int[] sapp
~ int[] sapp0
~ int sappPos
~ int last
~ char[] seq1
~ char[] seq2
~ char[] aln1
~ char[] aln2
~ char[] mark
- void init(int,int,double,double)
- void doAlign()
- void trace(char,int,int)
- void del(int)
- void ins(int)
- void rep()
- void checkAlign()
- double checkScore()
+ int getAlignPos(int[][])
}
class org.biojava.nbio.structure.symmetry.internal.SymmetryAxes {
- List<Axis> axes
+ void addAxis(Matrix4d,int,SymmetryType)
- int[] getAxisCounts(int)
+ void updateAxis(Integer,Matrix4d)
+ List<Matrix4d> getElementaryAxes()
+ List<Axis> getElementaryAxesObjects()
+ List<List<Integer>> getRepeatRelation(int)
+ List<List<Integer>> getRepeatRelation(Axis)
+ List<List<Integer>> getRepeatRelation(int,int)
+ List<List<Integer>> getRepeatsCyclicForm(int,int)
+ List<List<Integer>> getRepeatsCyclicForm(Axis)
+ List<List<Integer>> getRepeatsCyclicForm(int)
+ String getRepeatsCyclicForm(Axis,List<?>)
+ {static} String getRepeatsCyclicForm(List<List<Integer>>,List<?>)
+ Matrix4d getRepeatTransform(int)
+ Matrix4d getRepeatTransform(int,int)
+ List<Axis> getSymmetryAxes()
- void getSymmetryAxes(List<Axis>,Matrix4d,int,int)
+ int getNumRepeats()
- int getNumRepeats(int)
+ List<Integer> getFirstRepeats(int)
+ Axis getElementaryAxis(int)
+ int getNumLevels()
}
class org.biojava.nbio.structure.symmetry.internal.SymmetryAxes.Axis {
- Matrix4d operator
- int order
- SymmetryType symmType
- int level
- int firstRepeat
- RotationAxis rotAxis
+ Matrix4d getOperator()
+ void setOperator(Matrix4d)
+ int getOrder()
+ SymmetryType getSymmType()
+ RotationAxis getRotationAxis()
+ int getLevel()
+ void setLevel(int)
+ int getFirstRepeat()
+ void setFirstRepeat(int)
}
class org.biojava.nbio.structure.align.seq.SmithWaterman3DParameters {
- short gapOpen
- short gapExtend
- double maxRmsd
- int minLen
+ List<String> getUserConfigHelp()
+ List<String> getUserConfigParameterNames()
+ List<String> getUserConfigParameters()
+ List<Class> getUserConfigTypes()
+ void reset()
+ Short getGapExtend()
+ void setGapExtend(Short)
+ Short getGapOpen()
+ void setGapOpen(Short)
+ Double getMaxRmsd()
+ void setMaxRmsd(Double)
+ Integer getMinLen()
+ void setMinLen(Integer)
}
class org.biojava.nbio.structure.cath.CathSegment {
+ {static} long serialVersionUID
~ Integer segmentId
~ String start
~ String stop
~ Integer length
~ String sequenceHeader
~ String sequence
+ Integer getSegmentId()
+ void setSegmentId(Integer)
+ String getStart()
+ void setStart(String)
+ String getStop()
+ void setStop(String)
+ Integer getLength()
+ void setLength(Integer)
+ String getSequenceHeader()
+ void setSequenceHeader(String)
+ String getSequence()
+ void setSequence(String)
+ String toString()
}
class org.biojava.nbio.structure.URLIdentifier {
- {static} long serialVersionUID
- {static} Logger logger
- {static} Pattern PDBID_REGEX
+ {static} String FORMAT_PARAM
+ {static} String PDBID_PARAM
+ {static} String CHAINID_PARAM
+ {static} String RESIDUES_PARAM
- URL url
+ URL getURL()
+ String getIdentifier()
+ SubstructureIdentifier toCanonical()
+ Structure reduce(Structure)
+ Structure loadStructure(AtomCache)
+ {static} String guessPDBID(String)
- {static} Map<String,String> parseQuery(URL)
}
interface org.biojava.nbio.structure.align.StructureAlignment {
+ AFPChain align(Atom[],Atom[])
+ AFPChain align(Atom[],Atom[],Object)
+ ConfigStrucAligParams getParameters()
+ void setParameters(ConfigStrucAligParams)
+ String getAlgorithmName()
+ String getVersion()
}
interface org.biojava.nbio.structure.align.multiple.MultipleAlignmentEnsemble {
+ MultipleAlignmentEnsemble clone()
+ String getAlgorithmName()
+ void setAlgorithmName(String)
+ String getVersion()
+ void setVersion(String)
+ List<StructureIdentifier> getStructureIdentifiers()
+ void setStructureIdentifiers(List<StructureIdentifier>)
+ List<Atom[]> getAtomArrays()
+ void setAtomArrays(List<Atom[]>)
+ List<Matrix> getDistanceMatrix()
+ List<MultipleAlignment> getMultipleAlignments()
+ MultipleAlignment getMultipleAlignment(int)
+ void setMultipleAlignments(List<MultipleAlignment>)
+ void addMultipleAlignment(MultipleAlignment)
+ int size()
+ Long getIoTime()
+ void setIoTime(Long)
+ Long getCalculationTime()
+ void setCalculationTime(Long)
+ void clear()
}
class org.biojava.nbio.structure.jama.LUDecomposition {
~ {static} long serialVersionUID
- double[][] LU
- int m
- int[] piv
+ boolean isNonsingular()
+ Matrix getL()
+ Matrix getU()
+ int[] getPivot()
+ double[] getDoublePivot()
+ double det()
+ Matrix solve(Matrix)
}
class org.biojava.nbio.structure.EntityInfo {
- {static} Logger logger
- {static} long serialVersionUID
- List<Chain> chains
- int molId
- Map<String,Map<ResidueNumber,Integer>> chains2pdbResNums2ResSerials
- String refChainId
- String description
- String title
- EntityType type
- List<String> synonyms
- List<String> ecNums
- String engineered
- String mutation
- String biologicalUnit
- String details
- String numRes
- String resNames
- String headerVars
- String synthetic
- String fragment
- String organismScientific
- String organismTaxId
- String organismCommon
- String strain
- String variant
- String cellLine
- String atcc
- String organ
- String tissue
- String cell
- String organelle
- String secretion
- String gene
- String cellularLocation
- String expressionSystem
- String expressionSystemTaxId
- String expressionSystemStrain
- String expressionSystemVariant
- String expressionSystemCellLine
- String expressionSystemAtccNumber
- String expressionSystemOrgan
- String expressionSystemTissue
- String expressionSystemCell
- String expressionSystemOrganelle
- String expressionSystemCellularLocation
- String expressionSystemVectorType
- String expressionSystemVector
- String expressionSystemPlasmid
- String expressionSystemGene
- String expressionSystemOtherDetails
- Long id
+ String toString()
+ Chain getRepresentative()
+ Long getId()
+ void setId(Long)
+ List<String> getChainIds()
+ int getAlignedResIndex(Group,Chain)
- void initResSerialsMap(Chain)
- ResidueNumber findResNumInOtherChains(int,Chain)
+ String getRefChainId()
+ void setRefChainId(String)
+ int getMolId()
+ void setMolId(int)
+ String getDescription()
+ void setDescription(String)
+ String getTitle()
+ void setTitle(String)
+ List<String> getSynonyms()
+ void setSynonyms(List<String>)
+ List<String> getEcNums()
+ void setEcNums(List<String>)
+ String getEngineered()
+ void setEngineered(String)
+ String getMutation()
+ void setMutation(String)
+ String getBiologicalUnit()
+ void setBiologicalUnit(String)
+ String getDetails()
+ void setDetails(String)
+ String getNumRes()
+ void setNumRes(String)
+ String getResNames()
+ void setResNames(String)
+ String getHeaderVars()
+ void setHeaderVars(String)
+ String getSynthetic()
+ void setSynthetic(String)
+ String getFragment()
+ void setFragment(String)
+ String getOrganismScientific()
+ void setOrganismScientific(String)
+ String getOrganismTaxId()
+ void setOrganismTaxId(String)
+ String getOrganismCommon()
+ void setOrganismCommon(String)
+ String getStrain()
+ void setStrain(String)
+ String getVariant()
+ void setVariant(String)
+ String getCellLine()
+ void setCellLine(String)
+ String getAtcc()
+ void setAtcc(String)
+ String getOrgan()
+ void setOrgan(String)
+ String getTissue()
+ void setTissue(String)
+ String getCell()
+ void setCell(String)
+ String getOrganelle()
+ void setOrganelle(String)
+ String getSecretion()
+ void setSecretion(String)
+ String getGene()
+ void setGene(String)
+ String getCellularLocation()
+ void setCellularLocation(String)
+ String getExpressionSystem()
+ String getExpressionSystemTaxId()
+ void setExpressionSystemTaxId(String)
+ void setExpressionSystem(String)
+ String getExpressionSystemStrain()
+ void setExpressionSystemStrain(String)
+ String getExpressionSystemVariant()
+ void setExpressionSystemVariant(String)
+ String getExpressionSystemCellLine()
+ void setExpressionSystemCellLine(String)
+ String getExpressionSystemAtccNumber()
+ void setExpressionSystemAtccNumber(String)
+ String getExpressionSystemOrgan()
+ void setExpressionSystemOrgan(String)
+ String getExpressionSystemTissue()
+ void setExpressionSystemTissue(String)
+ String getExpressionSystemCell()
+ void setExpressionSystemCell(String)
+ String getExpressionSystemOrganelle()
+ void setExpressionSystemOrganelle(String)
+ String getExpressionSystemCellularLocation()
+ void setExpressionSystemCellularLocation(String)
+ String getExpressionSystemVectorType()
+ void setExpressionSystemVectorType(String)
+ String getExpressionSystemVector()
+ void setExpressionSystemVector(String)
+ String getExpressionSystemPlasmid()
+ void setExpressionSystemPlasmid(String)
+ String getExpressionSystemGene()
+ void setExpressionSystemGene(String)
+ String getExpressionSystemOtherDetails()
+ void setExpressionSystemOtherDetails(String)
+ List<Chain> getChains()
- List<Chain> getFirstModelChains()
+ void addChain(Chain)
+ void setChains(List<Chain>)
+ EntityType getType()
+ void setType(EntityType)
}
class org.biojava.nbio.structure.align.xml.PdbPairsMessage {
~ String method
~ SortedSet<PdbPair> pairs
+ String getMethod()
+ void setMethod(String)
+ SortedSet<PdbPair> getPairs()
+ void setPairs(SortedSet<PdbPair>)
+ String toString()
}
abstract class org.biojava.nbio.structure.align.AbstractStructureAlignment {
+ {static} String newline
+ {abstract}AFPChain align(Atom[],Atom[])
+ {abstract}AFPChain align(Atom[],Atom[],Object)
+ {abstract}String getAlgorithmName()
+ {abstract}ConfigStrucAligParams getParameters()
+ {abstract}String getVersion()
+ {abstract}void setParameters(ConfigStrucAligParams)
}
class org.biojava.nbio.structure.align.fatcat.calc.SigEva {
~ double mu
~ double beta
~ double mu_a
~ double beta_a
~ double mu_b
~ double beta_b
+ void getPara(int,int)
- void calMu(int)
- void calBeta(int)
- int aveLen(int,int)
+ double calSigAll(FatCatParameters,AFPChain)
- double calSigAll(int,int,int,int,double,double,int,int)
- double sF(double)
- double cDF(double)
- double normScore(double,double,int,int)
+ double calNS(FatCatParameters,AFPChain)
- double calNS(int,int,double,double,int,int)
}
abstract class org.biojava.nbio.structure.geometry.SuperPositionAbstract {
# boolean centered
+ Matrix4d superposeAndTransform(Point3d[],Point3d[])
# void checkInput(Point3d[],Point3d[])
+ void setCentered(boolean)
}
class org.biojava.nbio.structure.align.util.CollectionTools {
+ {static} int[] toIntArray(Collection<Number>)
+ {static} double[] toDoubleArray(Collection<Number>)
+ {static} Object randomPick(Collection<Number>)
}
class org.biojava.nbio.structure.symmetry.core.QuatSymmetryResults {
- Structure structure
- Stoichiometry stoichiometry
- boolean local
- List<SubunitCluster> clusters
- List<Subunit> subunits
- SymmetryPerceptionMethod method
- HelixLayers helixLayers
- RotationGroup rotationGroup
+ boolean isSupersededBy(QuatSymmetryResults)
+ List<SubunitCluster> getSubunitClusters()
+ List<Subunit> getSubunits()
+ int getSubunitCount()
+ RotationGroup getRotationGroup()
+ HelixLayers getHelixLayers()
+ SymmetryPerceptionMethod getMethod()
+ String getSymmetry()
+ QuatSymmetryScores getScores()
+ Stoichiometry getStoichiometry()
+ boolean isPseudoStoichiometric()
+ boolean isLocal()
~ void setLocal(boolean)
+ Structure getStructure()
+ void setStructure(Structure)
+ String toString()
}
class org.biojava.nbio.structure.io.mmtf.MmtfStructureWriter {
- {static} Logger logger
- StructureAdapterInterface mmtfDecoderInterface
- void addBonds(Atom,List<Atom>,List<Atom>)
- void storeEntityInformation(List<Chain>,List<EntityInfo>)
- void storeBioassemblyInformation(Map<String,Integer>,Map<Integer,BioAssemblyInfo>)
}
interface org.biojava.nbio.structure.io.StructureProvider {
~ Structure getStructureById(String)
~ void setFileParsingParameters(FileParsingParameters)
~ FileParsingParameters getFileParsingParameters()
}
class org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser {
+ {static} String MMCIF_TOP_HEADER
+ {static} String COMMENT_CHAR
+ {static} String LOOP_START
+ {static} String FIELD_LINE
- {static} char S1
- {static} char S2
+ {static} String STRING_LIMIT
- List<MMcifConsumer> consumers
- Struct struct
- {static} Logger logger
+ void addMMcifConsumer(MMcifConsumer)
+ void clearConsumers()
+ void removeMMcifConsumer(MMcifConsumer)
+ {static} void main(String[])
+ void parse(InputStream)
+ void parse(BufferedReader)
- void resetBuffers(List<String>,List<String>,Set<String>)
- List<String> processSingleLine(String)
- List<String> processLine(String,BufferedReader,int)
- void endLineChecks(String,List<String>,List<String>,Set<String>)
+ void triggerNewPdbxStructOper(PdbxStructOperList)
+ void triggerNewStructNcsOper(StructNcsOper)
+ void triggerNewAtomSites(AtomSites)
- Object buildObject(String,List<String>,List<String>,Set<String>)
- void produceWarning(String,String,Class<?>,Set<String>)
+ void triggerGeneric(String,List<String>,List<String>)
+ void triggerNewEntity(Entity)
+ void triggerNewEntityPoly(EntityPoly)
+ void triggerNewEntityPolySeq(EntityPolySeq)
+ void triggerNewEntitySrcGen(EntitySrcGen)
+ void triggerNewEntitySrcNat(EntitySrcNat)
+ void triggerNewEntitySrcSyn(EntitySrcSyn)
+ void triggerNewChemComp(ChemComp)
+ void triggerNewStructAsym(StructAsym)
- void triggerStructData(Struct)
- void triggerNewAtomSite(AtomSite)
- void triggerNewAuditAuthor(AuditAuthor)
- void triggerNewPdbxAuditRevisionHistory(PdbxAuditRevisionHistory)
- void triggerNewPdbxDatabaseStatus(PdbxDatabaseStatus)
- void triggerNewDatabasePDBrev(DatabasePDBrev)
- void triggerNewDatabasePDBrevRecord(DatabasePdbrevRecord)
- void triggerNewDatabasePDBremark(DatabasePDBremark)
- void triggerExptl(Exptl)
- void triggerNewCell(Cell)
- void triggerNewSymmetry(Symmetry)
- void triggerNewStrucRef(StructRef)
- void triggerNewStrucRefSeq(StructRefSeq)
- void triggerNewStrucRefSeqDif(StructRefSeqDif)
- void triggerNewPdbxPolySeqScheme(PdbxPolySeqScheme)
- void triggerNewPdbxNonPolyScheme(PdbxNonPolyScheme)
+ void triggerNewPdbxEntityNonPoly(PdbxEntityNonPoly)
+ void triggerNewStructKeywords(StructKeywords)
+ void triggerNewRefine(Refine)
+ void triggerDocumentStart()
+ void triggerDocumentEnd()
+ void triggerNewChemCompDescriptor(ChemCompDescriptor)
- void triggerNewPdbxStructAssembly(PdbxStructAssembly)
- void triggerNewPdbxStructAssemblyGen(PdbxStructAssemblyGen)
- void triggerNewChemCompAtom(ChemCompAtom)
- void triggerNewChemCompBond(ChemCompBond)
- void triggerNewPdbxChemCompIdentifier(PdbxChemCompIdentifier)
- void triggerNewPdbxChemCompDescriptor(PdbxChemCompDescriptor)
- void triggerNewStructConn(StructConn)
- void triggerNewStructSiteGen(StructSiteGen)
- void triggerNewStructSite(StructSite)
}
class org.biojava.nbio.structure.align.ce.CeCPUserArgumentProcessor {
# StartupParameters getStartupParametersInstance()
+ StructureAlignment getAlgorithm()
+ Object getParameters()
}
class org.biojava.nbio.structure.align.ce.CeCPUserArgumentProcessor.CeCPStartupParams {
# DuplicationHint duplicationHint
# Integer minCPLength
+ DuplicationHint getDuplicationHint()
+ void setDuplicationHint(DuplicationHint)
+ Integer getMinCPLength()
+ void setMinCPLength(Integer)
+ String toString()
}
class org.biojava.nbio.structure.scop.ScopNode {
- {static} long serialVersionUID
~ int sunid
~ int parentSunid
~ List<Integer> children
+ String toString()
+ int getSunid()
+ void setSunid(int)
+ int getParentSunid()
+ void setParentSunid(int)
+ List<Integer> getChildren()
+ void setChildren(List<Integer>)
}
interface org.biojava.nbio.structure.align.multiple.Block {
+ Block clone()
+ void setBlockSet(BlockSet)
+ BlockSet getBlockSet()
+ List<List<Integer>> getAlignRes()
+ void setAlignRes(List<List<Integer>>)
+ int length()
+ int size()
+ int getCoreLength()
+ List<Integer> getAlignResCounts()
+ int getStartIndex(int)
+ int getStartResidue(int)
+ int getFinalIndex(int)
+ int getFinalResidue(int)
+ void clear()
}
class org.biojava.nbio.structure.align.util.AFPChainScorer {
- {static} Logger logger
+ {static} double getTMScore(AFPChain,Atom[],Atom[])
+ {static} double getTMScore(AFPChain,Atom[],Atom[],boolean)
- {static} Object resizeArray(Object,int)
}
class org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssemblyGen {
- {static} long serialVersionUID
~ String assembly_id
~ String oper_expression
~ String asym_id_list
+ String getAssembly_id()
+ void setAssembly_id(String)
+ String getOper_expression()
+ void setOper_expression(String)
+ String getAsym_id_list()
+ void setAsym_id_list(String)
+ String toString()
}
class org.biojava.nbio.structure.symmetry.misc.ChainSignature {
- int chainCount
- String representative
- String compositionId
- List<String> chainIds
+ String getRepresentative()
+ List<String> getChainIds()
+ String getCompositionId()
+ void setCompositionId(String)
+ boolean equals(Object)
+ int compareTo(ChainSignature)
+ int hashCode()
+ String toString()
}
class org.biojava.nbio.structure.io.StructureSequenceMatcher {
- {static} Logger logger
+ {static} Structure getSubstructureMatchingProteinSequence(ProteinSequence,Structure)
+ {static} ProteinSequence getProteinSequenceForStructure(Structure,Map<Integer,Group>)
+ {static} ResidueNumber[] matchSequenceToStructure(ProteinSequence,Structure)
+ {static} ProteinSequence removeGaps(ProteinSequence)
+ {static} T[][] removeGaps(T[][])
}
class org.biojava.nbio.structure.align.util.ResourceManager {
- String BUNDLE_NAME
- ResourceBundle RESOURCE_BUNDLE
+ {static} ResourceManager getResourceManager(String)
+ String getString(String)
}
class org.biojava.nbio.structure.io.mmcif.model.AtomSites {
~ String entry_id
~ String Cartn_transform_axes
~ String fract_transf_matrix11
~ String fract_transf_matrix12
~ String fract_transf_matrix13
~ String fract_transf_matrix21
~ String fract_transf_matrix22
~ String fract_transf_matrix23
~ String fract_transf_matrix31
~ String fract_transf_matrix32
~ String fract_transf_matrix33
~ String fract_transf_vector1
~ String fract_transf_vector2
~ String fract_transf_vector3
~ String Cartn_transf_matrix11
~ String Cartn_transf_matrix12
~ String Cartn_transf_matrix13
~ String Cartn_transf_matrix21
~ String Cartn_transf_matrix22
~ String Cartn_transf_matrix23
~ String Cartn_transf_matrix31
~ String Cartn_transf_matrix32
~ String Cartn_transf_matrix33
~ String Cartn_transf_vector1
~ String Cartn_transf_vector2
~ String Cartn_transf_vector3
+ String getEntry_id()
+ void setEntry_id(String)
+ String getCartn_transform_axes()
+ void setCartn_transform_axes(String)
+ String getFract_transf_matrix11()
+ void setFract_transf_matrix11(String)
+ String getFract_transf_matrix12()
+ void setFract_transf_matrix12(String)
+ String getFract_transf_matrix13()
+ void setFract_transf_matrix13(String)
+ String getFract_transf_matrix21()
+ void setFract_transf_matrix21(String)
+ String getFract_transf_matrix22()
+ void setFract_transf_matrix22(String)
+ String getFract_transf_matrix23()
+ void setFract_transf_matrix23(String)
+ String getFract_transf_matrix31()
+ void setFract_transf_matrix31(String)
+ String getFract_transf_matrix32()
+ void setFract_transf_matrix32(String)
+ String getFract_transf_matrix33()
+ void setFract_transf_matrix33(String)
+ String getFract_transf_vector1()
+ void setFract_transf_vector1(String)
+ String getFract_transf_vector2()
+ void setFract_transf_vector2(String)
+ String getFract_transf_vector3()
+ void setFract_transf_vector3(String)
+ String getCartn_transf_matrix11()
+ void setCartn_transf_matrix11(String)
+ String getCartn_transf_matrix12()
+ void setCartn_transf_matrix12(String)
+ String getCartn_transf_matrix13()
+ void setCartn_transf_matrix13(String)
+ String getCartn_transf_matrix21()
+ void setCartn_transf_matrix21(String)
+ String getCartn_transf_matrix22()
+ void setCartn_transf_matrix22(String)
+ String getCartn_transf_matrix23()
+ void setCartn_transf_matrix23(String)
+ String getCartn_transf_matrix31()
+ void setCartn_transf_matrix31(String)
+ String getCartn_transf_matrix32()
+ void setCartn_transf_matrix32(String)
+ String getCartn_transf_matrix33()
+ void setCartn_transf_matrix33(String)
+ String getCartn_transf_vector1()
+ void setCartn_transf_vector1(String)
+ String getCartn_transf_vector2()
+ void setCartn_transf_vector2(String)
+ String getCartn_transf_vector3()
+ void setCartn_transf_vector3(String)
}
abstract class org.biojava.nbio.structure.align.multiple.AbstractScoresCache {
- Map<String,Double> scores
+ void putScore(String,Double)
+ Double getScore(String)
+ Set<String> getScores()
# Object clone(Object)
+ void clear()
}
class org.biojava.nbio.structure.io.mmcif.model.ChemCompBond {
- {static} long serialVersionUID
- {static} Logger logger
~ String comp_id
~ String atom_id_1
~ String atom_id_2
~ String value_order
~ String pdbx_aromatic_flag
~ String pdbx_stereo_config
~ String pdbx_ordinal
+ String getComp_id()
+ void setComp_id(String)
+ String getAtom_id_1()
+ void setAtom_id_1(String)
+ String getAtom_id_2()
+ void setAtom_id_2(String)
+ String getValue_order()
+ void setValue_order(String)
+ String getPdbx_aromatic_flag()
+ void setPdbx_aromatic_flag(String)
+ String getPdbx_stereo_config()
+ void setPdbx_stereo_config(String)
+ String getPdbx_ordinal()
+ void setPdbx_ordinal(String)
+ int getNumericalBondOrder()
}
class org.biojava.nbio.structure.align.StructureAlignmentFactory {
- {static} Logger logger
- {static} List<StructureAlignment> algorithms
+ {static} void addAlgorithm(StructureAlignment)
+ {static} boolean removeAlgorithm(String)
+ {static} void clearAlgorithms()
+ {static} StructureAlignment getAlgorithm(String)
+ {static} StructureAlignment[] getAllAlgorithms()
+ {static} String[] getAllAlgorithmNames()
}
interface org.biojava.nbio.structure.io.cif.CifFileSupplier {
~ CifFile get(S)
}
class org.biojava.nbio.structure.domain.pdp.PDPDistanceMatrix {
~ int[][] dist
~ int nclose
~ int[] iclose
~ int[] jclose
+ int[][] getDist()
+ void setDist(int[][])
+ int getNclose()
+ void setNclose(int)
+ int[] getIclose()
+ void setIclose(int[])
+ int[] getJclose()
+ void setJclose(int[])
}
class org.biojava.nbio.structure.geometry.SuperPositionQCP {
- {static} Logger logger
- double evec_prec
- double eval_prec
- Point3d[] x
- Point3d[] y
- double[] weight
- double wsum
- Point3d[] xref
- Point3d[] yref
- Point3d xtrans
- Point3d ytrans
- double e0
- Matrix3d rotmat
- Matrix4d transformation
- double rmsd
- double Sxy
- double SxxpSyy
- double SxxmSyy
- double Syy
- boolean rmsdCalculated
- boolean transformationCalculated
- boolean centered
- void set(Point3d[],Point3d[])
- void set(Point3d[],Point3d[],double[])
- double getRmsd()
+ Matrix4d weightedSuperpose(Point3d[],Point3d[],double[])
- Matrix3d getRotationMatrix()
- void calcRmsd(Point3d[],Point3d[])
- void calcTransformation()
- void innerProduct(Point3d[],Point3d[])
- int calcRmsd(double)
- int calcRotationMatrix()
+ double getRmsd(Point3d[],Point3d[])
+ Matrix4d superpose(Point3d[],Point3d[])
+ double getWeightedRmsd(Point3d[],Point3d[],double[])
+ Matrix4d superposeAfterRmsd()
}
class org.biojava.nbio.structure.io.mmcif.model.StructKeywords {
~ String entry_id
~ String pdbx_keywords
~ String text
+ String getEntry_id()
+ void setEntry_id(String)
+ String getPdbx_keywords()
+ void setPdbx_keywords(String)
+ String getText()
+ void setText(String)
}
class org.biojava.nbio.structure.StructureException {
+ {static} long serialVersionUID
}
interface org.biojava.nbio.structure.align.multiple.ScoresCache {
+ void putScore(String,Double)
+ Double getScore(String)
+ Set<String> getScores()
}


org.biojava.nbio.structure.ResidueRangeAndLength <|-- org.biojava.nbio.structure.AugmentedResidueRange
org.biojava.nbio.structure.io.LocalPDBDirectory <|-- org.biojava.nbio.structure.io.BcifFileReader
java.util.Comparator <|.. org.biojava.nbio.structure.align.helper.IdxComparator
java.io.Serializable <|.. org.biojava.nbio.structure.align.helper.IdxComparator
java.io.Serializable <|.. org.biojava.nbio.structure.xtal.SpaceGroup
org.biojava.nbio.structure.io.mmcif.model.AbstractBean <|-- org.biojava.nbio.structure.io.mmcif.model.StructConn
java.io.Serializable <|-- org.biojava.nbio.structure.Bond
javax.xml.bind.annotation.adapters.XmlAdapter <|-- org.biojava.nbio.structure.xtal.io.SpaceGroupMapAdapter
org.biojava.nbio.structure.PDBRecord <|.. org.biojava.nbio.structure.DBRef
org.rcsb.mmtf.api.StructureAdapterInterface <|.. org.biojava.nbio.structure.io.mmtf.MmtfStructureReader
java.io.Serializable <|.. org.biojava.nbio.structure.io.mmtf.MmtfStructureReader
org.biojava.nbio.structure.align.client.Comparable <|.. org.biojava.nbio.structure.align.client.PdbPair
java.io.Serializable <|.. org.biojava.nbio.structure.contact.GroupContactSet
org.biojava.nbio.structure.contact.Iterable <|.. org.biojava.nbio.structure.contact.GroupContactSet
java.io.Serializable <|.. org.biojava.nbio.structure.scop.ScopDescription
org.biojava.nbio.structure.scop.Cloneable <|.. org.biojava.nbio.structure.scop.ScopDescription
java.io.Serializable <|.. org.biojava.nbio.structure.io.mmcif.model.ChemCompAtom
org.biojava.nbio.structure.io.cif.CifFileConsumer <|.. org.biojava.nbio.structure.io.cif.CifFileConsumerImpl
java.util.Comparator <|.. org.biojava.nbio.structure.align.pairwise.JointFragmentsComparator
java.io.Serializable <|.. org.biojava.nbio.structure.align.pairwise.JointFragmentsComparator
java.util.Iterator <|.. org.biojava.nbio.structure.GroupIterator
java.io.Serializable <|.. org.biojava.nbio.structure.io.mmcif.model.PdbxStructOperList
org.biojava.nbio.structure.align.helper.IndexPair <|-- org.biojava.nbio.structure.align.helper.AligMatEl
java.io.Serializable <|-- org.biojava.nbio.structure.StructureIdentifier
org.biojava.nbio.structure.align.StructureAlignment <|.. org.biojava.nbio.structure.align.ce.CeSideChainMain
org.biojava.nbio.structure.align.ce.CeMain <|-- org.biojava.nbio.structure.align.ce.CeSideChainMain
java.io.Serializable <|.. org.biojava.nbio.structure.secstruc.HBond
javax.xml.bind.annotation.adapters.XmlAdapter <|-- org.biojava.nbio.structure.xtal.io.TransfAlgebraicAdapter
org.biojava.nbio.structure.ecod.EcodDatabase <|.. org.biojava.nbio.structure.ecod.EcodInstallation
org.biojava.nbio.structure.ecod.EcodInstallation +.. org.biojava.nbio.structure.ecod.EcodInstallation.EcodParser
org.biojava.nbio.structure.PDBStatus +.. org.biojava.nbio.structure.PDBStatus.PDBStatusXMLHandler
org.biojava.nbio.structure.DefaultHandler <|-- org.biojava.nbio.structure.PDBStatus.PDBStatusXMLHandler
org.biojava.nbio.structure.io.mmcif.model.AbstractBean <|-- org.biojava.nbio.structure.io.mmcif.model.PdbxDatabaseStatus
java.io.Serializable <|.. org.biojava.nbio.structure.align.multiple.BlockSetImpl
org.biojava.nbio.structure.align.multiple.BlockSet <|.. org.biojava.nbio.structure.align.multiple.BlockSetImpl
org.biojava.nbio.structure.align.multiple.Cloneable <|.. org.biojava.nbio.structure.align.multiple.BlockSetImpl
org.biojava.nbio.structure.align.multiple.AbstractScoresCache <|-- org.biojava.nbio.structure.align.multiple.BlockSetImpl
org.biojava.nbio.structure.scop.RuntimeException <|-- org.biojava.nbio.structure.scop.ScopIOException
org.biojava.nbio.structure.align.ce.ConfigStrucAligParams <|.. org.biojava.nbio.structure.align.fatcat.calc.FatCatParameters
org.biojava.nbio.structure.io.mmcif.model.AbstractBean <|-- org.biojava.nbio.structure.io.mmcif.model.Symmetry
org.biojava.nbio.structure.io.LocalPDBDirectory <|-- org.biojava.nbio.structure.io.MMCIFFileReader
org.biojava.nbio.structure.symmetry.geometry.Polyhedron <|.. org.biojava.nbio.structure.symmetry.geometry.RectangularPrism
org.biojava.nbio.structure.secstruc.SecStrucInfo <|-- org.biojava.nbio.structure.secstruc.SecStrucState
org.biojava.nbio.structure.symmetry.internal.Exception <|-- org.biojava.nbio.structure.symmetry.internal.RefinerFailedException
org.biojava.nbio.structure.scop.ScopInstallation <|-- org.biojava.nbio.structure.scop.BerkeleyScopInstallation
org.biojava.nbio.structure.scop.BerkeleyScopInstallation +.. org.biojava.nbio.structure.scop.BerkeleyScopInstallation.BerkeleyScopMirror
org.biojava.nbio.structure.scop.ScopMirror <|-- org.biojava.nbio.structure.scop.BerkeleyScopInstallation.BerkeleyScopMirror
org.biojava.nbio.structure.align.StructureAlignment <|.. org.biojava.nbio.structure.align.seq.SmithWaterman3Daligner
org.biojava.nbio.structure.align.AbstractStructureAlignment <|-- org.biojava.nbio.structure.align.seq.SmithWaterman3Daligner
org.biojava.nbio.structure.align.ce.ConfigStrucAligParams <|.. org.biojava.nbio.structure.align.ce.CeParameters
java.io.Serializable <|.. org.biojava.nbio.structure.contact.StructureInterfaceCluster
org.biojava.nbio.structure.align.pairwise.Alignable <|.. org.biojava.nbio.structure.align.pairwise.StrCompAlignment
org.biojava.nbio.structure.align.ce.CeParameters <|-- org.biojava.nbio.structure.symmetry.internal.CESymmParameters
java.io.Serializable <|.. org.biojava.nbio.structure.align.model.AFP
org.biojava.nbio.structure.symmetry.internal.OrderDetector <|.. org.biojava.nbio.structure.symmetry.internal.AngleOrderDetectorPlus
org.biojava.nbio.structure.Group <|.. org.biojava.nbio.structure.HetatomImpl
org.biojava.nbio.structure.HetatomImpl <|-- org.biojava.nbio.structure.NucleotideImpl
org.biojava.nbio.structure.io.mmcif.model.AbstractBean <|-- org.biojava.nbio.structure.io.mmcif.model.EntityPoly
org.biojava.nbio.structure.align.ce.AbstractUserArgumentProcessor <|-- org.biojava.nbio.structure.align.fatcat.FatCatUserArgumentProcessor
org.biojava.nbio.structure.align.fatcat.FatCatUserArgumentProcessor +.. org.biojava.nbio.structure.align.fatcat.FatCatUserArgumentProcessor.FatCatStartupParams
org.biojava.nbio.structure.align.fatcat.StartupParameters <|-- org.biojava.nbio.structure.align.fatcat.FatCatUserArgumentProcessor.FatCatStartupParams
org.biojava.nbio.structure.io.mmcif.ChemCompProvider <|.. org.biojava.nbio.structure.io.mmcif.ZipChemCompProvider
java.io.Serializable <|.. org.biojava.nbio.structure.io.mmcif.model.ChemComp
org.biojava.nbio.structure.io.mmcif.model.Comparable <|.. org.biojava.nbio.structure.io.mmcif.model.ChemComp
org.biojava.nbio.structure.align.ce.AbstractUserArgumentProcessor <|-- org.biojava.nbio.structure.align.ce.CeUserArgumentProcessor
org.biojava.nbio.structure.align.ce.CeUserArgumentProcessor +.. org.biojava.nbio.structure.align.ce.CeUserArgumentProcessor.CeStartupParams
org.biojava.nbio.structure.align.ce.StartupParameters <|-- org.biojava.nbio.structure.align.ce.CeUserArgumentProcessor.CeStartupParams
org.biojava.nbio.structure.align.StructureAlignment <|.. org.biojava.nbio.structure.align.fatcat.FatCatFlexible
org.biojava.nbio.structure.align.fatcat.FatCat <|-- org.biojava.nbio.structure.align.fatcat.FatCatFlexible
org.biojava.nbio.structure.io.StructureIOFile <|.. org.biojava.nbio.structure.io.LocalPDBDirectory
java.io.Serializable <|-- org.biojava.nbio.structure.Group
org.biojava.nbio.structure.scop.LocalScopDatabase <|.. org.biojava.nbio.structure.scop.ScopInstallation
java.io.Serializable <|.. org.biojava.nbio.structure.align.multiple.MultipleAlignmentImpl
org.biojava.nbio.structure.align.multiple.MultipleAlignment <|.. org.biojava.nbio.structure.align.multiple.MultipleAlignmentImpl
org.biojava.nbio.structure.align.multiple.Cloneable <|.. org.biojava.nbio.structure.align.multiple.MultipleAlignmentImpl
org.biojava.nbio.structure.align.multiple.AbstractScoresCache <|-- org.biojava.nbio.structure.align.multiple.MultipleAlignmentImpl
org.biojava.nbio.structure.io.StructureProvider <|.. org.biojava.nbio.structure.io.SandboxStyleStructureProvider
org.biojava.nbio.structure.jama.Cloneable <|.. org.biojava.nbio.structure.jama.Matrix
org.biojava.nbio.structure.jama.Serializable <|.. org.biojava.nbio.structure.jama.Matrix
org.biojava.nbio.structure.align.ce.ConfigStrucAligParams <|.. org.biojava.nbio.structure.align.multiple.mc.MultipleMcParameters
org.biojava.nbio.structure.cath.CathDatabase <|.. org.biojava.nbio.structure.cath.CathInstallation
org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils +.. org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord
org.biojava.nbio.structure.symmetry.core.Iterable <|.. org.biojava.nbio.structure.symmetry.core.PermutationGroup
org.biojava.nbio.structure.align.StructureAlignment <|.. org.biojava.nbio.structure.align.BioJavaStructureAlignment
org.biojava.nbio.structure.jama.Serializable <|.. org.biojava.nbio.structure.jama.CholeskyDecomposition
org.biojava.nbio.structure.align.ce.CeMain <|-- org.biojava.nbio.structure.align.ce.CeCPMain
org.biojava.nbio.structure.align.ce.CeCPMain +.. org.biojava.nbio.structure.align.ce.CeCPMain.ResiduePair
org.biojava.nbio.structure.align.ce.CeCPMain +.. org.biojava.nbio.structure.align.ce.CeCPMain.CPRange
org.biojava.nbio.structure.align.ce.CeCPMain +.. org.biojava.nbio.structure.align.ce.CeCPMain.CutPoint
org.biojava.nbio.structure.symmetry.internal.SymmetryRefiner <|.. org.biojava.nbio.structure.symmetry.internal.SequenceFunctionRefiner
org.biojava.nbio.structure.scop.ScopDatabase <|-- org.biojava.nbio.structure.scop.LocalScopDatabase
java.util.concurrent.Callable <|.. org.biojava.nbio.structure.align.multiple.mc.MultipleMcOptimizer
org.biojava.nbio.structure.symmetry.axis.AxisAligner <|-- org.biojava.nbio.structure.symmetry.axis.RotationAxisAligner
org.biojava.nbio.structure.align.pairwise.Serializable <|.. org.biojava.nbio.structure.align.pairwise.AlignmentResult
org.biojava.nbio.structure.io.mmcif.model.AbstractBean <|-- org.biojava.nbio.structure.io.mmcif.model.PdbxPolySeqScheme
java.io.Serializable <|.. org.biojava.nbio.structure.contact.BoundingBox
org.biojava.nbio.structure.contact.BoundingBox +.. org.biojava.nbio.structure.contact.BoundingBox.Bound
org.biojava.nbio.structure.contact.Comparable <|.. org.biojava.nbio.structure.contact.BoundingBox.Bound
java.io.Serializable <|.. org.biojava.nbio.structure.cath.CathFragment
org.biojava.nbio.structure.geometry.SuperPositionAbstract <|-- org.biojava.nbio.structure.geometry.SuperPositionQuat
java.io.Serializable <|.. org.biojava.nbio.structure.io.sifts.SiftsSegment
org.biojava.nbio.structure.io.mmcif.model.AbstractBean <|-- org.biojava.nbio.structure.io.mmcif.model.AtomSite
org.biojava.nbio.structure.io.mmcif.MMcifConsumer <|.. org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer
java.util.Comparator <|.. org.biojava.nbio.structure.align.pairwise.AltAligComparator
java.io.Serializable <|.. org.biojava.nbio.structure.align.pairwise.AltAligComparator
java.io.Serializable <|.. org.biojava.nbio.structure.contact.AtomContactSet
org.biojava.nbio.structure.contact.Iterable <|.. org.biojava.nbio.structure.contact.AtomContactSet
org.biojava.nbio.structure.io.mmcif.ChemCompProvider <|.. org.biojava.nbio.structure.io.mmcif.ReducedChemCompProvider
java.util.Iterator <|.. org.biojava.nbio.structure.AtomIterator
org.biojava.nbio.structure.jama.Serializable <|.. org.biojava.nbio.structure.jama.QRDecomposition
org.biojava.nbio.structure.AtomPositionMap +.. org.biojava.nbio.structure.AtomPositionMap.GroupMatcher
org.biojava.nbio.structure.AtomPositionMap +.. org.biojava.nbio.structure.AtomPositionMap.ValueComparator
org.biojava.nbio.structure.Comparator <|.. org.biojava.nbio.structure.AtomPositionMap.ValueComparator
org.biojava.nbio.structure.Serializable <|.. org.biojava.nbio.structure.AtomPositionMap.ValueComparator
org.biojava.nbio.structure.io.mmcif.model.AbstractBean <|-- org.biojava.nbio.structure.io.mmcif.model.EntityPolySeq
java.io.Serializable <|.. org.biojava.nbio.structure.contact.Pair
org.biojava.nbio.structure.symmetry.core.QuatSymmetrySolver <|.. org.biojava.nbio.structure.symmetry.core.RotationSolver
org.biojava.nbio.structure.AminoAcid <|.. org.biojava.nbio.structure.AminoAcidImpl
org.biojava.nbio.structure.HetatomImpl <|-- org.biojava.nbio.structure.AminoAcidImpl
org.biojava.nbio.structure.math.Iterable <|.. org.biojava.nbio.structure.math.SymbolTable
java.io.Serializable <|.. org.biojava.nbio.structure.math.SymbolTable
org.biojava.nbio.structure.io.mmcif.model.AbstractBean <|-- org.biojava.nbio.structure.io.mmcif.model.StructAsym
org.biojava.nbio.structure.symmetry.core.Iterable <|.. org.biojava.nbio.structure.symmetry.core.RotationGroup
java.io.Serializable <|.. org.biojava.nbio.structure.cath.CathNode
org.biojava.nbio.structure.symmetry.internal.OrderDetector <|.. org.biojava.nbio.structure.symmetry.internal.SequenceFunctionOrderDetector
org.biojava.nbio.structure.io.StructureProvider <|-- org.biojava.nbio.structure.io.StructureIOFile
java.io.Serializable <|-- org.biojava.nbio.structure.Chain
org.biojava.nbio.structure.align.util.Exception <|-- org.biojava.nbio.structure.align.util.ConfigurationException
org.biojava.nbio.structure.io.mmcif.model.AbstractBean <|-- org.biojava.nbio.structure.io.mmcif.model.Cell
org.biojava.nbio.structure.io.mmcif.ChemCompProvider <|.. org.biojava.nbio.structure.io.mmcif.AllChemCompProvider
org.biojava.nbio.structure.io.mmcif.Runnable <|.. org.biojava.nbio.structure.io.mmcif.AllChemCompProvider
org.biojava.nbio.structure.align.multiple.MultipleAlignmentEnsemble <|.. org.biojava.nbio.structure.align.multiple.MultipleAlignmentEnsembleImpl
java.io.Serializable <|.. org.biojava.nbio.structure.align.multiple.MultipleAlignmentEnsembleImpl
org.biojava.nbio.structure.align.multiple.Cloneable <|.. org.biojava.nbio.structure.align.multiple.MultipleAlignmentEnsembleImpl
org.biojava.nbio.structure.align.multiple.AbstractScoresCache <|-- org.biojava.nbio.structure.align.multiple.MultipleAlignmentEnsembleImpl
org.biojava.nbio.structure.Bond <|.. org.biojava.nbio.structure.BondImpl
org.biojava.nbio.structure.align.StructureAlignment <|.. org.biojava.nbio.structure.align.fatcat.FatCatRigid
org.biojava.nbio.structure.align.fatcat.FatCat <|-- org.biojava.nbio.structure.align.fatcat.FatCatRigid
java.io.Serializable <|.. org.biojava.nbio.structure.io.FileParsingParameters
java.util.Comparator <|.. org.biojava.nbio.structure.domain.pdp.SegmentComparator
java.io.Serializable <|.. org.biojava.nbio.structure.domain.pdp.SegmentComparator
org.biojava.nbio.structure.jama.Serializable <|.. org.biojava.nbio.structure.jama.SingularValueDecomposition
org.biojava.nbio.structure.StructureIdentifier <|.. org.biojava.nbio.structure.PassthroughIdentifier
org.biojava.nbio.structure.io.mmcif.model.AbstractBean <|-- org.biojava.nbio.structure.io.mmcif.model.PdbxAuditRevisionHistory
java.io.Serializable <|.. org.biojava.nbio.structure.JournalArticle
org.biojava.nbio.structure.io.cif.CifFileSupplier <|.. org.biojava.nbio.structure.io.cif.CifFileSupplierImpl
org.biojava.nbio.structure.io.cif.CifFileSupplierImpl +.. org.biojava.nbio.structure.io.cif.CifFileSupplierImpl.WrappedAtom
org.biojava.nbio.structure.io.cif.CifFileSupplierImpl +.. org.biojava.nbio.structure.io.cif.CifFileSupplierImpl.AtomSiteCollector
org.biojava.nbio.structure.io.cif.Consumer <|.. org.biojava.nbio.structure.io.cif.CifFileSupplierImpl.AtomSiteCollector
org.biojava.nbio.structure.io.PDBFileParser +.. org.biojava.nbio.structure.io.PDBFileParser.JournalParser
java.io.Serializable <|.. org.biojava.nbio.structure.quaternary.BioAssemblyInfo
java.io.Serializable <|.. org.biojava.nbio.structure.basepairs.BasePairParameters
java.io.Serializable <|.. org.biojava.nbio.structure.contact.GroupContact
org.biojava.nbio.structure.align.StructureAlignment <|.. org.biojava.nbio.structure.align.ce.CeMain
org.biojava.nbio.structure.align.AbstractStructureAlignment <|-- org.biojava.nbio.structure.align.ce.CeMain
org.biojava.nbio.structure.align.multiple.ScoresCache <|-- org.biojava.nbio.structure.align.multiple.MultipleAlignment
java.io.Serializable <|.. org.biojava.nbio.structure.align.multiple.BlockImpl
org.biojava.nbio.structure.align.multiple.Block <|.. org.biojava.nbio.structure.align.multiple.BlockImpl
org.biojava.nbio.structure.align.multiple.Cloneable <|.. org.biojava.nbio.structure.align.multiple.BlockImpl
org.biojava.nbio.structure.align.multiple.AbstractScoresCache <|-- org.biojava.nbio.structure.align.multiple.BlockImpl
org.biojava.nbio.structure.align.ce.CeParameters <|-- org.biojava.nbio.structure.align.ce.OptimalCECPParameters
org.biojava.nbio.structure.symmetry.core.QuatSymmetrySolver <|.. org.biojava.nbio.structure.symmetry.core.SystematicSolver
org.biojava.nbio.structure.Atom <|.. org.biojava.nbio.structure.AtomImpl
org.biojava.nbio.structure.symmetry.axis.AxisAligner <|-- org.biojava.nbio.structure.symmetry.axis.HelixAxisAligner
java.io.Serializable <|.. org.biojava.nbio.structure.ecod.EcodDomain
org.biojava.nbio.structure.ecod.Cloneable <|.. org.biojava.nbio.structure.ecod.EcodDomain
org.biojava.nbio.structure.ecod.StructureIdentifier <|.. org.biojava.nbio.structure.ecod.EcodDomain
java.io.Serializable <|.. org.biojava.nbio.structure.contact.ResidueIdentifier
java.io.Serializable <|.. org.biojava.nbio.structure.Model
org.biojava.nbio.structure.StructureIdentifier <|.. org.biojava.nbio.structure.SubstructureIdentifier
org.biojava.nbio.structure.align.util.AlignmentTools +.. org.biojava.nbio.structure.align.util.AlignmentTools.IdentityMap
org.biojava.nbio.structure.align.util.AbstractMap <|-- org.biojava.nbio.structure.align.util.AlignmentTools.IdentityMap
java.io.Serializable <|.. org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssembly
org.biojava.nbio.structure.domain.pdp.Comparable <|.. org.biojava.nbio.structure.domain.pdp.Domain
java.io.Serializable <|.. org.biojava.nbio.structure.domain.pdp.Domain
org.biojava.nbio.structure.io.mmcif.MMcifConsumer <|.. org.biojava.nbio.structure.io.mmcif.MetalBondConsumer
org.biojava.nbio.structure.io.LocalPDBDirectory <|-- org.biojava.nbio.structure.io.MMTFFileReader
java.io.Serializable <|.. org.biojava.nbio.structure.symmetry.core.QuatSymmetryParameters
org.biojava.nbio.structure.io.mmcif.model.AbstractBean <|-- org.biojava.nbio.structure.io.mmcif.model.StructNcsOper
java.io.Serializable <|.. org.biojava.nbio.structure.contact.AtomContact
org.biojava.nbio.structure.basepairs.BasePairParameters <|-- org.biojava.nbio.structure.basepairs.MismatchedBasePairParameters
java.io.Serializable <|.. org.biojava.nbio.structure.io.mmcif.model.DatabasePdbrevRecord
org.biojava.nbio.structure.PDBRecord <|.. org.biojava.nbio.structure.io.SSBondImpl
org.biojava.nbio.structure.io.Cloneable <|.. org.biojava.nbio.structure.io.SSBondImpl
org.biojava.nbio.structure.symmetry.internal.SymmetryRefiner <|.. org.biojava.nbio.structure.symmetry.internal.GraphComponentRefiner
org.biojava.nbio.structure.align.MultipleStructureAligner <|.. org.biojava.nbio.structure.align.multiple.mc.MultipleMcMain
org.biojava.nbio.structure.io.mmcif.model.AbstractBean <|-- org.biojava.nbio.structure.io.mmcif.model.StructSiteGen
java.io.Serializable <|.. org.biojava.nbio.structure.secstruc.Ladder
java.io.Serializable <|.. org.biojava.nbio.structure.io.mmcif.model.ChemCompDescriptor
org.biojava.nbio.structure.PDBRecord <|.. org.biojava.nbio.structure.PDBHeader
org.biojava.nbio.structure.ResidueRange <|-- org.biojava.nbio.structure.ResidueRangeAndLength
java.io.Serializable <|.. org.biojava.nbio.structure.PDBCrystallographicInfo
org.biojava.nbio.structure.io.LocalPDBDirectory <|-- org.biojava.nbio.structure.io.CifFileReader
org.biojava.nbio.structure.align.ce.CeParameters <|-- org.biojava.nbio.structure.align.ce.CECPParameters
org.biojava.nbio.structure.basepairs.BasePairParameters <|-- org.biojava.nbio.structure.basepairs.TertiaryBasePairParameters
org.biojava.nbio.structure.align.ce.CeUserArgumentProcessor <|-- org.biojava.nbio.structure.align.ce.CeSideChainUserArgumentProcessor
org.biojava.nbio.structure.io.mmcif.ChemCompProvider <|.. org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider
java.io.Serializable <|.. org.biojava.nbio.structure.cluster.SubunitClustererParameters
java.io.Serializable <|.. org.biojava.nbio.structure.align.helper.IndexPair
java.io.Serializable <|.. org.biojava.nbio.structure.cath.CathDomain
org.biojava.nbio.structure.StructureIdentifier <|.. org.biojava.nbio.structure.cath.CathDomain
org.biojava.nbio.structure.symmetry.internal.OrderDetector <|.. org.biojava.nbio.structure.symmetry.internal.GraphComponentOrderDetector
org.biojava.nbio.structure.align.ce.CeMain <|-- org.biojava.nbio.structure.align.ce.OptimalCECPMain
org.biojava.nbio.structure.io.LocalPDBDirectory <|-- org.biojava.nbio.structure.io.PDBFileReader
org.biojava.nbio.structure.Cloneable <|-- org.biojava.nbio.structure.Atom
org.biojava.nbio.structure.PDBRecord <|-- org.biojava.nbio.structure.Atom
java.io.Serializable <|-- org.biojava.nbio.structure.PDBRecord
org.biojava.nbio.structure.symmetry.geometry.Polyhedron <|.. org.biojava.nbio.structure.symmetry.geometry.Icosahedron
org.biojava.nbio.structure.io.Exception <|-- org.biojava.nbio.structure.io.PDBParseException
java.io.Serializable <|.. org.biojava.nbio.structure.secstruc.BetaBridge
org.biojava.nbio.structure.align.client.Comparable <|.. org.biojava.nbio.structure.align.client.StructureName
java.io.Serializable <|.. org.biojava.nbio.structure.align.client.StructureName
org.biojava.nbio.structure.StructureIdentifier <|.. org.biojava.nbio.structure.align.client.StructureName
org.biojava.nbio.structure.symmetry.core.QuatSymmetrySolver <|.. org.biojava.nbio.structure.symmetry.core.C2RotationSolver
java.io.Serializable <|.. org.biojava.nbio.structure.align.model.AFPChain
org.biojava.nbio.structure.align.model.Cloneable <|.. org.biojava.nbio.structure.align.model.AFPChain
org.biojava.nbio.structure.SeqMisMatch <|.. org.biojava.nbio.structure.SeqMisMatchImpl
java.io.Serializable <|.. org.biojava.nbio.structure.SeqMisMatchImpl
org.biojava.nbio.structure.Group <|-- org.biojava.nbio.structure.AminoAcid
java.io.Serializable <|.. org.biojava.nbio.structure.contact.AtomIdentifier
org.biojava.nbio.structure.quaternary.Cloneable <|.. org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation
org.biojava.nbio.structure.quaternary.Comparable <|.. org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation
org.biojava.nbio.structure.quaternary.Serializable <|.. org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation
org.biojava.nbio.structure.jama.Serializable <|.. org.biojava.nbio.structure.jama.EigenvalueDecomposition
org.biojava.nbio.structure.io.mmcif.MMcifConsumer <|.. org.biojava.nbio.structure.io.mmcif.ChemCompConsumer
java.io.Serializable <|.. org.biojava.nbio.structure.Author
org.biojava.nbio.structure.asa.AsaCalculator +.. org.biojava.nbio.structure.asa.AsaCalculator.AsaCalcWorker
org.biojava.nbio.structure.asa.Runnable <|.. org.biojava.nbio.structure.asa.AsaCalculator.AsaCalcWorker
org.biojava.nbio.structure.Chain <|.. org.biojava.nbio.structure.ChainImpl
org.biojava.nbio.structure.io.mmcif.model.AbstractBean <|-- org.biojava.nbio.structure.io.mmcif.model.StructRef
org.biojava.nbio.structure.StructureIdentifier <|.. org.biojava.nbio.structure.BioAssemblyIdentifier
java.util.concurrent.Callable <|.. org.biojava.nbio.structure.align.CallableStructureAlignment
java.io.Serializable <|.. org.biojava.nbio.structure.align.pairwise.AlternativeAlignment
org.biojava.nbio.structure.symmetry.geometry.Polyhedron <|.. org.biojava.nbio.structure.symmetry.geometry.Tetrahedron
org.biojava.nbio.structure.align.multiple.util.MultipleSuperimposer <|.. org.biojava.nbio.structure.align.multiple.util.ReferenceSuperimposer
java.io.Serializable <|.. org.biojava.nbio.structure.asa.GroupAsa
java.io.Serializable <|.. org.biojava.nbio.structure.scop.ScopDomain
org.biojava.nbio.structure.scop.Cloneable <|.. org.biojava.nbio.structure.scop.ScopDomain
org.biojava.nbio.structure.StructureIdentifier <|.. org.biojava.nbio.structure.scop.ScopDomain
java.io.Serializable <|.. org.biojava.nbio.structure.io.sifts.SiftsEntity
java.io.Serializable <|.. org.biojava.nbio.structure.secstruc.SecStrucElement
java.io.Serializable <|.. org.biojava.nbio.structure.ResidueNumber
org.biojava.nbio.structure.Comparable <|.. org.biojava.nbio.structure.ResidueNumber
org.biojava.nbio.structure.io.mmcif.model.AbstractBean <|-- org.biojava.nbio.structure.io.mmcif.model.DatabasePDBremark
java.io.Serializable <|.. org.biojava.nbio.structure.math.SparseSquareMatrix
java.io.Serializable <|.. org.biojava.nbio.structure.xtal.CrystalTransform
org.biojava.nbio.structure.io.mmcif.model.AbstractBean <|-- org.biojava.nbio.structure.io.mmcif.model.StructRefSeq
org.biojava.nbio.structure.align.multiple.ScoresCache <|-- org.biojava.nbio.structure.align.multiple.BlockSet
org.biojava.nbio.structure.symmetry.geometry.Polyhedron <|.. org.biojava.nbio.structure.symmetry.geometry.Octahedron
org.biojava.nbio.structure.io.mmcif.model.AbstractBean <|-- org.biojava.nbio.structure.io.mmcif.model.Exptl
java.io.Serializable <|.. org.biojava.nbio.structure.math.SparseVector
java.io.Serializable <|.. org.biojava.nbio.structure.io.sifts.SiftsResidue
org.biojava.nbio.structure.symmetry.geometry.Polyhedron <|.. org.biojava.nbio.structure.symmetry.geometry.Prism
org.biojava.nbio.structure.Structure <|.. org.biojava.nbio.structure.StructureImpl
java.io.Serializable <|.. org.biojava.nbio.structure.symmetry.utils.BlastClustReader
org.biojava.nbio.structure.geometry.SuperPositionAbstract <|-- org.biojava.nbio.structure.geometry.SuperPositionSVD
org.biojava.nbio.structure.Cloneable <|-- org.biojava.nbio.structure.Structure
java.io.Serializable <|-- org.biojava.nbio.structure.Structure
org.biojava.nbio.structure.align.multiple.util.MultipleSuperimposer <|.. org.biojava.nbio.structure.align.multiple.util.CoreSuperimposer
java.io.Serializable <|.. org.biojava.nbio.structure.contact.Contact
org.biojava.nbio.structure.PDBRecord <|.. org.biojava.nbio.structure.Site
org.biojava.nbio.structure.Comparable <|.. org.biojava.nbio.structure.Site
java.io.Serializable <|.. org.biojava.nbio.structure.contact.StructureInterface
org.biojava.nbio.structure.contact.Comparable <|.. org.biojava.nbio.structure.contact.StructureInterface
java.io.Serializable <|.. org.biojava.nbio.structure.xtal.CrystalCell
org.biojava.nbio.structure.align.ce.AbstractUserArgumentProcessor <|-- org.biojava.nbio.structure.align.seq.SmithWatermanUserArgumentProcessor
org.biojava.nbio.structure.align.seq.SmithWatermanUserArgumentProcessor +.. org.biojava.nbio.structure.align.seq.SmithWatermanUserArgumentProcessor.SmithWatermanStartupParams
org.biojava.nbio.structure.align.seq.StartupParameters <|-- org.biojava.nbio.structure.align.seq.SmithWatermanUserArgumentProcessor.SmithWatermanStartupParams
java.io.Serializable <|.. org.biojava.nbio.structure.domain.pdp.Segment
org.biojava.nbio.structure.domain.pdp.Comparable <|.. org.biojava.nbio.structure.domain.pdp.Segment
java.io.Serializable <|.. org.biojava.nbio.structure.contact.StructureInterfaceList
org.biojava.nbio.structure.contact.Iterable <|.. org.biojava.nbio.structure.contact.StructureInterfaceList
org.biojava.nbio.structure.HetatomImpl <|-- org.biojava.nbio.structure.secstruc.SecStrucGroup
org.biojava.nbio.structure.align.ce.UserArgumentProcessor <|.. org.biojava.nbio.structure.align.ce.AbstractUserArgumentProcessor
java.io.Serializable <|.. org.biojava.nbio.structure.secstruc.SecStrucInfo
java.io.Serializable <|.. org.biojava.nbio.structure.xtal.io.TreeMapSpaceGroupWrapper
org.biojava.nbio.structure.symmetry.internal.SymmetryAxes +.. org.biojava.nbio.structure.symmetry.internal.SymmetryAxes.Axis
org.biojava.nbio.structure.align.ce.ConfigStrucAligParams <|.. org.biojava.nbio.structure.align.seq.SmithWaterman3DParameters
java.io.Serializable <|.. org.biojava.nbio.structure.cath.CathSegment
org.biojava.nbio.structure.StructureIdentifier <|.. org.biojava.nbio.structure.URLIdentifier
org.biojava.nbio.structure.align.multiple.ScoresCache <|-- org.biojava.nbio.structure.align.multiple.MultipleAlignmentEnsemble
org.biojava.nbio.structure.jama.Serializable <|.. org.biojava.nbio.structure.jama.LUDecomposition
java.io.Serializable <|.. org.biojava.nbio.structure.EntityInfo
org.biojava.nbio.structure.align.StructureAlignment <|.. org.biojava.nbio.structure.align.AbstractStructureAlignment
org.biojava.nbio.structure.geometry.SuperPosition <|.. org.biojava.nbio.structure.geometry.SuperPositionAbstract
org.biojava.nbio.structure.io.mmcif.MMcifParser <|.. org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser
org.biojava.nbio.structure.align.ce.CeUserArgumentProcessor <|-- org.biojava.nbio.structure.align.ce.CeCPUserArgumentProcessor
org.biojava.nbio.structure.align.ce.CeCPUserArgumentProcessor +.. org.biojava.nbio.structure.align.ce.CeCPUserArgumentProcessor.CeCPStartupParams
org.biojava.nbio.structure.align.ce.CeStartupParams <|-- org.biojava.nbio.structure.align.ce.CeCPUserArgumentProcessor.CeCPStartupParams
java.io.Serializable <|.. org.biojava.nbio.structure.scop.ScopNode
org.biojava.nbio.structure.align.multiple.ScoresCache <|-- org.biojava.nbio.structure.align.multiple.Block
java.io.Serializable <|.. org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssemblyGen
org.biojava.nbio.structure.symmetry.misc.Comparable <|.. org.biojava.nbio.structure.symmetry.misc.ChainSignature
org.biojava.nbio.structure.io.mmcif.model.AbstractBean <|-- org.biojava.nbio.structure.io.mmcif.model.AtomSites
org.biojava.nbio.structure.align.multiple.ScoresCache <|.. org.biojava.nbio.structure.align.multiple.AbstractScoresCache
java.io.Serializable <|.. org.biojava.nbio.structure.io.mmcif.model.ChemCompBond
org.biojava.nbio.structure.geometry.SuperPositionAbstract <|-- org.biojava.nbio.structure.geometry.SuperPositionQCP
org.biojava.nbio.structure.Exception <|-- org.biojava.nbio.structure.StructureException
@enduml